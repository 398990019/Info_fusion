{
    "238194902": {
        "id": 238194902,
        "type": "Doc",
        "slug": "rzizefknzm6yg73o",
        "title": "Python学习类-梁治诚",
        "description": "行前有所思（当你开始做某件事情前，或许会有一些思考）关于python，我在尝试xxxxx（点明你选择的分支，你的学习方向，你有哪些操作）我提出或遇到的问题（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）一些总结又或许感悟（比较自由，也可以是你想与大家分享的内容）...",
        "cover": "",
        "user_id": 60742657,
        "book_id": 69189148,
        "last_editor_id": 60742657,
        "public": 2,
        "status": 0,
        "likes_count": 0,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 138,
        "created_at": "2025-09-24T02:26:53.000Z",
        "updated_at": "2025-09-24T02:32:33.000Z",
        "content_updated_at": "2025-09-24T02:32:33.000Z",
        "published_at": "2025-09-24T02:28:23.000Z",
        "first_published_at": "2025-09-24T02:27:15.850Z",
        "user": {
            "id": 60742657,
            "type": "User",
            "login": "asakii",
            "name": "梁治诚",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60742657/1757988220828-avatar/6544bab2-94f9-4fcd-a03b-50895ba9228d.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-15T02:40:02.000Z",
            "updated_at": "2025-09-20T07:09:59.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60742657,
            "type": "User",
            "login": "asakii",
            "name": "梁治诚",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60742657/1757988220828-avatar/6544bab2-94f9-4fcd-a03b-50895ba9228d.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-15T02:40:02.000Z",
            "updated_at": "2025-09-20T07:09:59.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "行前有所思\n\n~~（当你开始做某件事情前，或许会有一些思考）~~\n\n## 关于python，我在尝试xxxxx\n~~（点明你选择的分支，你的学习方向，你有哪些操作）~~\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 79772596646076723
    },
    "238134139": {
        "id": 238134139,
        "type": "Doc",
        "slug": "oyetx6d4sqhd0ta4",
        "title": "Python学习类-黄显峰",
        "description": "行前有所思关于python，我在尝试xxxxx我提出或遇到的问题一些总结又或许感悟",
        "cover": "",
        "user_id": 59195592,
        "book_id": 69189148,
        "last_editor_id": 59195592,
        "public": 2,
        "status": 1,
        "likes_count": 0,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 32,
        "created_at": "2025-09-23T14:35:43.000Z",
        "updated_at": "2025-09-23T15:26:08.000Z",
        "content_updated_at": "2025-09-23T15:26:07.000Z",
        "published_at": "2025-09-23T15:26:07.000Z",
        "first_published_at": "2025-09-23T15:26:07.414Z",
        "user": {
            "id": 59195592,
            "type": "User",
            "login": "ekddd",
            "name": "黄显峰",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-30T07:56:04.000Z",
            "updated_at": "2025-09-17T06:50:14.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59195592,
            "type": "User",
            "login": "ekddd",
            "name": "黄显峰",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-30T07:56:04.000Z",
            "updated_at": "2025-09-17T06:50:14.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n~~~~\n\n## 关于python，我在尝试xxxxx\n~~~~\n\n## 我提出或遇到的问题\n~~~~\n\n## 一些总结又或许感悟\n~~~~\n\n\n\n",
        "simhash": 76579719021470097
    },
    "238130345": {
        "id": 238130345,
        "type": "Doc",
        "slug": "wty8yvlute4ivhl7",
        "title": "Python学习类-文丞皓",
        "description": "行前有所思 为什么选择python学习类？我想有从功利角度和个人行事风格出发两个方面的理由，从功利角度来看，python的学习无论对于在校课程的提升还是个人能力的发展都有很大的帮助。从个人行事风格的角度出发，在成长的过程中我发现了一定的问题：我在制定目标是往往会出现自我预期过高，实现目标所需的...",
        "cover": "",
        "user_id": 58997108,
        "book_id": 69189148,
        "last_editor_id": 58997108,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 461,
        "created_at": "2025-09-23T14:01:24.000Z",
        "updated_at": "2025-09-23T23:16:53.000Z",
        "content_updated_at": "2025-09-23T23:14:51.000Z",
        "published_at": "2025-09-23T23:14:51.000Z",
        "first_published_at": "2025-09-23T23:14:51.482Z",
        "user": {
            "id": 58997108,
            "type": "User",
            "login": "yingziyu-jb00p",
            "name": "文丞皓",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/anonymous/1753348995017-bb41364d-65d1-4c03-ad65-ff8b403c59c9.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-24T09:24:39.000Z",
            "updated_at": "2025-09-20T05:30:19.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 58997108,
            "type": "User",
            "login": "yingziyu-jb00p",
            "name": "文丞皓",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/anonymous/1753348995017-bb41364d-65d1-4c03-ad65-ff8b403c59c9.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-24T09:24:39.000Z",
            "updated_at": "2025-09-20T05:30:19.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n    为什么选择python学习类？我想有从功利角度和个人行事风格出发两个方面的理由，从功利角度来看，python的学习无论对于在校课程的提升还是个人能力的发展都有很大的帮助。从个人行事风格的角度出发，在成长的过程中我发现了一定的问题：我在制定目标是往往会出现自我预期过高，实现目标所需的过程难以坚持，最初确立的学习动机难以长久支撑等多种问题，因而我认定我难以在对一件事情缺乏基本的，大体完整的认识之前制定出合理的计划并为之储备相应的技能，因而在学习初始阶段我会选择能迅速增加我的基础了解的任务以加快构建我的认知体系。学习类任务十分契合我当前渴望建立基本框架的思路。此外尝试一个全新的项目，然后一点点从中了解背后的只是，这样的见解或许是不完善的，但不可否认的是一个项目毕竟就是全局的微缩体现，这也符合我当前的状态。\n\n## 关于python，我在尝试xxxxx\n~~（点明你选择的分支，你的学习方向，你有哪些操作）~~\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 79772046881857841
    },
    "238127101": {
        "id": 238127101,
        "type": "Doc",
        "slug": "ovy91yc2gr1rmq7o",
        "title": "信息检索类-周静萱",
        "description": "问题1信息聚合平台 1.检索方式（信息来源渠道）1.行前班会PPT 2.转群群精华 3.课程公告栏 4.南哪助手 （时间久远，以上排序可能有误）2.获取的信息信息化中心首页: htp://itsc.nju.edu.cn/从未使用过。信息特征是多种公告。初步观察最有用的是信息化动态一栏，包括校园...",
        "cover": "",
        "user_id": 60264304,
        "book_id": 69189148,
        "last_editor_id": 60264304,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 2295,
        "created_at": "2025-09-23T13:34:50.000Z",
        "updated_at": "2025-09-24T01:51:03.000Z",
        "content_updated_at": "2025-09-24T01:36:57.000Z",
        "published_at": "2025-09-24T01:36:57.000Z",
        "first_published_at": "2025-09-23T14:38:19.148Z",
        "user": {
            "id": 60264304,
            "type": "User",
            "login": "tiandizhideng",
            "name": "周静萱251830158",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60264304/1756705375494-avatar/f388b66f-dee1-40b4-9b21-cbb5aa716c4a.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-01T04:40:38.000Z",
            "updated_at": "2025-09-18T11:55:55.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60264304,
            "type": "User",
            "login": "tiandizhideng",
            "name": "周静萱251830158",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60264304/1756705375494-avatar/f388b66f-dee1-40b4-9b21-cbb5aa716c4a.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-01T04:40:38.000Z",
            "updated_at": "2025-09-18T11:55:55.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 问题1\n## 信息聚合平台  \n### 1.检索方式（信息来源渠道）\n1.行前班会PPT  2.转群群精华 3.课程公告栏  4.南哪助手  （时间久远，以上排序可能有误）\n\n### 2.获取的信息\n| 信息化中心首页: htp://itsc.nju.edu.cn/ | 从未使用过。信息特征是多种公告。初步观察最有用的是信息化动态一栏，包括校园卡使用指南与南大学生可使用的免费正版软件汇总。令人意外的是服务相当全面，对一无所知的新生相当友好。 |\n| --- | --- |\n| 南京大学网上办事服务大厅: htps://ehall.nju.edu.cn | 服务最全的一个。可以在选课平台开之前看所有课程，培养方案等重要文件一键查找，囊括了几乎所有服务。 |\n| 南京大学APP | 最常用的。遗憾的是最有用的只是课表信息，新闻之类的看不看毫无影响。（当然服务还是很好用，可以快速进入智慧教学平台） |\n| 南哪助手 | 每一个南大人的丝滑入学小帮手。实用类信息居多，切合新生需求，无论是开学之前还是开学之后。还有一些学长学姐的文章（我在南哪做普通人）。 |\n| 南京大学官网: https:/ /www.nju.edu.cn | 从未使用x2，信息全面，表上其它大多是某一方面的专精，唯有在这个网站可以找到所有种类的信息。但全面只在种类，对于在校学生而言价值不如信息化中心，教务平台，办事服务大厅一类。适合校外人员快速了解。 |\n| 南大全球交流公众号 | 用于查找留学信息与国外交流信息。 |\n| 南京大学学生会公众号 | 发布各种活动公告，志愿者招募。但不知为何每次它发布之前我就已经知道了，使用体验来说即时性不强。 |\n| C语言课程信息汇集https://oj.cpl.icu/ | c语言的信息天堂。在这里你可以找到各种知识，入门引导以及学长学姐的共享知识。 |\n| 智汇南雍https://lms.nju.edu.cn/ | 课程平台。最大的用处是看作业交作业。 |\n| 本科生院https://jw.nju.edu.cn/ | 目前没用过x3。但猛然发现很重要，此网站的公告不再是可看可不看的官方公务文件（当然还是有），而是各种比赛通知，教务安排通知，课程通知。值得每天上去瞄一眼。 |\n| 五育https://ndwy.nju.edu.cn/ | 志愿者信息相对全，之所以是相对是因为目前来看不包括需要筛选or面试的志愿活动，比如挑战杯。 |\n\n\n\n\n### 3.在检索过程中遇到或提出的问题及我是如何应对的\n这一部分记忆有点模糊，这个问题算是我一开学就在整合的，因为在九月初就发现校内信息来源太多而且太散，为了防止遗忘就整合成了一个文档。\n\n1.遇到的第一个问题是行前班会上导员直接甩过来占满一页PPT的网站。我在手打到第二个网站时猛然发现这样极其低效（其实是懒得打了），于是开始求助人工智能，使用了QQ的文字提取，成功把打字简化成了复制粘贴。\n\n2.随之而来的是第二个问题，这人工智能极其不智能，对着一页机打的PPT都能提取错误。尝试了锐化裁剪后无果，但在点进导员发的PPT文件时对比了一下，发现手机截图的清晰度低于原版，问题在下载原版电脑截图后得到解决。\n\n3.仍待解决的第三个问题，解决掉第二个问题之后我陷入了深深的沉思，因为这样非常不方便。提取文字对于图片的清晰度要求过高且文字截断并不智能，对于手写字体的识别错误率更是高得离谱。寻找新的人工智能无果，对于提取文字的需求仍未解决。\n\n4.这个不能算检索问题，可以算是未解决/解决一部分的使用类问题：部分网站的登录状态无法保存。发现每次进网站都要重新输账号密码之后，我尝试收藏已登录状态的网站（在此之前发现了收藏是对当前界面的存档），大部分网站的登录问题得到解决，但少部分网站仍负隅顽抗，虽然可以保存账号密码，但每次输验证码仍然烦躁。\n\n### 4.检索后我的收获（针对检索结果信息整合）\n比起收获或许更像感想。第一个想法是，nju信息平台太多了，信息分布得也太散，且各个平台之间信息和服务都有很多重合。第二是发现自己在整合信息进行总结时非常苦手，最后写出来的比起总结更像是使用评测，或者说是把认为没用的都扔掉只留下觉得有用的部分。第三在总结过程中发现了一些有用但之前完全没注意过的信息源。\n\n\n\n## 问题2 大学数学怎么学\n在B站找到一个视频\n\n● 找到B站视频下载工具或者Python代码，将视频下载下来\n\n● 找到从MP4中提取音频的工具或Python代码，将视频中的音轨提取出来\n\n● 找到语音转文字的工具或Python代码，将视频转成文档\n\n● 使用LLM总结文档\n\n### 1.检索方式（信息来源渠道）\n1.B站 2.窥视群聊（无意间） 3.知乎  4.DS 5.秘塔\n\n### 2.获取的信息\n1.B站&群聊\n\n\n\n### 3.在检索过程中遇到或提出的问题及我是如何应对的\n### 4.检索后我的收获（针对检索结果信息整合）\n\n\n## 问题3 怎么锻炼英语听力\n### 1.检索方式（信息来源渠道）\n### 2.获取的信息\n### 3.在检索过程中遇到或提出的问题及我是如何应对的\n### 4.检索后我的收获（针对检索结果信息整合）\n## 问题4 怎么锻炼英语口语\n### 1.检索方式（信息来源渠道）\n### 2.获取的信息\n### 3.在检索过程中遇到或提出的问题及我是如何应对的\n### 4.检索后我的收获（针对检索结果信息整合）\n## 问题5 如何寻找实践编程的机会\n### 1.检索方式（信息来源渠道）\n### 2.获取的信息\n### 3.在检索过程中遇到或提出的问题及我是如何应对的\n### 4.检索后我的收获（针对检索结果信息整合）\n## 问题6 时间太少事情太多如何分配精力\n### 1.检索方式（信息来源渠道）\n### 2.获取的信息\n### 3.在检索过程中遇到或提出的问题及我是如何应对的\n### 4.检索后我的收获（针对检索结果信息整合）\n## 问题7 如何治疗失眠/提高睡眠质量\n### 1.检索方式（信息来源渠道）\n### 2.获取的信息\n### 3.在检索过程中遇到或提出的问题及我是如何应对的\n### 4.检索后我的收获（针对检索结果信息整合）\n\n\n## 问题8 如何从纸张学习转入无纸化学习\n### 1.检索方式（信息来源渠道）\n### 2.获取的信息\n### 3.在检索过程中遇到或提出的问题及我是如何应对的\n### 4.检索后我的收获（针对检索结果信息整合）\n\n\n## 问题9 如何快速起床\n### 1.检索方式（信息来源渠道）\n### 2.获取的信息\n### 3.在检索过程中遇到或提出的问题及我是如何应对的\n### 4.检索后我的收获（针对检索结果信息整合）\n## 问题10 如何克服拖延症\n### 1.检索方式（信息来源渠道）\n### 2.获取的信息\n### 3.在检索过程中遇到或提出的问题及我是如何应对的\n### 4.检索后我的收获（针对检索结果信息整合）\n## <font style=\"color:#2F8EF4;\">一番检索后，我对于信息检索的感悟</font>\n~~（内容开放，可以是情感发泄，个人收获，当然也可以留白，行使不做的权利）~~\n\n",
        "simhash": 585229165626894663
    },
    "238126052": {
        "id": 238126052,
        "type": "Doc",
        "slug": "fi2vse22x8czlu2q",
        "title": "信息检索类-李舶宁",
        "description": "1.bilibili视频 大学数学怎么学这里以up“漫士沉思录”深入讲解行列式的视频为例Step1.下载音频打开页面源代码直接搜索audio可以看到在audio后面跟上了很长一串链接，我们暂且认为这就是音频链接接下来我们用简单的爬虫代码去实现ps.这里最好带上referer防盗链否则得不到音频...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/60827017/1758633933192-564fb771-4903-4a8c-95a6-b4a3bd30bde5.png",
        "user_id": 60827017,
        "book_id": 69189148,
        "last_editor_id": 60827017,
        "public": 2,
        "status": 1,
        "likes_count": 0,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 457,
        "created_at": "2025-09-23T13:25:31.000Z",
        "updated_at": "2025-09-23T13:45:48.000Z",
        "content_updated_at": "2025-09-23T13:28:34.000Z",
        "published_at": "2025-09-23T13:45:47.000Z",
        "first_published_at": "2025-09-23T13:25:37.256Z",
        "user": {
            "id": 60827017,
            "type": "User",
            "login": "abelin",
            "name": "李舶宁",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-17T09:22:35.000Z",
            "updated_at": "2025-09-23T13:10:41.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60827017,
            "type": "User",
            "login": "abelin",
            "name": "李舶宁",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-17T09:22:35.000Z",
            "updated_at": "2025-09-23T13:10:41.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "**1.bilibili视频 大学数学怎么学**\n\n这里以up“漫士沉思录”深入讲解行列式的视频为例\n\n**Step1.下载音频**\n\n打开页面源代码直接搜索audio\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60827017/1758633933192-564fb771-4903-4a8c-95a6-b4a3bd30bde5.png)\n\n可以看到在audio后面跟上了很长一串链接，我们暂且认为这就是音频链接\n\n接下来我们用简单的爬虫代码去实现\n\nps.这里最好带上referer防盗链否则得不到音频\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60827017/1758633933458-a0d25ee3-e74d-4e55-ae40-6aa6291b3cd4.png)\n\n可以看到，程序执行后在电脑中出现了这样一个文件，我们使用自带播放器Window Media Player即可正常播放，可见刚刚的暂且认为是正确的\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60827017/1758633933685-75633426-43c1-40e7-b503-d197c67378d9.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/jpeg/60827017/1758633934137-f81fe6bc-44d5-4763-88e3-163d85baf30b.jpeg)\n\n**Step2.语音转文字**\n\n在B站上看到了一条评论内容如下\n\n![](https://cdn.nlark.com/yuque/0/2025/jpeg/60827017/1758633934494-77af5913-1084-4473-bd22-26cf2c9a7d99.jpeg)\n\n我们照他的建议找到这样一款大模型并开始转换，但拖拽之后发现格式错误，于是将扩展名加了个.mp3，并将播放器改为媒体播放器\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60827017/1758633934817-85e172e9-369e-4979-a2c6-6e8c88dcea1f.png)\n\n这一次很成功。\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60827017/1758633935182-59b21ea1-713f-490d-9d17-8d0dbe750f58.png)\n\n我们来看看转换后的结果\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60827017/1758633935560-30bfb2a3-4ef9-4b7e-921c-7eebf09fb87c.png)\n\n可以看到，原来音频中的文字被准确提取出来，甚至自动生成了摘要\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60827017/1758633935948-07638071-923a-483b-8932-1f654538a9bf.png)\n\n这样我们便成功提取出了一个bilibili视频中的内容概要\n\n其实这两步的实现方式均不唯一，本文只是给出了相对较简单的一种实现方式，将一些步骤合并了起来，尤其是第二步，这个大模型操作简单，功能齐全且极易上手，避免了一些国外大模型需要找官网，解压缩包，移文件夹的复杂操作，这里强烈推荐\n\n\n\n有人知道怎么添加视频和音频到语雀吗，用word和markdown都显示不出来\n\n\n\n\n\n",
        "simhash": 6551066678189414130
    },
    "238122541": {
        "id": 238122541,
        "type": "Doc",
        "slug": "aoh6x55x5g4zua9h",
        "title": "Python学习类-仇闰之",
        "description": "行前有所思选择python学习主要是因为我觉得在学习过程中信息检索和使用工具技巧的能力都可以得到锻炼，事实上这三者也并不是割裂的关系，另外两种能力的最终目标也是要应用与学习嘛。而且，我还是对于具体的知识更感兴趣。关于python，我在尝试xxxxx（点明你选择的分支，你的学习方向，你有哪些操作...",
        "cover": "",
        "user_id": 59083683,
        "book_id": 69189148,
        "last_editor_id": 59083683,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 213,
        "created_at": "2025-09-23T12:56:04.000Z",
        "updated_at": "2025-09-23T15:20:14.000Z",
        "content_updated_at": "2025-09-23T15:20:14.000Z",
        "published_at": "2025-09-23T15:20:14.000Z",
        "first_published_at": "2025-09-23T15:07:21.106Z",
        "user": {
            "id": 59083683,
            "type": "User",
            "login": "yuqueyonghuubxtsv",
            "name": "仇闰之",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59083683/1753599345734-avatar/1d77fee7-cfcf-43b8-84f5-253d5ff4bffe.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-27T06:55:09.000Z",
            "updated_at": "2025-09-21T02:29:48.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59083683,
            "type": "User",
            "login": "yuqueyonghuubxtsv",
            "name": "仇闰之",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59083683/1753599345734-avatar/1d77fee7-cfcf-43b8-84f5-253d5ff4bffe.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-27T06:55:09.000Z",
            "updated_at": "2025-09-21T02:29:48.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n选择python学习主要是因为我觉得在学习过程中信息检索和使用工具技巧的能力都可以得到锻炼，事实上这三者也并不是割裂的关系，另外两种能力的最终目标也是要应用与学习嘛。而且，我还是对于具体的知识更感兴趣。\n\n## 关于python，我在尝试xxxxx\n~~（点明你选择的分支，你的学习方向，你有哪些操作）~~\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 79772047961891121
    },
    "238121334": {
        "id": 238121334,
        "type": "Doc",
        "slug": "hr0h66ce5dbs4zk1",
        "title": "蔡子奇",
        "description": "轻量化学习技术前置原则：技术不可放弃学习技术的目的：大概听懂做技术的人在谈些什么。评估可行性和成本。识别机会和风险一些方法广泛阅读和接触（包括播客、技术文档、代码审查 Code Review）多问技术人员问题试试看课程（而不是看书）做一些实现待补充方法论层面维度站高一点，不需要理解为什么行得通...",
        "cover": "",
        "user_id": 46824131,
        "book_id": 69189148,
        "last_editor_id": 46824131,
        "public": 2,
        "status": 1,
        "likes_count": 0,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 197,
        "created_at": "2025-09-23T12:47:09.000Z",
        "updated_at": "2025-09-23T15:26:28.000Z",
        "content_updated_at": "2025-09-23T13:09:03.000Z",
        "published_at": "2025-09-23T15:26:28.000Z",
        "first_published_at": "2025-09-23T13:09:02.891Z",
        "user": {
            "id": 46824131,
            "type": "User",
            "login": "zaccai",
            "name": "蔡子奇",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2024/png/46824131/1729432005263-avatar/d42c60ac-3f55-4916-805a-fc3d97b4dd81.png",
            "followers_count": 1,
            "following_count": 0,
            "public": 1,
            "description": "Bio: 南京大学大一技术科学试验班在读\n来悟单词书项目主管\ne人相信静水流深",
            "created_at": "2024-07-24T05:24:17.000Z",
            "updated_at": "2025-09-19T12:25:11.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 46824131,
            "type": "User",
            "login": "zaccai",
            "name": "蔡子奇",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2024/png/46824131/1729432005263-avatar/d42c60ac-3f55-4916-805a-fc3d97b4dd81.png",
            "followers_count": 1,
            "following_count": 0,
            "public": 1,
            "description": "Bio: 南京大学大一技术科学试验班在读\n来悟单词书项目主管\ne人相信静水流深",
            "created_at": "2024-07-24T05:24:17.000Z",
            "updated_at": "2025-09-19T12:25:11.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "**轻量化学习技术**\n\n前置原则：技术不可放弃\n\n学习技术的目的：大概听懂做技术的人在谈些什么。评估可行性和成本。识别机会和风险\n\n\n\n一些方法\n\n+ 广泛阅读和接触（包括播客、技术文档、代码审查 Code Review）\n+ 多问技术人员问题\n+ 试试看课程（而不是看书）\n+ 做一些实现\n+ 待补充\n\n\n\n方法论层面\n\n+ 维度站高一点，不需要理解为什么行得通，为什么行不通。理解能做什么即可（关注连接、交互，而不是黑箱内的原理）\n+ 从现实问题出发，而不是从技术原理/课程出发\n+ 抽象 Abstraction\n\n\n\n[https://g.co/gemini/share/3f205c2e7dee](https://g.co/gemini/share/3f205c2e7dee)\n\n",
        "simhash": 4072551298131287840
    },
    "238120741": {
        "id": 238120741,
        "type": "Doc",
        "slug": "dcbvgqx1904u08sg",
        "title": "Python学习类-闫铭宇",
        "description": "行前有所思关于python，我在尝试xxxxx分支2：我提出或遇到的问题（一些总结又或许感悟",
        "cover": "",
        "user_id": 60741191,
        "book_id": 69189148,
        "last_editor_id": 60741191,
        "public": 2,
        "status": 0,
        "likes_count": 0,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 37,
        "created_at": "2025-09-23T12:42:14.000Z",
        "updated_at": "2025-09-23T13:16:37.000Z",
        "content_updated_at": "2025-09-23T12:57:23.000Z",
        "published_at": "2025-09-23T12:45:51.000Z",
        "first_published_at": "2025-09-23T12:43:09.745Z",
        "user": {
            "id": 60741191,
            "type": "User",
            "login": "u59061793",
            "name": "闫铭宇",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-15T00:39:25.000Z",
            "updated_at": "2025-09-15T11:18:42.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60741191,
            "type": "User",
            "login": "u59061793",
            "name": "闫铭宇",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-15T00:39:25.000Z",
            "updated_at": "2025-09-15T11:18:42.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "**<font style=\"color:rgb(38, 38, 38);\">行前有所思</font>**\n\n<font style=\"color:rgb(38, 38, 38);\"></font>\n\n**<font style=\"color:rgb(38, 38, 38);\">关于python，我在尝试xxxxx</font>**\n\n<font style=\"color:rgb(38, 38, 38);\">分支2：</font>\n\n**<font style=\"color:rgb(38, 38, 38);\">我提出或遇到的问题</font>**~~<font style=\"color:rgb(38, 38, 38);\">（</font>~~\n\n**<font style=\"color:rgb(38, 38, 38);\">一些总结又或许感悟</font>**~~<font style=\"color:rgb(38, 38, 38);\"></font>~~\n\n  \n \n\n",
        "simhash": 15518345348058795562
    },
    "238119173": {
        "id": 238119173,
        "type": "Doc",
        "slug": "gkvk67y627v9t90o",
        "title": "Python学习类-孙晨",
        "description": "行前有所思（当你开始做某件事情前，或许会有一些思考）上次因为开学典礼没能参加活动的后遗症来了（悲），因为上次的任务不确定是否正确完成，不清楚是否下全了所有资源，导致只能做任务1了（虽然本来也打算做分支一）关于python，我在尝试构建自主性学习Python的学习框架（点明你选择的分支，你的学习...",
        "cover": "",
        "user_id": 60741826,
        "book_id": 69189148,
        "last_editor_id": 60741826,
        "public": 2,
        "status": 1,
        "likes_count": 0,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 874,
        "created_at": "2025-09-23T12:29:51.000Z",
        "updated_at": "2025-09-23T13:39:37.000Z",
        "content_updated_at": "2025-09-23T13:39:37.000Z",
        "published_at": "2025-09-23T13:39:37.000Z",
        "first_published_at": "2025-09-23T12:32:01.299Z",
        "user": {
            "id": 60741826,
            "type": "User",
            "login": "sunchen-7xbid",
            "name": "孙晨",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-15T01:40:18.000Z",
            "updated_at": "2025-09-23T12:27:01.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60741826,
            "type": "User",
            "login": "sunchen-7xbid",
            "name": "孙晨",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-15T01:40:18.000Z",
            "updated_at": "2025-09-23T12:27:01.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n~~（当你开始做某件事情前，或许会有一些思考）~~\n\n~~上次因为开学典礼没能参加活动的后遗症来了（悲），因为上次的任务不确定是否正确完成，不清楚是否下全了所有资源，导致只能做任务1了~~（虽然本来也打算做分支一）\n\n## 关于python，我在尝试构建自主性学习Python的学习框架\n~~（点明你选择的分支，你的学习方向，你有哪些操作）~~\n\n1.数据类型与基本的输入输出（理解整型，实型，字符串型......并可以理解float,int,print与input等函数的作用）\n\n2.数据组合与基本运算（理解字典，列表，元组，字符串的建立，切片，修改等操作并知悉基本运算符与逻辑运算符的优先级等特点）\n\n3.基本结构与流程（初识分支，嵌套，循环等结构并可以通过阅读简单程序知晓运行结果）\n\n4.函数的创建与使用（初识函数的创建并能够简单调用turtle等模块）\n\n5.进阶的函数使用（使用pandas等函数实现对excel表格等形式的创建，修改等操作）\n\n6.关于网络，框架，数据库等（到达搭建小服务器，web框架，sqlite数据库的境界）\n\n7.更高级的应用，以后再来探索吧！（未完待续）\n\n\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n由于对python的认识不深，简单的翻阅参考书或是看ai的解答总有些雾里看花的朦胧感，能搭建以上框架还得感激高中信息技术教材，对于高级的应用没有什么概念，知道python用于爬取数据，搭建ai模型等不代表理解这种境界的层次，所以难以融入到初学者的框架，这种框架的完备性与逻辑性必然有很大的缺陷。\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n观前提醒：以下内容均为本人发牢骚，内有负面情绪，可能影响您的心情，请选择性阅读。\n\n~~每次在群里看大家聊天都感觉大家都好厉害，完全看不懂他们在说什么。鉴于本人的计算机基础趋向于零，经常问一些比较蠢的问题，并且没完没了，被学长认为问题没有诚意。经反思，在学习python前，或许还是要先去进修计算机的基本使用和命令提示符的使用（悲，我还是太菜了）。并且感觉现在的编程课也缺少有关内容的教学（从课程群里一堆不同的关于环境搭建的疑问可见一斑）。从高中到大学的转变还是猝不及防啊，对于自学能力的要求简直是指数级别的增长（大悲）。~~\n\n",
        "simhash": 4700482925468454963
    },
    "238108899": {
        "id": 238108899,
        "type": "Doc",
        "slug": "pq4drgd6gu3q227m",
        "title": "Python学习类-邓皓心",
        "description": "行前有所思首先我从三个方面考虑了自己的python学习目的：专业刚需：自动化机器人方向依赖Python进行算法开发（如ROS、OpenCV），掌握它才能高效完成专业任务。学习破局：通过NOVA社团的具体项目实践，用实战（如爬虫、网页开发）培养独立编程能力，而非疲于记语法。科研赋能：为未来课题组...",
        "cover": "",
        "user_id": 60977116,
        "book_id": 69189148,
        "last_editor_id": 60977116,
        "public": 2,
        "status": 1,
        "likes_count": 0,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 1091,
        "created_at": "2025-09-23T11:13:31.000Z",
        "updated_at": "2025-09-23T13:56:51.000Z",
        "content_updated_at": "2025-09-23T13:56:23.000Z",
        "published_at": "2025-09-23T13:56:23.000Z",
        "first_published_at": "2025-09-23T13:56:22.814Z",
        "user": {
            "id": 60977116,
            "type": "User",
            "login": "yktyvxin",
            "name": "邓皓心",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-21T13:42:13.000Z",
            "updated_at": "2025-09-23T10:53:38.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60977116,
            "type": "User",
            "login": "yktyvxin",
            "name": "邓皓心",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-21T13:42:13.000Z",
            "updated_at": "2025-09-23T10:53:38.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n<font style=\"color:rgba(0, 0, 0, 0.88);\">首先我从三个方面考虑了自己的python学习目的：</font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">专业刚需：</font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">自动化机器人方向依赖Python进行算法开发（如ROS、OpenCV），掌握它才能高效完成专业任务。</font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">学习破局</font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">：通过NOVA社团的具体项目实践，用实战（如爬虫、网页开发）培养独立编程能力，而非疲于记语法。</font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">科研赋能</font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">：为未来课题组的数据处理、竞赛项目搭建技术基础，避免“想不到又写不出”的困境。</font>\n\n<font style=\"color:rgba(0, 0, 0, 0.88);\">作为编程新手，我其实有过很多尝试学习python的经历。可这些学习就像是反复把语法知识记过来记过去，根本没有转化成独立应用的能力，写过的代码也基本全靠模仿。我知道必须转变学习方法，但却始终找不到恰当的学习方法。选择NOVA社团的Python实战分支5，是希望改变过去一味接受知识的记背式状态。通过✓ </font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">问题驱动学习</font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">：针对具体语法突破实现灵活运用✓ </font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">可验证进步</font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">：每个阶段产出小型代码成果✓ </font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">社会化学习</font>**<font style=\"color:rgba(0, 0, 0, 0.88);\">：利用小组协作倒逼输出。能将自己所学应用于特定场景，做到“会用”而不是“学过”。</font>\n\n## 关于python，我在尝试从实践操作中理解代码逻辑\n暑假期间我自主跟随课程每天花3个小时学习python，但是效果都不怎么好，常常跟不上老师的进度，语法知识太多消化不了，疲于记笔记等等。我知道自己最为缺乏的就是实践，于是我尝试去模仿老师的小项目，最开始只是复刻，比如游戏充值指令、进度条函数、机器二分法猜数字、倒序99乘法表、用类来构造“动物园”。然后我开始在这些代码框架上修改参数，并逐步添加自己所写的新的代码。后来在C语言的学习过程中，我开始学会<font style=\"color:rgba(0, 0, 0, 0.88);\">使用AI工具辅助查漏补缺，</font>让其查看我出现问题的代码并为我添加注释。在不断复盘之中，我常常能领悟一些混淆的知识点和语法逻辑，通过向AI提问，我实现了对自己学习过程中所得认知的验证。\n\n## 我提出或遇到的问题\n模仿式学习并未能让我走远，很大一个问题在于：脱离了模板我会变得无从下手。我缺乏凭空构建项目代码的框架，更欠缺从0写出所需代码的能力体系。当实践操作停滞期长一些时，<font style=\"color:rgba(0, 0, 0, 0.88);\">我就会陷入“学完就忘、写不出代码”的困境——课程节奏太快，内容过于理论化，面对空白编辑器毫无思路。我尝试过通过LeetCode刷题作为定期性实操的方法，但是凭借有限的知识又很难编写甚至理解上面的题目。此外，对于GitHub这样的平台、“插件”“仓库”等词汇我也不甚了解，常常在讨论中难以融入语言环境。</font>\n\n## 一些总结又或许感悟\n<font style=\"color:rgba(0, 0, 0, 0.88);\">如何从“看懂”进阶到“写出来”，从容应对自动化专业和科研中的编程需求？如何在试错成本和时间成本越来越高的现阶段高效率地学习python和编写代码，不至于一个基础项目都要花一整个上下午，质量还不尽人意？以怎样的具体硬件和科研问题为导向？如何看到需求就能条件反射式地拆解出函数结构，并快速用Python实现原型？这些都需要我在漫长而不间断的实战中一点点敲除“肌肉记忆”。</font>\n\n",
        "simhash": 7415141576215061722
    },
    "238096564": {
        "id": 238096564,
        "type": "Doc",
        "slug": "kavkm7s7g5gtds20",
        "title": "Python学习类-汪文研",
        "description": "行前有所思感觉目前学到的编程课和现实生产实际中的编程大有不同，现实中的编程似乎有着很多的辅助工具。比如在开甲群里看到有oi大佬说写代码按tabtabtab就写完了（小白回去试了下发现按tab无事发生），再比如看到了这个网站https://pythontutor.com/python-compi...",
        "cover": "",
        "user_id": 60200808,
        "book_id": 69189148,
        "last_editor_id": 60200808,
        "public": 2,
        "status": 1,
        "likes_count": 0,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 319,
        "created_at": "2025-09-23T09:39:49.000Z",
        "updated_at": "2025-09-23T10:34:22.000Z",
        "content_updated_at": "2025-09-23T10:07:00.000Z",
        "published_at": "2025-09-23T10:07:00.000Z",
        "first_published_at": "2025-09-23T10:07:00.198Z",
        "user": {
            "id": 60200808,
            "type": "User",
            "login": "yuqueyonghu8igxtr",
            "name": "汪文研 25 计科",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-29T21:47:06.000Z",
            "updated_at": "2025-09-23T09:16:31.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60200808,
            "type": "User",
            "login": "yuqueyonghu8igxtr",
            "name": "汪文研 25 计科",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-29T21:47:06.000Z",
            "updated_at": "2025-09-23T09:16:31.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n感觉目前学到的编程课和现实生产实际中的编程大有不同，现实中的编程似乎有着很多的辅助工具。\n\n比如在开甲群里看到有oi大佬说写代码按tabtabtab就写完了（小白回去试了下发现按tab无事发生），再比如看到了这个网站[https://pythontutor.com/python-compiler.html#mode=edit](https://pythontutor.com/python-compiler.html#mode=edit)，提供了可视化运行代码的工具以及ai辅助修改。\n\n而小白还停留在手敲代码，出bug了自己用眼睛看哪里有问题、怎么改的地步，出于一种非常好奇的心态，我想要了解一下VScode的辅助技巧。\n\n## 关于python，我在尝试xxxxx\n#### 分支4：熟练使用IDE-VSCode\n~~选择本分支的同学，请探索新手实用的VSCode技巧（不少于10个）~~\n\n~~请通过录屏的方式展示技巧~~\n\n~~~~\n\n\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 9300874963399909681
    },
    "238074875": {
        "id": 238074875,
        "type": "Doc",
        "slug": "vmpyt0g2prxnr8zw",
        "title": "Python学习类-于粤铭",
        "description": "行前有所思哎呀毕竟我们专业就要求学python嘛，也算是为后面参加一些比赛项目啥的做准备（？）反正我是选择了继续和我可怜的py鏖战。然后开始思考这回选择哪个分支，然后在看到分支二的时候瞬间心动。因为就我本人而言，我其实也浅浅思考过在AI完全可以写出很好的代码的情况下，我们为什么还要学习pyth...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/59892417/1758637014841-7a7df18a-1599-4ad9-853c-6a2b033a05da.png",
        "user_id": 59892417,
        "book_id": 69189148,
        "last_editor_id": 59892417,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 1330,
        "created_at": "2025-09-23T07:58:06.000Z",
        "updated_at": "2025-09-24T02:46:55.000Z",
        "content_updated_at": "2025-09-24T02:46:55.000Z",
        "published_at": "2025-09-24T02:46:55.000Z",
        "first_published_at": "2025-09-23T08:14:27.684Z",
        "user": {
            "id": 59892417,
            "type": "User",
            "login": "yvette-lo3yv",
            "name": "于粤铭",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59892417/1757151031095-avatar/5e7df439-2087-41fa-a3d7-5ad122e13b0a.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-20T02:50:12.000Z",
            "updated_at": "2025-09-16T08:55:01.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59892417,
            "type": "User",
            "login": "yvette-lo3yv",
            "name": "于粤铭",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59892417/1757151031095-avatar/5e7df439-2087-41fa-a3d7-5ad122e13b0a.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-20T02:50:12.000Z",
            "updated_at": "2025-09-16T08:55:01.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n哎呀毕竟我们专业就要求学python嘛，也算是为后面参加一些比赛项目啥的做准备（？）反正我是选择了继续和我可怜的py鏖战。\n\n然后开始思考这回选择哪个分支，然后在看到分支二的时候瞬间心动。因为就我本人而言，我其实也浅浅思考过在AI完全可以写出很好的代码的情况下，我们为什么还要学习python之类的编程语言。而且这个问题我至今没有找到答案。\n\n我会倾向于认为，在这个AI盛行的时代，打着自主学习的名号，完全对AI说不，是一种非常愚蠢的行为。毕竟工具的存在就是为了使人类的各项活动更为高效。有了更好的工具却拒绝使用只会使自己的效率减低。让AI代替人脑进行思考的确有害于自我能力的培养，但是用AI辅助学习则是使获得指导更为方便更为个性化的好方法。\n\n## 关于python，我在尝试探索在AI的辅助下学习Python的可行性（分支二）\n<font style=\"color:#270070;\">选择本分支的同学，请尝试使用AI辅助学习Python。请撰写文档说明操作过程，具体包括：</font>\n\n+ <font style=\"color:#270070;\">使用的AI工具</font>\n+ <font style=\"color:#270070;\">希望AI实现的具体需求（下文会给一些具体场景，可参考）</font>\n+ <font style=\"color:#270070;\">输入的Prompt</font>\n+ <font style=\"color:#270070;\">调试过程</font>\n+ <font style=\"color:#270070;\">AI的输出结果</font>\n+ <font style=\"color:#270070;\">对使用AI编程的自我评价</font>\n+ <font style=\"color:#270070;\">其他你觉得可以分享的内容</font>\n\n##### 分支2.1：使用AI进行一次Debug\n<font style=\"color:#270070;\">当程序运行出现BUG后，请使用AI工具辅助进行Debug，并记录过程</font>\n\n##### 分支2.2：使用AI生成作业的代码\n<font style=\"color:#270070;\">对某项作业或者某道习题，请使用AI进行一次编写，并和自己的代码进行比对，对比后谈一谈心得</font>\n\n##### 分支2.3：使用AI解读实践组上周代码\n<font style=\"color:#270070;\">当想对他人代码进行局部修改时，首先需要能读懂他人的代码结构，请试一试</font>\n\n这回我选择了yzy的代码进行尝试。然后将代码扔给了ds老师。\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758637014841-7a7df18a-1599-4ad9-853c-6a2b033a05da.png)\n\n<font style=\"color:#270070;\">结果我这样提问后发现，ds老师说的我有点看不懂</font>~~（菜菜的没办法啦）~~\n\n所以不得不二次提问，强调我很菜（）\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758637734911-b5feb1a7-446d-496a-b92f-8b2a18e1bfac.png)\n\n这回至少ds老师的答案我能看懂啦~\n\n以下是ds老师的答案~\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758637958476-790047af-8970-4a16-a67a-a60d99f2bc5b.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758637977059-1d1809d8-307e-456e-b614-6dff672084b6.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758637993726-21d70a94-e56b-4c6e-9718-30103c92147a.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758638018800-a759cbdd-82a0-4f75-82d7-10dde4f91ae7.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758638035346-302e4949-6f3f-4323-8d40-e01c698fb5ef.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758638062764-22289d4f-37af-4895-970e-e60abb32c41f.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758638075196-c4aef4a2-62e9-4902-9159-ba41e3385a60.png)\n\n很好，这下终于能看懂大佬的代码啦~\n\n不得不说，和AI强调一下小白的身份还是很重要的，非常有利于你获取一份是人都能看懂的answer。\n\n然后关于效率：显然是提高效率的好方法啊，要是没有aAI，可能我读懂这段代码的方式只有对着这些字符一字一句的翻书，现在我相当于省去了自己翻书的步骤，直接看到了对应的页码，还有人帮你标好了重点，效率当然大大提高啦~\n\n##### 分支2.4：解析代码\n<font style=\"color:#270070;\">当阅读代码遇到不懂的地方，请尝试使用AI列举出该段代码背后的知识点，并进行二次检索，使用AI或者搜索引擎将需要学习的知识点以适当的方式呈现，评估并记录学习时间和效率</font>\n\n这回我选择了nrx同学的代码。为了方便呈现任务，我决定挑选一段知识点涵盖较多的。\n\n老规矩，还是扔给ds老师。下图是我的提问。（照样，强调一下初学者身份）\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758680210076-12568775-53ee-4843-9295-ecf062a1362b.png)\n\n下面是ds老师的部分回答。\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758680313313-cb2111ca-5641-441b-a23a-f56566732fb2.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758680410699-71697154-0fed-4c44-aef3-5885af72e231.png)\n\n但是呢，可以看到，ds老师的答案其实有点粗略，并不适合学习使用。我需要进行二次提问。这一次我选择在粗略浏览第一次的answer后就具体的point进行更为细节的提问。\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681155200-e883aff0-f56f-4c75-8a1d-9f6f295c824b.png)\n\n这下就友好多啦~\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681315419-77e501f6-1280-4128-81ce-66c15712b1d5.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681334304-450633c9-d733-4b55-82fd-e64a34a256f6.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681354864-8d764292-29ae-4d70-b62d-8bcd395f3c5f.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681374717-95c1e037-4a11-4024-8c6d-7c4a96d35e30.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681399391-416d4ebe-090b-47ac-8ebf-eb73f58c4ab1.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681419998-e58e2723-83eb-4a55-bc74-c89cee3e2319.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681445698-e5487ee9-4ed9-4327-88e9-d7fbaf7a4835.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681473684-ce00470c-0c80-439a-895d-6541b20b5a8b.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681501713-e5d2fc8d-bf98-4214-b613-d298a3bb3859.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681527786-17c927ed-1de8-460c-86d4-680e1df01d7b.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681555631-291e9684-eda4-4b68-ad3b-292568495da8.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681573348-0fa8fc12-09cb-4e24-a315-738cfd602629.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59892417/1758681595601-6a3e03b1-f35e-4242-bded-f7a5fb4ff044.png)\n\n可以看到啊，ds老师列举了以下def和return的用法，并举了一些例子。反正对于我而言，例子永远是比说明更好的学习方案。ds老师的answer的的确确是帮我看懂了def的简单用法。\n\n##### 分支2.5：生成训练习题\n<font style=\"color:#270070;\">如果你按部就班的学习了一些知识点，想要试一试，练一练</font>\n\n<font style=\"color:#270070;\">或者你感觉某个具体的知识点掌握的还较为欠缺，请使用AI生成测试习题和参考答案</font>\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 10525812145357114989
    },
    "238061659": {
        "id": 238061659,
        "type": "Doc",
        "slug": "hheiq6w5kygcstao",
        "title": "Python学习类-施雯雯",
        "description": "行前有所思我对于Python有多少了解呢？高中时信息课上学过一点，但是，现在已经什么语法都想不起来了，约等于零。现在，我课内要学的是c语言，选修了Python,其实也只是想尝试一下，不知道能不能坚持下去，总之，先行动起来。关于python，我在尝试xxxxx（点明你选择的分支，你的学习方向，你...",
        "cover": "",
        "user_id": 60740946,
        "book_id": 69189148,
        "last_editor_id": 60740946,
        "public": 2,
        "status": 1,
        "likes_count": 0,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 212,
        "created_at": "2025-09-23T06:58:21.000Z",
        "updated_at": "2025-09-24T02:37:47.000Z",
        "content_updated_at": "2025-09-24T02:37:47.000Z",
        "published_at": "2025-09-24T02:37:47.000Z",
        "first_published_at": "2025-09-24T02:37:46.982Z",
        "user": {
            "id": 60740946,
            "type": "User",
            "login": "shiwenwen-mr46l",
            "name": "施雯雯",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-14T23:47:05.000Z",
            "updated_at": "2025-09-23T13:14:01.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60740946,
            "type": "User",
            "login": "shiwenwen-mr46l",
            "name": "施雯雯",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-14T23:47:05.000Z",
            "updated_at": "2025-09-23T13:14:01.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n我对于Python有多少了解呢？高中时信息课上学过一点，但是，现在已经什么语法都想不起来了，约等于零。现在，我课内要学的是c语言，选修了Python,其实也只是想尝试一下，不知道能不能坚持下去，总之，先行动起来。\n\n## 关于python，我在尝试xxxxx\n~~（点明你选择的分支，你的学习方向，你有哪些操作）~~\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 79789640141644081
    },
    "238038886": {
        "id": 238038886,
        "type": "Doc",
        "slug": "gh10uty5012gfv2g",
        "title": "Python学习类-顾明宇",
        "description": "行前有所思我想我自己完全不是一个自律或者热爱坚持的人，也不太追求提升就业竞争力/保研成绩之类“拥挤”的东西。单纯以“学习”为一个空洞的目的论指针的话，会使我很容易半途而废或者硬学下去后感到空虚。我想自己最终的目的不是精通python编程技术，而是将其作为一种工具或语言来连接或表达出我自身的兴趣...",
        "cover": "",
        "user_id": 59119675,
        "book_id": 69189148,
        "last_editor_id": 59119675,
        "public": 2,
        "status": 1,
        "likes_count": 0,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 998,
        "created_at": "2025-09-23T04:27:10.000Z",
        "updated_at": "2025-09-23T07:36:04.000Z",
        "content_updated_at": "2025-09-23T05:41:52.000Z",
        "published_at": "2025-09-23T05:41:52.000Z",
        "first_published_at": "2025-09-23T05:41:52.300Z",
        "user": {
            "id": 59119675,
            "type": "User",
            "login": "fangcaohai",
            "name": "顾明宇",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59119675/1755678916519-avatar/158d40b0-8e2b-4146-8dc9-7ed733e15b1b.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-28T13:22:28.000Z",
            "updated_at": "2025-09-13T12:07:50.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59119675,
            "type": "User",
            "login": "fangcaohai",
            "name": "顾明宇",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59119675/1755678916519-avatar/158d40b0-8e2b-4146-8dc9-7ed733e15b1b.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-28T13:22:28.000Z",
            "updated_at": "2025-09-13T12:07:50.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n我想我自己完全不是一个自律或者热爱坚持的人，也不太追求提升就业竞争力/保研成绩之类“拥挤”的东西。单纯以“学习”为一个空洞的目的论指针的话，会使我很容易半途而废或者硬学下去后感到空虚。我想自己最终的目的不是精通python编程技术，而是将其作为一种工具或语言来连接或表达出我自身的兴趣与思考。最终做出一些真正承载了自身所热爱，具有一定创造性且实现自我意义的小东西（一个网站或一个作者文字统计分析工具之类，以一种比喻来表达，即是想在学了这门“语言”后用它写出自己的作品）\n\n## 关于python，我在尝试打基础与实践同步\n尽管自己很想直接从实践出发，乃至尝试“自顶层向下”的学习方法。但由于基础不全，所遭遇的困难还是非常劝退的。在第三周搜索了网上各种学习框架后，目前计划将搜索到的框架做一些融合。以学习基础内容为重，同时也会投入一些时间在网上跟着所谓“项目实战\"内容瞎折腾一通：\n\n+ 主干（每天）：github上的开源学习计划”Python 100 Days\",内容较为全面且已规划好，目前每天跟着在做，需要投入的时间不是特别多。\n+ 进阶（一周2-3天）：参与CS61a课程，目前是跟着UCB官网上的课程安排走，时间主要花在做作业和实验课内容上，项目暂时没有计划去做。单纯刷课的话也不是很占用精力，主要是动手部分比较磨人，有时会等到周末再想或直接看答案。\n+ 自己尝试：放在每个周末空余时间，跟着B站上能看得懂的开源小项目教程模仿一下操作，遇到不懂的前置知识就问AI，以体验与了解为主，时间比较弹性，但一般不会太短。也不一定能做出来，但主要是创造看的见的东西增强正反馈。\n\n~~~~\n\n## 我提出或遇到的问题\n1. 对是否要使用vscode自带的代码补全与compilot感到纠结。一方面重复地打一些代码确实浪费时间，另一方面一旦开启补全功能，不少homework在你复制完注释后ai就完全生成好了，自己会忍不住使用方便的补全，造成不少基本东西的缺失（例如忘记打：或；），更使得能力得不到应有的锻炼（像刚开始做简单题就直接把答案放在眼前一样）  \n\n2. 一个问题究竟要想到什么程度，在还想不出来的情况下才去看答案？如果要看答案的话有什么看的方法，来避免“左脑进右脑出”？\n3. \n\n~~~~\n\n## 一些总结又或许感悟\n  感觉在大学这个不如高中劳累，却要求多线程地顾及各种科目/事务的环境下，想要专注自学一件事情似乎更加困难，也更容易自我怀疑这是否值得。\n\n  似乎不少人都很茫然，却又立即被“询唤”去投入某种集置着的目标与算计中了。时间有些难熬却又很快流过，大概需要找到一种热爱的投入以锚定自身，改变这状态吧。\n\n\n\n\n\n~~~~\n\n",
        "simhash": 653040436964919089
    },
    "237936251": {
        "id": 237936251,
        "type": "Doc",
        "slug": "ud7knorbp513e08y",
        "title": "Python学习类-汪跃本",
        "description": "行前有所思暑假在学长的建议下学了一个月C++，现在发现大一上sicp和这里都用Python，现在已经速通了py的基本语法，后面还可以跟着sicp课学习，就先不构建学习框架了（应该不用了吧）。鉴于vsc才刚刚下载，我就选择了分支4关于python，我在尝试探索新手实用的VSCode技巧分支4：首...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/60829960/1758637551609-01cb2750-3ac6-4f23-b1b9-5db9a6a86393.png",
        "user_id": 60829960,
        "book_id": 69189148,
        "last_editor_id": 60829960,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 1012,
        "created_at": "2025-09-22T14:33:42.000Z",
        "updated_at": "2025-09-23T14:37:45.000Z",
        "content_updated_at": "2025-09-23T14:37:44.000Z",
        "published_at": "2025-09-23T14:37:44.000Z",
        "first_published_at": "2025-09-22T23:18:13.442Z",
        "user": {
            "id": 60829960,
            "type": "User",
            "login": "shiyan-6zowe",
            "name": "汪跃本",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/anonymous/1758119928702-b2e950bd-5838-4438-8465-7317e1929c32.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-17T14:39:20.000Z",
            "updated_at": "2025-09-17T14:39:22.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60829960,
            "type": "User",
            "login": "shiyan-6zowe",
            "name": "汪跃本",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/anonymous/1758119928702-b2e950bd-5838-4438-8465-7317e1929c32.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-17T14:39:20.000Z",
            "updated_at": "2025-09-17T14:39:22.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n暑假在学长的建议下学了一个月C++，现在发现大一上sicp和这里都用Python，现在已经速通了py的基本语法，后面还可以跟着sicp课学习，就先不构建学习框架了（应该不用了吧）。鉴于vsc才刚刚下载，我就选择了分支4\n\n## 关于python，我在尝试探索新手实用的VSCode技巧\n分支4：\n\n首先想到的就是键盘快捷键有哪些，这个问问llm很容易解决，不好解决的就是什么快捷键是常用的，我就把可能会用到的都整理了一下，在个人实际使用的过程中会慢慢养成习惯的。以下的评价均为主观脑测，个人习惯不同会有不同看法很正常。\n\n1）Ctrl + S：保存  无需多言，除非你设置了自动保存\n\n2）Ctrl + O：打开文件  不好用，不能打开文件夹\n\n3）Ctrl + N：新建文件  Ctrl + Shift + S：另存为  不常用\n\n4）Ctrl + W：关闭当前标签页  目前还没遇到需要关闭标签页的情况，都是在资源管理器里面打开\n\n5）Ctrl + Z：撤销  Ctrl + Y：重做  Ctrl + C：复制  Ctrl + X：剪切  Ctrl + V：粘贴\n\n以上都是其他软件中通用的，应该很多人都知道，下面才是vsc中的\n\n7）Ctrl + D：选择当前单词，再次按会选择下一个相同单词（多光标编辑），相当于低配快捷查找替换了，我感觉用查找替换也不会太麻烦，如果我能记住快捷键的话说不定会用\n\n8）Ctrl + P：快速打开文件  不如资源管理器\n\n9）Alt + ↑/↓（或者鼠标拖动）：上下移动当前行  这个好用，在代码少的时候比剪切快\n\n10）Shift + Alt + ↑/↓（或者Ctrl + 鼠标）：向上/下复制当前行  只能复制相邻行，局限性大\n\n11）Ctrl + Shift + K：删除整行  点三下鼠标不比按这三个键快\n\n12）F2：重命名符号（变量/函数名） 对名称特攻查找替换，防止了误替换，夯\n\n13）Alt + 点击：在点击位置添加光标\n\n14）Ctrl + Alt + ↑/↓：在上方/下方添加光标\n\n15）Shift + Alt + 鼠标拖动：列选择\n\n16）Shift + Alt + I：在每行选择区域的最后添加光标\n\n这四个是多光标编辑，在批量处理文字的时候会用到，用好了上限很高\n\n\n\n17）Ctrl + F：在当前文件搜索\n\n18）Ctrl + H：替换\n\n19）Ctrl + Shift + F：全局搜索\n\n这三个查找替换，跟word文档里面的一样，不多说\n\n\n\n\n\ndebug：添加断点：![](https://cdn.nlark.com/yuque/0/2025/png/60829960/1758637551609-01cb2750-3ac6-4f23-b1b9-5db9a6a86393.png)在每一行的左边\n\n快捷键：![](https://cdn.nlark.com/yuque/0/2025/png/60829960/1758637431342-28dcf1ce-0554-4b72-a7d6-9f556f769a34.png)\n\n从左到右依次为：继续（F6，下一个断点）逐过程（F10，下一行）单步调试（F11，下一个子函数体）单步跳出（Shift + F11，下一个作用空间）重启（Ctrl + Shift + F5）停止（Shift + F5）通过断点就可以在运行与调试板块看到代码运行的过程，相当于Pythontutor\n\n\n\n\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n实际去做的时候才发现这个比想象中更耗时间\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 4072555704767733600
    },
    "237935274": {
        "id": 237935274,
        "type": "Doc",
        "slug": "omotmbym88pn6otg",
        "title": "Python学习类-孔子聪",
        "description": "行前有所思（当你开始做某件事情前，或许会有一些思考）关于python，我在尝试xxxxx（点明你选择的分支，你的学习方向，你有哪些操作）我提出或遇到的问题（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）一些总结又或许感悟（比较自由，也可以是你想与大家分享的内容）...",
        "cover": "",
        "user_id": 59499524,
        "book_id": 69189148,
        "last_editor_id": 59499524,
        "public": 2,
        "status": 1,
        "likes_count": 2,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 138,
        "created_at": "2025-09-22T14:27:44.000Z",
        "updated_at": "2025-09-23T09:36:58.000Z",
        "content_updated_at": "2025-09-22T14:28:18.000Z",
        "published_at": "2025-09-22T14:28:18.000Z",
        "first_published_at": "2025-09-22T14:28:18.308Z",
        "user": {
            "id": 59499524,
            "type": "User",
            "login": "oreno",
            "name": "孔子聪",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59499524/1755695062901-avatar/359648c3-d1ff-423f-9652-ccb70c4e19c9.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-08T16:12:28.000Z",
            "updated_at": "2025-09-18T02:09:09.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59499524,
            "type": "User",
            "login": "oreno",
            "name": "孔子聪",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59499524/1755695062901-avatar/359648c3-d1ff-423f-9652-ccb70c4e19c9.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-08T16:12:28.000Z",
            "updated_at": "2025-09-18T02:09:09.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n~~（当你开始做某件事情前，或许会有一些思考）~~\n\n## 关于python，我在尝试xxxxx\n~~（点明你选择的分支，你的学习方向，你有哪些操作）~~\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n",
        "simhash": 79772046881857841
    },
    "237935232": {
        "id": 237935232,
        "type": "Doc",
        "slug": "ov1xieuznxmhywxg",
        "title": "Python学习类-洪昱童",
        "description": "行前有所思高中信息课似乎接触过（？）暑假买过《python编程—从入门到实践》，但是基本没有打开过（doge）鉴于软院超高校级的cpl，python涉及甚少，遂决定python学习组其实以后有机会可以换成数学英语之类的关于python，我在尝试入门我提出或遇到的问题（包括描述、记录、尝试解决的...",
        "cover": "",
        "user_id": 60652505,
        "book_id": 69189148,
        "last_editor_id": 60652505,
        "public": 2,
        "status": 1,
        "likes_count": 5,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 178,
        "created_at": "2025-09-22T14:27:28.000Z",
        "updated_at": "2025-09-24T01:22:37.000Z",
        "content_updated_at": "2025-09-24T01:22:37.000Z",
        "published_at": "2025-09-24T01:22:37.000Z",
        "first_published_at": "2025-09-22T14:27:45.899Z",
        "user": {
            "id": 60652505,
            "type": "User",
            "login": "methylintelligent",
            "name": "洪昱童",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60652505/1757647703967-avatar/d9f0eaf7-45ec-43ff-ad38-17ce6b8ca0fc.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-12T02:41:43.000Z",
            "updated_at": "2025-09-14T11:05:10.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60652505,
            "type": "User",
            "login": "methylintelligent",
            "name": "洪昱童",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60652505/1757647703967-avatar/d9f0eaf7-45ec-43ff-ad38-17ce6b8ca0fc.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-12T02:41:43.000Z",
            "updated_at": "2025-09-14T11:05:10.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n高中信息课似乎接触过（？）\n\n暑假买过《python编程—从入门到实践》，但是基本没有打开过（doge）\n\n鉴于软院超高校级的cpl，python涉及甚少，遂决定python学习组\n\n~~其实以后有机会可以换成数学英语之类的~~\n\n## 关于python，我在尝试入门\n\n\n\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 79191299657433393
    },
    "237934391": {
        "id": 237934391,
        "type": "Doc",
        "slug": "vcsexsvaqvan948i",
        "title": "Python学习类-周宁",
        "description": "行前有所思自身定位纯小白起点：对C语言零基础，尽管老师强调程设更注重思想，但我需要花费时间练习C，具有白纸优势，没有错误习惯（但有错误的思维习惯），可以从最佳实践开始，但同时也意味着我没有任何经验，所有的一切都需要不停地去求知求证，以及要减少概念混淆：C与Python在内存管理、数据类型等差异...",
        "cover": "",
        "user_id": 60717248,
        "book_id": 69189148,
        "last_editor_id": 60717248,
        "public": 2,
        "status": 0,
        "likes_count": 2,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 5397,
        "created_at": "2025-09-22T14:22:56.000Z",
        "updated_at": "2025-09-24T03:13:05.000Z",
        "content_updated_at": "2025-09-24T03:13:04.000Z",
        "published_at": "2025-09-24T01:15:54.000Z",
        "first_published_at": "2025-09-22T23:18:20.743Z",
        "user": {
            "id": 60717248,
            "type": "User",
            "login": "merwin-gr5ik",
            "name": "周宁",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-14T14:05:36.000Z",
            "updated_at": "2025-09-24T02:56:32.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60717248,
            "type": "User",
            "login": "merwin-gr5ik",
            "name": "周宁",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-14T14:05:36.000Z",
            "updated_at": "2025-09-24T02:56:32.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n~~~~\n\n<details class=\"lake-collapse\"><summary id=\"u8641c305\"><span class=\"ne-text\">自身定位</span></summary><p id=\"u412283cb\" class=\"ne-p\"><span class=\"ne-text\">纯小白起点：对C语言零基础，尽管老师强调程设更注重思想，但我需要花费时间练习C，具有白纸优势，没有错误习惯（但有错误的思维习惯），可以从最佳实践开始，但同时也意味着我没有任何经验，所有的一切都需要不停地去求知求证，以及要减少概念混淆：C与Python在内存管理、数据类型等差异</span></p><p id=\"uad52675a\" class=\"ne-p\"><span class=\"ne-text\">Python初步接触：看过CS61A前半段但未实践，意味着我很多时候可能满足于看懂了的错觉中，缺少代码肌肉记忆，打字也不够快，尤其是英文</span></p><p id=\"u4d9174db\" class=\"ne-p\"><span class=\"ne-text\">追求高质量系统化学习，同时又想保证思维的深度，这是一个在短期事件中算是产生矛盾的地方</span></p><p id=\"u44a9948d\" class=\"ne-p\"><span class=\"ne-text\">零基础双重压力：同时学习两门语言的底层概念，而本来就碎片化的时间如何分配，在数学也不够好的基础上，其实自主化学习的时间很少，意味着需要减少茫然的时间，而是去动态地思考</span></p><p id=\"uc23af0d4\" class=\"ne-p\"><span class=\"ne-text\">容易迷失方向，周围的同学有一定基础，会提出针对性的训练，不盲目羡慕和下载来增加自己的姿势负重</span></p><p id=\"u15f36f37\" class=\"ne-p\"><br></p><p id=\"uad316873\" class=\"ne-p\"><span class=\"ne-text\">资源分析</span></p><p id=\"ub0551e0d\" class=\"ne-p\"><span class=\"ne-text\">对于C语言我的目前想法是啃浙大C教材 ，具有工程实践导向，比较易读但可能缺乏新意，创新思维训练弱，不过先打好基础因该暂时没有太大问题</span></p><p id=\"uf9fb0907\" class=\"ne-p\"><span class=\"ne-text\">CS61A作为python计算思维深度，项目新颖有趣，但授课内容语法细节不系统，可作为思维培养的资源</span></p><p id=\"udeab0bf0\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u0729d139\" class=\"ne-p\"><span class=\"ne-text\">基本学习要求</span></p><p id=\"u5df67800\" class=\"ne-p\"><span class=\"ne-text\">掌握C语言基本语法、指针、内存管理、基础数据结构（数组、字符串、结构体）和文件操作。</span></p><p id=\"u1f5571f6\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(207, 211, 214); background-color: rgb(21, 21, 23); font-size: 14px\">掌握Python基本语法、数据类型、控制流、函数、模块和文件操作</span></p><p id=\"ufa8c68c7\" class=\"ne-p\"><span class=\"ne-text\">概念先在C中理解：变量、循环、函数等先在C中掌握（细节更多）再用Python对比实现：同样的逻辑用Python重写一次（更加直观），再进行添加整合到C的实现</span></p><p id=\"u0cbac487\" class=\"ne-p\"><span class=\"ne-text\">适当拔高</span></p><p id=\"u396c4be3\" class=\"ne-p\"><span class=\"ne-text\">C语言：学习更高级的主题（动态内存分配、链表、树等），并实现一些数据结构。</span></p><p id=\"u30a7cf6a\" class=\"ne-p\"><span class=\"ne-text\">◦ Python：学习面向对象编程、异常处理、常用标准库，并尝试用Python实现一些算法和项目。</span></p><p id=\"u40b21e3a\" class=\"ne-p\"><span class=\"ne-text\">◦ 对比学习：例如，用C实现一个链表，然后用Python实现同样的功能，对比两者的内存管理和语法差异。</span></p><p id=\"u0ddd43d7\" class=\"ne-p\"><span class=\"ne-text\">通过C理解计算机系统，通过Python理解问题求解的计算思维者&quot;</span></p><p id=\"u3b7a881a\" class=\"ne-p\"><span class=\"ne-text\">代码注释中和</span></p><p id=\"u256de4ba\" class=\"ne-p\"><span class=\"ne-text\"></span></p></details>\n~~~~\n\n<details class=\"lake-collapse\"><summary id=\"ue8f808be\"><span class=\"ne-text\">能力</span></summary><p id=\"u42a7b709\" class=\"ne-p\"><span class=\"ne-text\">问题分解能力，算法逻辑，调试能力</span></p><p id=\"u7ff72082\" class=\"ne-p\"><span class=\"ne-text\">分解 面对复杂问题，练习将其分解为小问题。例如，一个项目分解为多个功能模块，每个模块再分解为具体函数。</span></p><p id=\"ucd12f5d3\" class=\"ne-p\"><span class=\"ne-text\">模式识别，即在解决问题时，寻找相似性；识别常见问题模式（如排序、搜索、递归等）。</span></p><p id=\"u43b35a0e\" class=\"ne-p\"><span class=\"ne-text\">抽象，忽略细节，抓住核心概念。例如，使用函数和类来抽象功能和数据。</span></p><p id=\"uec6a62ab\" class=\"ne-p\"><span class=\"ne-text\">算法设计，设计步骤解决问题，并分析效率（时间、空间复杂度）。</span></p><p id=\"u0336dae8\" class=\"ne-p\"><span class=\"ne-text\">调试与迭代，通过测试、调试、重构来改进代码</span></p></details>\n~~~~\n\n~~（当你开始做某件事情前，或许会有一些思考）~~\n\n## 关于python，我在尝试分支1，会将分支2的部分思路融入进去\n我在尝试\n\n<details class=\"lake-collapse\"><summary id=\"u51f651fa\"><span class=\"ne-text\">资源调整</span></summary><p id=\"uf9a2f133\" class=\"ne-p\"><span class=\"ne-text\">cs61a更注重思想而系统性不够强，我应该如何完善知识体系？</span></p><p id=\"u4e7aa5e5\" class=\"ne-p\"><span class=\"ne-text\">在保持CS61A作为思想引导的同时，引入系统性的学习资源，并通过项目实践来巩固。</span></p><p id=\"ubf36a00c\" class=\"ne-p\"><span class=\"ne-text\">选择一本系统性强的教材作为主线，将CS61A中的概念性知识与系统性知识框架中的知识点对应起来，形成互补，例如《Python编程：从入门到实践》或《流畅的Python》（后者适合有一定基础后进阶）。</span></p><p id=\"u51d7aa1d\" class=\"ne-p\"><span class=\"ne-text\">项目驱动：选择一些典型项目，覆盖不同知识点，（比如观摩实验组的代码）例如：</span></p><p id=\"uf056eca1\" class=\"ne-p\"><span class=\"ne-text\">■ 网络爬虫（请求、解析、数据存储）</span></p><p id=\"u34e88005\" class=\"ne-p\"><span class=\"ne-text\">■ 数据分析（pandas、numpy）</span></p><p id=\"uac36dafb\" class=\"ne-p\"><span class=\"ne-text\">■ Web应用（Flask或Django）</span></p><p id=\"u2393c5cf\" class=\"ne-p\"><span class=\"ne-text\">■ 自动化脚本（文件操作、系统操作</span></p><p id=\"u536aedcb\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u2cbcf87d\" class=\"ne-p\"><span class=\"ne-text\">通过记录思路的可行性来锻炼算法思维（比如写博客、录视频）</span></p><p id=\"u8698917f\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u6f5c88e9\" class=\"ne-p\"><span class=\"ne-text\">Python基础语法</span></p><p id=\"uc2c9b44e\" class=\"ne-p\"><span class=\"ne-text\">第一阶段</span></p><p id=\"u722688da\" class=\"ne-p\"><span class=\"ne-text\">- 系统性教材章节：变量、数据类型、运算符、控制流、函数、模块。</span></p><p id=\"u356c0ec8\" class=\"ne-p\"><span class=\"ne-text\">- CS61A对应部分：前几讲，强调抽象和函数式编程思想。</span></p><p id=\"u9dfdc755\" class=\"ne-p\"><span class=\"ne-text\">- 练习：教材每章课后题 + CS61A的lab1和lab2。</span></p><p id=\"ub8a66568\" class=\"ne-p\"><span class=\"ne-text\">- 项目：用一个简单的项目整合这些知识，比如一个单位转换器或简单的计算器。</span></p><p id=\"u7e646c3f\" class=\"ne-p\"><span class=\"ne-text\">第二阶段 </span></p><p id=\"u005e4212\" class=\"ne-p\"><span class=\"ne-text\">数据结构和面向对象</span></p><p id=\"u5c5618ad\" class=\"ne-p\"><span class=\"ne-text\">- 系统性教材章节：列表、字典、集合、字符串、类与对象。</span></p><p id=\"u25bc42dd\" class=\"ne-p\"><span class=\"ne-text\">- CS61A对应部分：数据抽象、对象抽象。</span></p><p id=\"ue06e022a\" class=\"ne-p\"><span class=\"ne-text\">- 练习：教材练习题 + CS61A的lab3和lab4。</span></p><p id=\"u9017a284\" class=\"ne-p\"><span class=\"ne-text\">- 项目：实现一个简单的图书馆管理系统（使用类和对象）。</span></p><p id=\"uc9719f9c\" class=\"ne-p\"><span class=\"ne-text\">第三阶段（2-3周）：文件操作和异常处理</span></p><p id=\"u3ea6dcff\" class=\"ne-p\"><span class=\"ne-text\">- 系统性教材章节：文件I/O、异常。</span></p><p id=\"ue469e996\" class=\"ne-p\"><span class=\"ne-text\">- CS61A对应部分：可能涉及项目中的文件操作。</span></p><p id=\"u2d99ba7b\" class=\"ne-p\"><span class=\"ne-text\">- 练习：教材练习题 + CS61A的homework中涉及文件的部分。</span></p><p id=\"u11449c0e\" class=\"ne-p\"><span class=\"ne-text\">- 项目：实现一个日志分析脚本，统计错误出现的次数。</span></p><p id=\"ua84832cc\" class=\"ne-p\"><span class=\"ne-text\">第四阶段：</span></p><p id=\"u1d74e7b0\" class=\"ne-p\"><span class=\"ne-text\">常用库和框架</span></p><p id=\"ua2f3599b\" class=\"ne-p\"><span class=\"ne-text\">- 选择性学习：根据兴趣选择方向，如网络爬虫（requests、BeautifulSoup）、数据分析（pandas）、Web开发（Flask）等。</span></p><p id=\"u9f855e2f\" class=\"ne-p\"><span class=\"ne-text\">- 项目：一个完整的项目</span></p><p id=\"u8a8bd86b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h4 id=\"a8c564e7\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23)\">识维度矩阵：</span></h4><p id=\"u04bca1fe\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">知识领域</span></p><p id=\"u9d4ee11f\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">CS61A</span><strong><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">关于Python语法细节覆盖程度</span></strong><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">偏弱《Python官方文档》+《流畅的Python》，</span><strong><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">标准库深入</span></strong><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">不多Python标准库实例》+ 官方tutorial</span></p><p id=\"u315a64bc\" class=\"ne-p\"><strong><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">工程实践</span></strong><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">较少</span></p><p id=\"u98230596\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">《Effective Python》+ 真实项目规范</span></p><p id=\"ue4f227ae\" class=\"ne-p\"><strong><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">生态工具链</span></strong><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">基本无</span></p><p id=\"uacaddefd\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">去了解PyPI、虚拟环境、代码质量工具</span></p><p id=\"u1d65d496\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">《Python官方Tutorial》+《流畅的Python》前8章</span></p><p id=\"ucbc6dfcc\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">精读2-3个官方文档章节，配合《流畅的Python》的深入解析</span></p><p id=\"u8801e16e\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">◦ 示例：学完CS61A的函数抽象后，立即补充《流畅的Python》中函数参数详解</span></p><p id=\"uf1c59ac0\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">第二层：标准库 mastery</span></p><p id=\"uc695f5fa\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">• 重点模块：collections, itertools, functools, pathlib</span></p><p id=\"u5ec85bdd\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">• 实践方法：为每个CS61A项目添加标准库优化版本</span></p><p id=\"ubfc6697a\" class=\"ne-p\"><br></p><p id=\"u845acd9a\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\"># CS61A风格 vs 系统化风格对比</span></p><p id=\"u85c1206a\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\"># 基础实现</span></p><p id=\"ufd8d316d\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">def process_data(data):</span></p><p id=\"u6aae5104\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">    result </span></p><p id=\"u9249dc20\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">= []</span></p><p id=\"u700aa5c0\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">    for item in data:</span></p><p id=\"u58fd6c1a\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">        if item &gt; 0:</span></p><p id=\"u78524fb4\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">            result</span></p><p id=\"u3592631b\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">.append(item * 2)</span></p><p id=\"u4d5798e4\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">    return</span></p><p id=\"uc0d749b8\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\"> result</span></p><p id=\"u820fa704\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\"></span></p><p id=\"u525aa59f\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\"># 系统化实现（使用生成器+标准库）</span></p><p id=\"uc042edd2\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">from itertools import</span></p><p id=\"u655431ab\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\"> filterfalse</span></p><p id=\"u959920b9\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">def process_data_systematic(data):</span></p><p id=\"u2e8c80c1\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">    return (x * 2 for x in data if x &gt; 0)</span></p><p id=\"u5366824d\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">￼</span></p><p id=\"ud9011765\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">￼</span></p><p id=\"udfdbecd7\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">第三层：工程化实践（持续）</span></p><p id=\"u41b70380\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">• 工具链引入：</span></p><p id=\"u3f9ff34d\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">◦ 代码质量：pylint, black, mypy</span></p><p id=\"ud781ed58\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">◦ 测试：pytest补充CS61A的简单测试</span></p><p id=\"ubba5bbd2\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">◦ 环境管理：venv + requirements.txt</span></p><p id=\"u698bd7e2\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">4. 周计划示例：思想与系统并行</span></p><p id=\"u6829e2e3\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">函数系统性深化</span></p><p id=\"u8d3e7b62\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">CS61A主线：高阶函数、lambda</span></p><p id=\"u5ecf2b21\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">系统性补充：</span></p><p id=\"u7e2f1db0\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">- 函数参数详解(*args, **kwargs)</span></p><p id=\"u5ab079f3\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">- 函数注解(type hints)</span></p><p id=\"u9a8e2a78\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">- 闭包与作用域LEGB规则</span></p><p id=\"ud90efdbb\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">整合实践：重写CS61A的lambda作业，添加类型注解和文档字符串</span></p><p id=\"u7637d834\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\"></span></p><p id=\"u304e3c07\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">数据结构系统化</span></p><p id=\"udab0275c\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">CS61A主线：链表、树的基本操作</span></p><p id=\"u1f8a2f46\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">系统性补充：</span></p><p id=\"u5723f7de\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">- collections模块：deque, Counter, defaultdict</span></p><p id=\"u45e2ddae\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">- 内存模型理解(与C语言指针对比)</span></p><p id=\"u9f5e5775\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">- 时间复杂度分析</span></p><p id=\"u1a9882af\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">整合实践：用标准库数据结构优化CS61A数据处理的性能</span></p><p id=\"u9286d39d\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\"></span></p><p id=\"u53f296c7\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">建立个人知识库：</span></p><p id=\"u2ffe6666\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">《Python官方文档》 - 最权威的系统性参考</span></p><p id=\"u460b9aeb\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">2. 《流畅的Python》 - 深度与系统性完美结合</span></p><p id=\"u092f5e6c\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">3. 《Effective Python》 - 工程实践最佳范例</span></p><p id=\"ua23ed112\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">4. Real Python网站 - 实战导向的系统教程</span></p><p id=\"u0e5e2587\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">5. 《Python Cookbook》 - 标准库高级用法</span></p><p id=\"uc344e7e1\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">视频补充（选择性观看）：</span></p><p id=\"uff6ea860\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">• Corey Schafer的Python教程 - 系统性很强</span></p><p id=\"ub96273a9\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">• mCoding系列 - 深度与性能优化</span></p><p id=\"u119d641e\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">7. 检测系统性是否完善的检查表</span></p><p id=\"u5b3b2ac3\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">每月自问：</span></p><p id=\"uc881f5f9\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">• 我是否能清晰解释Python的内存管理机制？</span></p><p id=\"ua5b3bfb0\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">• 我是否熟悉至少10个常用标准库模块的核心功能？</span></p><p id=\"u0ff1a7fc\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">• 我写的代码是否符合PEP8规范？</span></p><p id=\"ub1aa525a\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">• 我是否能使用类型注解提升代码可读性？</span></p><p id=\"ud2fbddf1\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">• 我是否理解Python的GIL机制及其影响？</span></p><p id=\"u0f7a491e\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">8. 适应你现状的调整建议</span></p><p id=\"u167b22dc\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">考虑到C语言学习压力：</span></p><p id=\"u3685ddfb\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">1. 优先级策略：先保证CS61A的思想深度，系统性作为补充而非替代</span></p><p id=\"ud5283909\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">2. 对比学习：利用C语言的系统性来反哺Python系统理解</span></p><p id=\"uab5e60b5\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">◦ 比如学完C指针后，研究Python的引用计数</span></p><p id=\"u5a01b105\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">3. 最小系统性：每月重点深入1-2个系统知识点，不求全但求透</span></p><p id=\"u8e667d55\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(249, 250, 251); background-color: rgb(21, 21, 23); font-size: 16px\">核心建议：不要放弃CS61A的思想深度，而是在其基础上有选择地补充系统性知识。你的优势是正在学习C语言，这本身就是最好的系统性训练。</span></p></details>\n~~~~\n\n<details class=\"lake-collapse\"><summary id=\"u71b030b0\"><span class=\"ne-text\">知识体系</span></summary><p id=\"u896563cd\" class=\"ne-p\"><span class=\"ne-text\">基础语法（变量、数据类型） ← 你已具备</span></p><p id=\"uedba9e25\" class=\"ne-p\"><span class=\"ne-text\">↓</span></p><p id=\"u61870c6f\" class=\"ne-p\"><span class=\"ne-text\">流程控制（判断、循环） ← C语言基础可迁移</span></p><p id=\"u3912a5a8\" class=\"ne-p\"><span class=\"ne-text\">↓  </span></p><p id=\"uc0cef95a\" class=\"ne-p\"><span class=\"ne-text\">函数与模块化 ← CS61A重点</span></p><p id=\"ua6a30889\" class=\"ne-p\"><span class=\"ne-text\">↓</span></p><p id=\"u3f68ee02\" class=\"ne-p\"><span class=\"ne-text\">面向对象编程 ← 新知识重点</span></p><p id=\"udb3ee052\" class=\"ne-p\"><span class=\"ne-text\">↓</span></p><p id=\"u5f703c3f\" class=\"ne-p\"><span class=\"ne-text\">文件操作/异常处理 ← 实践急需</span></p><p id=\"uad5c6ef8\" class=\"ne-p\"><span class=\"ne-text\">↓</span></p><p id=\"uaea21f21\" class=\"ne-p\"><span class=\"ne-text\">常用库学习（requests, pandas等</span></p></details>\n~~（点明你选择的分支，你的学习方向，你有哪些操作）~~\n\n\n\n<details class=\"lake-collapse\"><summary id=\"ubfba7c01\"><span class=\"ne-text\">资源</span></summary><p id=\"ucacff623\" class=\"ne-p\"><span class=\"ne-text\">教材 </span></p><p id=\"u7e31404a\" class=\"ne-p\"><span class=\"ne-text\">《CS61A课程材料》 - 官网所有资料</span></p><p id=\"u133c3f5e\" class=\"ne-p\"><span class=\"ne-text\">2. 《Python Crash Course》 - 项目驱动型教材</span></p><p id=\"u026d0371\" class=\"ne-p\"><span class=\"ne-text\">3. 《Automate the Boring Stuff with Python》 - 实用性强</span></p><p id=\"u02f6e456\" class=\"ne-p\"><span class=\"ne-text\">使用《Python官方文档》来查询语法细节</span></p><p id=\"ubba2c7e6\" class=\"ne-p\"><span class=\"ne-text\">• 使用《流畅的Python》来深入理解Python的特性和最佳实践</span></p><p id=\"u80a2e104\" class=\"ne-p\"><span class=\"ne-text\">• 使用《Effective Python》来学习编写高质量的Python代码</span></p><p id=\"u04fd6265\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u4cdd1238\" class=\"ne-p\"><span class=\"ne-text\">习题</span></p><p id=\"udc3e6997\" class=\"ne-p\"><span class=\"ne-text\">优先级1: CS61A官方作业 + project  # 质量最高</span></p><p id=\"u734028dd\" class=\"ne-p\"><span class=\"ne-text\">优先级2: LeetCode简单题（过滤Python基础题）</span></p><p id=\"u6a6c0234\" class=\"ne-p\"><span class=\"ne-text\">优先级3: HackerRank Python模块</span></p><p id=\"uf5e15425\" class=\"ne-p\"><span class=\"ne-text\">优先级4: 廖雪峰Python教程习题</span></p></details>\n\n\n\n\n<details class=\"lake-collapse\"><summary id=\"u237db6e7\"></summary><p id=\"u0d86e68e\" class=\"ne-p\"><span class=\"ne-text\">阶段一：基础语法与概念（与C语言同步）</span></p><p id=\"u5533b31c\" class=\"ne-p\"><span class=\"ne-text\">• 目标：掌握Python基本语法，并与C语言对比学习</span></p><p id=\"u6e8c776b\" class=\"ne-p\"><span class=\"ne-text\">• 方法：学习Python的基本概念，同时完成CS61A的lab和homework（从简单的开始）</span></p><p id=\"u90688c66\" class=\"ne-p\"><span class=\"ne-text\">• 资源：CS61A教材和作业，同时参考《Python编程：从入门到实践》的前几章</span></p><p id=\"ueac294a1\" class=\"ne-p\"><span class=\"ne-text\">阶段二：函数与抽象（在C语言学习函数后）</span></p><p id=\"u8c07d75f\" class=\"ne-p\"><span class=\"ne-text\">• 目标：深入理解函数、参数传递、作用域等，对比C和Python的不同</span></p><p id=\"u56cb5105\" class=\"ne-p\"><span class=\"ne-text\">• 方法：用Python重写C语言的函数练习，注意两者在参数传递（值传递 vs 引用传递）上的区别</span></p><p id=\"u450ccdce\" class=\"ne-p\"><span class=\"ne-text\">• 资源：CS61A中关于函数抽象的部分，以及《流畅的Python》中关于函数的相关章节</span></p><p id=\"uf7948d13\" class=\"ne-p\"><span class=\"ne-text\">阶段三：数据结构（与C语言的数据结构学习同步）</span></p><p id=\"ufdf97690\" class=\"ne-p\"><span class=\"ne-text\">• 目标：理解列表、字典、元组等Python数据结构，与C语言的数组、结构体对比</span></p><p id=\"uacdcee74\" class=\"ne-p\"><span class=\"ne-text\">• 方法：用Python实现C语言数据结构作业的相同功能，比如用列表实现栈和队列</span></p><p id=\"ub7cdabbc\" class=\"ne-p\"><span class=\"ne-text\">• 资源：CS61A以及《Python数据结构与算法》相关章节</span></p><p id=\"ua2860c2d\" class=\"ne-p\"><span class=\"ne-text\">阶段四：项目实践（在C语言学习到一定程度后）</span></p><p id=\"u2a8d9fa2\" class=\"ne-p\"><span class=\"ne-text\">• 目标：综合运用Python完成一个项目，如爬虫、数据分析小项目等</span></p><p id=\"u9e79e762\" class=\"ne-p\"><span class=\"ne-text\">• 方法：先设计大致思路分步完成一个项目，同时可以尝试用C语言实现部分功能，对比两种语言的优劣</span></p><p id=\"u3066999f\" class=\"ne-p\"><span class=\"ne-text\">• 资源：CS61A的项目，以及《Automate the Boring Stuff with Python》中的项目</span></p><p id=\"u267a1f66\" class=\"ne-p\"><span class=\"ne-text\">注意事项：</span></p><p id=\"u7663ac71\" class=\"ne-p\"><span class=\"ne-text\">• 避免同时学习两门语言造成的概念混淆，及时总结对比两种语言的异同。</span></p><p id=\"u8a0fd9e0\" class=\"ne-p\"><span class=\"ne-text\">• 不要贪多，循序渐进，确保每个概念都理解透彻。</span></p></details>\n## 我提出或遇到的问题\n~~~~\n\n<details class=\"lake-collapse\"><summary id=\"u58747106\"><span class=\"ne-text\">培养方案</span></summary><p id=\"u9361adca\" class=\"ne-p\"><span class=\"ne-text\">第一阶段：基础概念与分解能力</span></p><p id=\"u9b99423f\" class=\"ne-p\"><span class=\"ne-text\">• 学习C和Python的基本语法（变量、数据类型、控制流、函数）</span></p><p id=\"ue8d843e6\" class=\"ne-p\"><span class=\"ne-text\">• 重点练习分解：将小问题（如计算器、简单游戏）分解为函数</span></p><p id=\"ued70db8d\" class=\"ne-p\"><span class=\"ne-text\">• 项目：用C和Python分别实现一个简单的计算器，要求将加减乘除分解为不同函数。</span></p><p id=\"uab39d1ab\" class=\"ne-p\"><span class=\"ne-text\">第二阶段：模式识别与抽象</span></p><p id=\"u843d54e1\" class=\"ne-p\"><span class=\"ne-text\">• 学习数据结构（数组、链表、栈、队列）和常见算法（排序、搜索）</span></p><p id=\"u9398521b\" class=\"ne-p\"><span class=\"ne-text\">• 识别不同问题中的模式（如循环模式、递归模式）</span></p><p id=\"ufbf4d91e\" class=\"ne-p\"><span class=\"ne-text\">• 抽象：使用函数模块化，尝试编写可重用的代码</span></p><p id=\"uac865d7d\" class=\"ne-p\"><span class=\"ne-text\">• 项目：用C实现一个链表，用Python实现一个栈，并比较两者的异同。</span></p><p id=\"u47c7adab\" class=\"ne-p\"><span class=\"ne-text\">第三阶段：算法设计与效率</span></p><p id=\"uf6e8383b\" class=\"ne-p\"><span class=\"ne-text\">• 学习算法效率分析（大O表示法）</span></p><p id=\"u9a541ebd\" class=\"ne-p\"><span class=\"ne-text\">• 设计算法解决经典问题（如斐波那契数列、迷宫问题）</span></p><p id=\"uf1fd17e0\" class=\"ne-p\"><span class=\"ne-text\">• 项目：用C和Python分别实现冒泡排序和快速排序，并比较性能。</span></p><p id=\"u884b9319\" class=\"ne-p\"><span class=\"ne-text\">第四阶段：综合项目与迭代</span></p><p id=\"u9a8e1e3c\" class=\"ne-p\"><span class=\"ne-text\">• 选择一个综合项目（如简易图书管理系统、爬虫等）</span></p><p id=\"u2c73a291\" class=\"ne-p\"><span class=\"ne-text\">• 实践分解、模式识别、抽象、算法设计，并不断调试迭代</span></p><p id=\"u0da7e798\" class=\"ne-p\"><span class=\"ne-text\">• 项目：用Python爬取网页数据，并用C处理数据（如统计词频）。</span></p><p id=\"udb134ceb\" class=\"ne-p\"><span class=\"ne-text\">三、自驱力培养机制</span></p><p id=\"u73c0efac\" class=\"ne-p\"><span class=\"ne-text\">1. 目标设定（</span></p><p id=\"u8327046d\" class=\"ne-p\"><span class=\"ne-text\">◦ 具体</span></p><p id=\"u04c32bac\" class=\"ne-p\"><span class=\"ne-text\">◦ 可衡量：完成10个相关练习题，代码行数200行</span></p><p id=\"u21bf1bbe\" class=\"ne-p\"><span class=\"ne-text\">◦ 可实现：根据自身情况设定</span></p><p id=\"ubce95dec\" class=\"ne-p\"><span class=\"ne-text\">◦ 相关：与计算思维培养相关</span></p><p id=\"u72a31027\" class=\"ne-p\"><span class=\"ne-text\">◦ 时限锻炼：一周内完成</span></p><p id=\"uafdb00c8\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u43f43669\" class=\"ne-p\"><span class=\"ne-text\">分解思维（Decomposition</span></p><p id=\"ub0c41c52\" class=\"ne-p\"><span class=\"ne-text\">每日一拆：选择日常问题（如整理书包、规划路线）进行步骤分解</span></p><p id=\"u2a0373e8\" class=\"ne-p\"><span class=\"ne-text\">• 代码映射：将分解步骤转化为伪代码</span></p><p id=\"u9eeba726\" class=\"ne-p\"><span class=\"ne-text\">• 实践项目：</span></p><p id=\"u50ed17c8\" class=\"ne-p\"><span class=\"ne-text\">◦ C语言：实现一个多步骤的数学计算器</span></p><p id=\"uc5b85b5e\" class=\"ne-p\"><span class=\"ne-text\">◦ Python：自动化文件整理脚本</span></p><p id=\"u9e0bffda\" class=\"ne-p\"><span class=\"ne-text\">检测标准：能否将复杂问题分解为7±2个清晰步骤</span></p><p id=\"u009de9ba\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ue91e7100\" class=\"ne-p\"><span class=\"ne-text\">1.2 模式识别（Pattern Recognition）</span></p><p id=\"u8b9e5b11\" class=\"ne-p\"><span class=\"ne-text\">训练方法：</span></p><p id=\"uc7664cf5\" class=\"ne-p\"><span class=\"ne-text\">• 模式收集本：记录编程中遇到的重复模式</span></p><p id=\"ud99bc56a\" class=\"ne-p\"><span class=\"ne-text\">• 类比训练：寻找不同问题间的相似性</span></p><p id=\"ue42e773f\" class=\"ne-p\"><span class=\"ne-text\">• 实践项目：</span></p><p id=\"u46cbd5cf\" class=\"ne-p\"><span class=\"ne-text\">◦ 识别C语言中循环的多种变体</span></p><p id=\"u4e31e668\" class=\"ne-p\"><span class=\"ne-text\">◦ Python中字符串处理的模式总结</span></p><p id=\"ud2e25b35\" class=\"ne-p\"><span class=\"ne-text\">1.3 抽象思维（Abstraction）</span></p><p id=\"uc7584233\" class=\"ne-p\"><span class=\"ne-text\">训练方法：</span></p><p id=\"u0cfebdf8\" class=\"ne-p\"><span class=\"ne-text\">• 层次抽象练习：从具体实现→功能描述→问题本质</span></p><p id=\"ubae81dfd\" class=\"ne-p\"><span class=\"ne-text\">• 接口设计：先设计&quot;做什么&quot;再考虑&quot;怎么做&quot;</span></p><p id=\"u727df609\" class=\"ne-p\"><span class=\"ne-text\">• 实践项目：</span></p><p id=\"u5c0a130e\" class=\"ne-p\"><span class=\"ne-text\">◦ 设计一个通用数据处理的函数接口</span></p><p id=\"udea0c1a7\" class=\"ne-p\"><span class=\"ne-text\">◦ 创建可复用的代码模块</span></p><p id=\"u2c538485\" class=\"ne-p\"><span class=\"ne-text\">2.2 具体训练项目</span></p><p id=\"u3b0fafaf\" class=\"ne-p\"><span class=\"ne-text\">复杂度意识培养：</span></p><p id=\"u36526919\" class=\"ne-p\"><span class=\"ne-text\">• 同一问题的暴力解vs优化解对比</span></p><p id=\"u64c51488\" class=\"ne-p\"><span class=\"ne-text\">• 大数据量下的性能体验（亲自感受差异）</span></p><p id=\"u611ef223\" class=\"ne-p\"><span class=\"ne-text\">数据结构思维：</span></p><p id=\"uf6cc8830\" class=\"ne-p\"><span class=\"ne-text\">• 从&quot;为什么需要数据结构&quot;开始学习</span></p><p id=\"uc39df26d\" class=\"ne-p\"><span class=\"ne-text\">• 每种数据结构解决什么核心问题</span></p><p id=\"u098d3e66\" class=\"ne-p\"><span class=\"ne-text\">第三层：系统思维建立（持续）</span></p><p id=\"ub40c25c8\" class=\"ne-p\"><span class=\"ne-text\">3.1 系统视角训练</span></p><p id=\"u59e3d4e7\" class=\"ne-p\"><span class=\"ne-text\">• 追溯源头：从Python源码看C扩展，理解层次关系</span></p><p id=\"u9efea545\" class=\"ne-p\"><span class=\"ne-text\">• 工具链思维：不只是写代码，而是建立开发系统</span></p><p id=\"uf619ae4b\" class=\"ne-p\"><span class=\"ne-text\">• 错误处理哲学：从防御性编程到弹性设计</span></p><p id=\"u20655fa1\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u447bf100\" class=\"ne-p\"><span class=\"ne-text\">思维维度</span></p><p id=\"u071f9bd4\" class=\"ne-p\"><span class=\"ne-text\">分解思维</span></p><p id=\"u411cf544\" class=\"ne-p\"><span class=\"ne-text\">能分解简单问题</span></p><p id=\"u9a0b3652\" class=\"ne-p\"><span class=\"ne-text\">多层级分解</span></p><p id=\"u22fde3a5\" class=\"ne-p\"><span class=\"ne-text\">系统架构设计</span></p><p id=\"uec0c7524\" class=\"ne-p\"><span class=\"ne-text\">模式识别</span></p><p id=\"u49809f6b\" class=\"ne-p\"><span class=\"ne-text\">识别语法模式</span></p><p id=\"u80550988\" class=\"ne-p\"><span class=\"ne-text\">识别算法模式</span></p><p id=\"uac36cd56\" class=\"ne-p\"><span class=\"ne-text\">识别设计模式</span></p><p id=\"uec958568\" class=\"ne-p\"><span class=\"ne-text\">抽象思维</span></p><p id=\"u724e42b2\" class=\"ne-p\"><span class=\"ne-text\">函数抽象</span></p><p id=\"uac9618f4\" class=\"ne-p\"><span class=\"ne-text\">模块抽象</span></p><p id=\"ua72f7fa4\" class=\"ne-p\"><span class=\"ne-text\">系统抽象</span></p></details>\n~~~~\n\n~~~~\n\n<details class=\"lake-collapse\"><summary id=\"u4c3c5bdf\"><span class=\"ne-text\">希望在培养计算思维的同时，避免思维固化，鼓励跳出框架的思考</span></summary><ol class=\"ne-ol\"><li id=\"ua991e0f3\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(207, 211, 214); background-color: rgb(21, 21, 23); font-size: 14px\">问题解决的多路径探索：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u874c9cb6\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(207, 211, 214); background-color: rgb(21, 21, 23); font-size: 14px\">对于每个问题，强制要求自己至少用两种不同的方法解决。</span></li><li id=\"u343ad1dd\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(207, 211, 214); background-color: rgb(21, 21, 23); font-size: 14px\">例如：循环 vs 公式、递归 vs 迭代、暴力 vs 数学优化等。</span></li></ul></ul><ol start=\"2\" class=\"ne-ol\"><li id=\"u6046d625\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(207, 211, 214); background-color: rgb(21, 21, 23); font-size: 14px\">思维模式切换训练：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u6a04baf5\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(207, 211, 214); background-color: rgb(21, 21, 23); font-size: 14px\">定期进行“一题多解”的专项训练。</span></li><li id=\"uafde29a1\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(207, 211, 214); background-color: rgb(21, 21, 23); font-size: 14px\">学习不同领域的解题思路（如数学、算法、硬件特性等）。</span></li></ul></ul><ol start=\"3\" class=\"ne-ol\"><li id=\"u26ee733c\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(207, 211, 214); background-color: rgb(21, 21, 23); font-size: 14px\">反思与比较：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u0a9cd9f2\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(207, 211, 214); background-color: rgb(21, 21, 23); font-size: 14px\">对不同解法进行优缺点分析（时间复杂度、空间复杂度、可读性、通用性等）。</span></li><li id=\"u6d1d0c61\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(207, 211, 214); background-color: rgb(21, 21, 23); font-size: 14px\">记录哪种思维模式在什么情况下更有效。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"uec0a1f5d\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(207, 211, 214); background-color: rgb(21, 21, 23); font-size: 14px\"></span></li></ul><p id=\"u422c3d69\" class=\"ne-p\"><span class=\"ne-text\">挑战假设：</span></p><p id=\"u327d83b1\" class=\"ne-p\"><span class=\"ne-text\">◦ 在解决问题时，问自己：“这个问题的约束条件是否必要？”“如果改变条件，会有更好的方法吗？”</span></p><p id=\"ucc1d018a\" class=\"ne-p\"><span class=\"ne-text\">解法1：循环累加</span></p><p id=\"u05943eae\" class=\"ne-p\"><span class=\"ne-text\">def sum_loop(n):</span></p><p id=\"u4db9d15a\" class=\"ne-p\"><span class=\"ne-text\">    s = 0</span></p><p id=\"u5f1cb4dd\" class=\"ne-p\"><span class=\"ne-text\">    for i in range(1, n+1):</span></p><p id=\"uf26c8144\" class=\"ne-p\"><span class=\"ne-text\">        s += i</span></p><p id=\"ue082f7c0\" class=\"ne-p\"><span class=\"ne-text\">    return s</span></p><p id=\"u3e6dc9ef\" class=\"ne-p\"><span class=\"ne-text\">解法2：求和公式</span></p><p id=\"u46c1e67b\" class=\"ne-p\"><span class=\"ne-text\">def sum_formula(n):</span></p><p id=\"u4580e4de\" class=\"ne-p\"><span class=\"ne-text\">    return n * (n+1) // 2</span></p><p id=\"u59c57e4e\" class=\"ne-p\"><span class=\"ne-text\">解法3：递归</span></p><p id=\"u80348817\" class=\"ne-p\"><span class=\"ne-text\">def sum_recursive(n):</span></p><p id=\"uda8e04e0\" class=\"ne-p\"><span class=\"ne-text\">    if n == 1:</span></p><p id=\"ueef25523\" class=\"ne-p\"><span class=\"ne-text\">        return 1</span></p><p id=\"ub3ee9af8\" class=\"ne-p\"><span class=\"ne-text\">    return n + sum_recursive(n-1)</span></p><p id=\"ub6bf6d91\" class=\"ne-p\"><span class=\"ne-text\">解法4：使用内置函数</span></p><p id=\"ud6db59ae\" class=\"ne-p\"><span class=\"ne-text\">def sum_builtin(n):</span></p><p id=\"u3558cf1d\" class=\"ne-p\"><span class=\"ne-text\">    return sum(range(1, n+1))</span></p><p id=\"u9342e5a0\" class=\"ne-p\"><span class=\"ne-text\">解法5：利用数据结构（如列表生成式）</span></p><p id=\"ucb3d3ebe\" class=\"ne-p\"><span class=\"ne-text\">def sum_list(n):</span></p><p id=\"u0cfc6883\" class=\"ne-p\"><span class=\"ne-text\">    return sum([i for i in range(1, n+1)])</span></p><p id=\"ub98c9f57\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ue49e3c9e\" class=\"ne-p\"><span class=\"ne-text\">反思与比较：</span></p><p id=\"ue9723433\" class=\"ne-p\"><span class=\"ne-text\">• 循环：容易理解，但O(n)时间复杂度。</span></p><p id=\"uc6564dea\" class=\"ne-p\"><span class=\"ne-text\">• 公式：O(1)时间复杂度，但需要数学知识。</span></p><p id=\"ue460e46b\" class=\"ne-p\"><span class=\"ne-text\">• 递归：代码简洁，但递归深度限制，可能栈溢出。</span></p><p id=\"uea2d2541\" class=\"ne-p\"><span class=\"ne-text\">• 内置函数：利用语言特性，代码简洁，但可能隐藏细节。</span></p><p id=\"u485010a6\" class=\"ne-p\"><span class=\"ne-text\">• 列表生成式：类似循环，但可能消耗更多内存。</span></p><p id=\"ub3ae1e36\" class=\"ne-p\"><span class=\"ne-text\">拓展思考：</span></p><p id=\"u3a610e83\" class=\"ne-p\"><span class=\"ne-text\">• 如果n非常大，哪种方法最可靠？</span></p><p id=\"ub7f66e88\" class=\"ne-p\"><span class=\"ne-text\">• 如果要求连续自然数的平方和、立方和呢？</span></p><p id=\"ue280b6ea\" class=\"ne-p\"><span class=\"ne-text\">• 如果自然数序列不是从1开始，或者不是连续的呢？</span></p><p id=\"ub88f7491\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u81ee7081\" class=\"ne-p\"><span class=\"ne-text\">每个编程问题都要求三种截然不同的解法：</span></p><p id=\"ub0c7c3b3\" class=\"ne-p\"><span class=\"ne-text\">• 解法1：最直观的常规思路</span></p><p id=\"u44804733\" class=\"ne-p\"><span class=\"ne-text\">• 解法2：利用语言特性的优化思路</span></p><p id=\"u1fbc2992\" class=\"ne-p\"><span class=\"ne-text\">• 解法3：完全跳出编程框架的跨界思路</span></p><p id=\"u3f9fe89f\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u5ac62274\" class=\"ne-p\"><span class=\"ne-text\">约束条件下的创意训练</span></p><p id=\"u3cad028c\" class=\"ne-p\"><span class=\"ne-text\">反向约束练习：</span></p><p id=\"u736db5d9\" class=\"ne-p\"><span class=\"ne-text\">• &quot;不允许使用循环&quot;解决求和问题</span></p><p id=\"u24497da4\" class=\"ne-p\"><span class=\"ne-text\">• &quot;只能用函数式编程&quot;实现算法</span></p><p id=\"u7842a5d1\" class=\"ne-p\"><span class=\"ne-text\">• &quot;必须在3行代码内完成&quot;的简洁挑战</span></p><p id=\"udc90c597\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"udf9c9c47\" class=\"ne-p\"><span class=\"ne-text\">定期自检问题清单：</span></p><p id=\"u0c5896b9\" class=\"ne-p\"><span class=\"ne-text\">1. 我最近是否过度依赖某种固定的解题模式？</span></p><p id=\"u107019a3\" class=\"ne-p\"><span class=\"ne-text\">2. 遇到新问题时，我的第一反应是套用旧模式还是探索新方法？</span></p><p id=\"u338133bc\" class=\"ne-p\"><span class=\"ne-text\">3. 我是否能清晰解释为什么选择某种解法而不是其他？</span></p><p id=\"u9e8e7d44\" class=\"ne-p\"><span class=\"ne-text\">4. 我是否主动学习与自己习惯相反的思维方式？</span></p><p id=\"uccc9b2fd\" class=\"ne-p\"><span class=\"ne-text\"></span></p></details>\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~自主感（Autonomy）~~\n\n~~• 学习主权：让你自己设计20%的学习内容~~\n\n~~• 项目选择权：每月有一个完全自选项目~~\n\n~~• 进度控制：建立个人节奏，不被外部进度压迫~~\n\n~~2. 精通感（Mastery）~~\n\n~~• 小胜记录：建立\"每日小成就\"日志~~\n\n~~• 技能图谱可视化：看到自己的成长轨迹~~\n\n~~• 挑战梯度设计：85%熟悉内容+15%新挑战~~\n\n~~3. 目的感（Purpose）~~\n\n~~• 个人项目库：解决自己实际问题的项目~~\n\n~~• 价值连接：每个技术点都与现实问题连接~~\n\n~~• 作品意识：不是完成作业，而是创造作品~~\n\n~~~~\n\n~~~~\n\n~~~~\n\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 16277575838116370625
    },
    "237930222": {
        "id": 237930222,
        "type": "Doc",
        "slug": "ksa0uie6ba8kymg8",
        "title": "Python学习类-朱城玮",
        "description": "行前有所思首先我思考到的一个非常重要的问题是，我学习python的目的究竟是什么，我并不认为学习python仅仅只是为了掌握一门语言，成为一门语言专家，对所有的变换，各种各样的函数数若家珍，我认为学习python最重要的目的在于①：理解其背后的语言精神，这么说虽然有点抽象，但就像学习英语可以从...",
        "cover": "",
        "user_id": 59523933,
        "book_id": 69189148,
        "last_editor_id": 59523933,
        "public": 2,
        "status": 0,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 659,
        "created_at": "2025-09-22T13:56:08.000Z",
        "updated_at": "2025-09-23T01:06:49.000Z",
        "content_updated_at": "2025-09-23T01:06:49.000Z",
        "published_at": "2025-09-22T15:00:00.000Z",
        "first_published_at": "2025-09-22T14:59:59.946Z",
        "user": {
            "id": 59523933,
            "type": "User",
            "login": "u57864497",
            "name": "朱城玮",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-09T07:20:58.000Z",
            "updated_at": "2025-09-22T12:47:35.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59523933,
            "type": "User",
            "login": "u57864497",
            "name": "朱城玮",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-09T07:20:58.000Z",
            "updated_at": "2025-09-22T12:47:35.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n**首先我思考到的一个非常重要的问题是，我学习python的目的究竟是什么，我并不认为学习python仅仅只是为了掌握一门语言，成为一门语言专家，对所有的变换，各种各样的函数数若家珍，我认为学习python最重要的目的在于①：理解其背后的语言精神，这么说虽然有点抽象，但就像学习英语可以从中参透西方的人文精神一样，学习python同样也有助于理解他的语言精神(像是面向对象编程，动态语言之类) ②：应用，能够熟练地运用python进行各种实际的工作，像用python处理文件，爬取网络数据，进行机器学习。     所以，我的学习语言的倾向性会在与实际的应用，和概念的理解，而不在于对很多过于细致的细节的苛求。**\n\n## 关于python，我在尝试分支1\n**我大概构想了一个比较适合我的python学习框架**\n\n**我的总体思想是这样的运用整体的时间来构建一个大致性的理解与框架，然后利用碎片化的时间去把更多的技术细节填充到我的知识框架中（比如关于python中的关于集合，列表，元组，字典这方面的知识，在整体的时间中，我会了解他们同为python中集合数据的类型，以及各自的相关特点，像是否有序，能否被更改，以及其基本的处理方式。而在碎片化的时间里，我会去了解每个类型对应的不同的函数处理方式）**\n\n▣**第一部分：基础知识学习**\n\n<font style=\"color:rgb(38, 38, 38);\">▣</font>**<font style=\"color:rgb(38, 38, 38);\">第二部分：python之于工作自动化</font>**\n\n<font style=\"color:rgb(38, 38, 38);\">▣</font>**<font style=\"color:rgb(38, 38, 38);\">第三部分:网络爬虫--该部分我打算浅浅了解一下就够了，大致掌握网络爬虫的基本原理，常用方式，和相关的</font>**~~**<font style=\"color:rgb(38, 38, 38);\">法律知识。</font>**~~\n\n<font style=\"color:rgb(38, 38, 38);\">▣</font>**<font style=\"color:rgb(38, 38, 38);\">第四部分：机器学习：</font>**\n\n<font style=\"color:rgb(38, 38, 38);\">▣</font>**<font style=\"color:rgb(38, 38, 38);\">第五部分：</font>**\n\n<font style=\"color:rgb(38, 38, 38);\">▣</font>\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 9607366421830094394
    },
    "237929647": {
        "id": 237929647,
        "type": "Doc",
        "slug": "gaefm8yn8nmx61ll",
        "title": "Python学习类-吕博冉",
        "description": "行前有所思（当你开始做某件事情前，或许会有一些思考）关于python，我在尝试xxxxx（点明你选择的分支，你的学习方向，你有哪些操作）我提出或遇到的问题（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）一些总结又或许感悟（比较自由，也可以是你想与大家分享的内容）...",
        "cover": "",
        "user_id": 60657479,
        "book_id": 69189148,
        "last_editor_id": 60657479,
        "public": 2,
        "status": 0,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 138,
        "created_at": "2025-09-22T13:52:37.000Z",
        "updated_at": "2025-09-23T14:41:12.000Z",
        "content_updated_at": "2025-09-23T14:41:12.000Z",
        "published_at": "2025-09-23T00:17:31.000Z",
        "first_published_at": "2025-09-23T00:17:30.935Z",
        "user": {
            "id": 60657479,
            "type": "User",
            "login": "lvboran-xevrn",
            "name": "吕博冉",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-12T10:30:49.000Z",
            "updated_at": "2025-09-17T11:59:08.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60657479,
            "type": "User",
            "login": "lvboran-xevrn",
            "name": "吕博冉",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-12T10:30:49.000Z",
            "updated_at": "2025-09-17T11:59:08.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n~~（当你开始做某件事情前，或许会有一些思考）~~\n\n## 关于python，我在尝试xxxxx\n~~（点明你选择的分支，你的学习方向，你有哪些操作）~~\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n",
        "simhash": 79772046881857841
    },
    "237924827": {
        "id": 237924827,
        "type": "Doc",
        "slug": "li8b9gkb785ztzp0",
        "title": "Python学习类-赵雯睿",
        "description": "行前有所思（当你开始做某件事情前，或许会有一些思考）关于python，我在尝试xxxxx（点明你选择的分支，你的学习方向，你有哪些操作）目前计划：进行了python入门基础的课程查找和计划安排聪明方法学python视频+练习好像找了一个专门教这个的网站，但还没报名。先听b站网课吧，后面看看情况...",
        "cover": "",
        "user_id": 60430909,
        "book_id": 69189148,
        "last_editor_id": 60430909,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 288,
        "created_at": "2025-09-22T13:15:53.000Z",
        "updated_at": "2025-09-22T15:20:03.000Z",
        "content_updated_at": "2025-09-22T13:16:44.000Z",
        "published_at": "2025-09-22T13:16:44.000Z",
        "first_published_at": "2025-09-22T13:16:44.181Z",
        "user": {
            "id": 60430909,
            "type": "User",
            "login": "zhaowenrui-ankpq",
            "name": "赵雯睿",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60430909/1757758807959-avatar/3447ae6a-e302-468f-a8a7-4b913bd82e12.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-05T23:54:22.000Z",
            "updated_at": "2025-09-23T15:59:02.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60430909,
            "type": "User",
            "login": "zhaowenrui-ankpq",
            "name": "赵雯睿",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60430909/1757758807959-avatar/3447ae6a-e302-468f-a8a7-4b913bd82e12.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-05T23:54:22.000Z",
            "updated_at": "2025-09-23T15:59:02.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n~~（当你开始做某件事情前，或许会有一些思考）~~\n\n## 关于python，我在尝试xxxxx\n~~（点明你选择的分支，你的学习方向，你有哪些操作）~~\n\n目前计划：\n\n- [x] 进行了python入门基础的课程查找和计划安排\n- [ ] 聪明方法学python视频+练习\n\n> 好像找了一个专门教这个的网站，但还没报名。先听b站网课吧，后面看看情况\n>\n\n- [ ] 电子书：python编程：从入门到实践\n\n> - [ ] 3天内看完有关python语法层面的内容\n> - [ ] 进行python算法的训练 leetcode\n> - [ ] 结合入门讲义中的项目进行训练\n>\n\n- [ ] sicp讲义+oj练习\n\n> 计划旁听sicp的实验课（时间冲突）讲义自己课下理解\n>\n\n\n\n~~~~\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 6958176820612343707
    },
    "237923937": {
        "id": 237923937,
        "type": "Doc",
        "slug": "db4l7oqfo0ncpzrr",
        "title": "Python学习类-邓粞元",
        "description": "行前有所思（当你开始做某件事情前，或许会有一些思考）关于python，我在尝试xxxxx（点明你选择的分支，你的学习方向，你有哪些操作）我提出或遇到的问题（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）一些总结又或许感悟（比较自由，也可以是你想与大家分享的内容）...",
        "cover": "",
        "user_id": 60652257,
        "book_id": 69189148,
        "last_editor_id": 60652257,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 138,
        "created_at": "2025-09-22T13:08:39.000Z",
        "updated_at": "2025-09-22T15:19:56.000Z",
        "content_updated_at": "2025-09-22T13:08:56.000Z",
        "published_at": "2025-09-22T13:08:56.000Z",
        "first_published_at": "2025-09-22T13:08:56.130Z",
        "user": {
            "id": 60652257,
            "type": "User",
            "login": "mixidengxiyuan",
            "name": "邓粞元",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/anonymous/1757643798660-93f04e04-383a-4330-8c6e-c509d45a775b.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-12T02:24:12.000Z",
            "updated_at": "2025-09-17T15:39:04.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60652257,
            "type": "User",
            "login": "mixidengxiyuan",
            "name": "邓粞元",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/anonymous/1757643798660-93f04e04-383a-4330-8c6e-c509d45a775b.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-12T02:24:12.000Z",
            "updated_at": "2025-09-17T15:39:04.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n~~（当你开始做某件事情前，或许会有一些思考）~~\n\n## 关于python，我在尝试xxxxx\n~~（点明你选择的分支，你的学习方向，你有哪些操作）~~\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 79772046881857841
    },
    "237921964": {
        "id": 237921964,
        "type": "Doc",
        "slug": "lcfsc1bn97awd833",
        "title": "Python学习类-申蔡俊",
        "description": "行前有所思可以当成废话直接pass。我是来自数院的cs小白，从一开始也打定主意课余时间要多学cs，多接触AI，依我的观点，计算机首先是职场必备技能，而AI是显而易见的大势所趋，无论是学界还是业界。虽然还不清楚自己未来何去何从，但我希望自己一方面掌握时代要求我掌握的技能，另一方面开拓自己的认知局...",
        "cover": "",
        "user_id": 60972145,
        "book_id": 69189148,
        "last_editor_id": 60972145,
        "public": 2,
        "status": 0,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 333,
        "created_at": "2025-09-22T12:53:11.000Z",
        "updated_at": "2025-09-23T01:24:30.000Z",
        "content_updated_at": "2025-09-23T01:24:30.000Z",
        "published_at": "2025-09-23T00:17:42.000Z",
        "first_published_at": "2025-09-22T12:57:27.391Z",
        "user": {
            "id": 60972145,
            "type": "User",
            "login": "huane-zl4oe",
            "name": "申蔡俊",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60972145/1758505097810-avatar/2d9721d2-e32f-417a-b7f0-1ecb2d47c6de.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-21T03:31:59.000Z",
            "updated_at": "2025-09-22T11:25:02.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60972145,
            "type": "User",
            "login": "huane-zl4oe",
            "name": "申蔡俊",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60972145/1758505097810-avatar/2d9721d2-e32f-417a-b7f0-1ecb2d47c6de.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-21T03:31:59.000Z",
            "updated_at": "2025-09-22T11:25:02.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n可以当成废话直接pass。\n\n我是来自数院的cs小白，从一开始也打定主意课余时间要多学cs，多接触AI，依我的观点，计算机首先是职场必备技能，而AI是显而易见的大势所趋，无论是学界还是业界。虽然还不清楚自己未来何去何从，但我希望自己一方面掌握时代要求我掌握的技能，另一方面开拓自己的认知局限、挖掘自身的能力潜力。\n\n根据d老师给我的指南，这个学期我先打好编程基础吧。\n\n目标？暂定为基本掌握Python，了解C++及一些底层逻辑，把数学问题转化为代码，恳请各位多多指正和建议，相信能给我带来更多深入思考和启发。\n\n## 关于python，我在尝试听网课补语法\n~~~~\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 9301050614671107377
    },
    "237921713": {
        "id": 237921713,
        "type": "Doc",
        "slug": "iq0gqc57ox7q64ib",
        "title": "Python学习类-李赫",
        "description": "行前有所思（当你开始做某件事情前，或许会有一些思考）关于python，我在尝试xxxxx（点明你选择的分支，你的学习方向，你有哪些操作）我提出或遇到的问题（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）一些总结又或许感悟（比较自由，也可以是你想与大家分享的内容）...",
        "cover": "",
        "user_id": 60790129,
        "book_id": 69189148,
        "last_editor_id": 60790129,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 138,
        "created_at": "2025-09-22T12:51:12.000Z",
        "updated_at": "2025-09-22T15:19:43.000Z",
        "content_updated_at": "2025-09-22T12:51:30.000Z",
        "published_at": "2025-09-22T12:51:30.000Z",
        "first_published_at": "2025-09-22T12:51:30.479Z",
        "user": {
            "id": 60790129,
            "type": "User",
            "login": "xiaoa-rsqlo",
            "name": "李赫",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/anonymous/1758031713664-b5b2b663-23c4-42c3-ac9d-e249c3722476.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-16T14:08:55.000Z",
            "updated_at": "2025-09-17T00:12:21.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60790129,
            "type": "User",
            "login": "xiaoa-rsqlo",
            "name": "李赫",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/anonymous/1758031713664-b5b2b663-23c4-42c3-ac9d-e249c3722476.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-16T14:08:55.000Z",
            "updated_at": "2025-09-17T00:12:21.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n~~（当你开始做某件事情前，或许会有一些思考）~~\n\n## 关于python，我在尝试xxxxx\n~~（点明你选择的分支，你的学习方向，你有哪些操作）~~\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 79772046881857841
    },
    "237919559": {
        "id": 237919559,
        "type": "Doc",
        "slug": "xv76r6rkuyf0292i",
        "title": "信息聚合平台V1.0设想(语雀only)",
        "description": "总体展望一个带有 UI 的应用程序界面，需要满足以下功能打开时自动更新语雀文档信息，根据最后一次更新时间来判断是否将文章下载到本地通过 AI 给文章赋予特定的标签，加入数据库，并且生成摘要文章有更新时自动对其标签和内容跟进更新保存每一篇文章的点赞评论阅读量等信息可以设置特别关注人或者特别关注文...",
        "cover": "",
        "user_id": 59025088,
        "book_id": 69189148,
        "last_editor_id": 59025088,
        "public": 2,
        "status": 1,
        "likes_count": 2,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 286,
        "created_at": "2025-09-22T12:37:29.000Z",
        "updated_at": "2025-09-22T13:12:16.000Z",
        "content_updated_at": "2025-09-22T12:57:18.000Z",
        "published_at": "2025-09-22T12:57:18.000Z",
        "first_published_at": "2025-09-22T12:57:18.137Z",
        "user": {
            "id": 59025088,
            "type": "User",
            "login": "yuqueyonghuh793gs",
            "name": "洪翌铭",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59025088/1753427230505-avatar/8c7d38d5-5243-450b-b79d-383eec494ea1.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-25T07:06:37.000Z",
            "updated_at": "2025-09-04T06:24:50.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59025088,
            "type": "User",
            "login": "yuqueyonghuh793gs",
            "name": "洪翌铭",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59025088/1753427230505-avatar/8c7d38d5-5243-450b-b79d-383eec494ea1.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-25T07:06:37.000Z",
            "updated_at": "2025-09-04T06:24:50.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "# 总体展望\n+ **一****个带有 UI 的应用程序界面，需要满足以下功能**\n+ **打开时自动更新语雀文档信息，根据最后一次更新时间来判断是否将文章下载到本地**\n+ **通过 AI 给文章赋予特定的标签，加入数据库，并且生成摘要**\n+ **文章有更新时自动对其标签和内容跟进更新**\n+ **保存每一篇文章的点赞评论阅读量等信息**\n+ **可以设置特别关注人或者特别关注文章**\n+ **当自己或是特别关注的内容有新点赞新评论时推送**\n+ **有一个对话窗口，输入内容后由 AI 将这些内容转化为标签**\n+ **根据标签在数据库中查找对应文章，并按照某种优先次序排列**\n+ **能够显示摘要，点开能够渲染 markdown，并且能够重定向到语雀的页面**\n+ **一篇文章可能涵盖多种主题，点开某个文章时能够自动定位到你需要的位置**\n+ **减少 token 消耗！！！！**\n\n",
        "simhash": 4072555704767733600
    },
    "237912050": {
        "id": 237912050,
        "type": "Doc",
        "slug": "nt5pcut5biums1qv",
        "title": "Python学习类-俞天镒",
        "description": "行前有所思作为一个本周才加入的新人，我感到激动却也迷茫。作为一个Nova小白，我对诸位大佬的代码能力感到敬畏。但自从对中国大学祛魅之后，我明白这是提升我自学能力与竞争力的最佳时机，我需要学会抓住。实际上我有一定的c++基础，学过一些容器，也有递归动规等，但我发觉我并没有建立相关应用场景，只是会...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/jpeg/58374392/1758631888161-0634b465-6984-4413-8190-dba7975fd8fd.jpeg",
        "user_id": 58374392,
        "book_id": 69189148,
        "last_editor_id": 58374392,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 1143,
        "created_at": "2025-09-22T11:51:02.000Z",
        "updated_at": "2025-09-23T16:10:41.000Z",
        "content_updated_at": "2025-09-23T16:10:41.000Z",
        "published_at": "2025-09-23T16:10:41.000Z",
        "first_published_at": "2025-09-22T12:45:28.487Z",
        "user": {
            "id": 58374392,
            "type": "User",
            "login": "u56734955",
            "name": "俞天镒",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-06T08:03:02.000Z",
            "updated_at": "2025-09-22T04:08:42.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 58374392,
            "type": "User",
            "login": "u56734955",
            "name": "俞天镒",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-06T08:03:02.000Z",
            "updated_at": "2025-09-22T04:08:42.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n作为一个本周才加入的新人，我感到激动却也迷茫。作为一个Nova小白，我对诸位大佬的代码能力感到敬畏。\n\n但自从对中国大学祛魅之后，我明白这是提升我自学能力与竞争力的最佳时机，我需要学会抓住。实际上我有一定的c++基础，学过一些容器，也有递归动规等，但我发觉我并没有建立相关应用场景，只是会做一些题目而已，为此，我打算从0开始，由python初学掌握碎片化学习方法、建立程序思维并找到应用场景。\n\n## 关于python，我在尝试初学\n> #### 分支1：构建自主性学习Python的学习框架\n> 碎片化学习并不是抛弃传统的学习框架，相反，碎片化学习模式的要求更高！\n>\n> 因为你需要思考当前的碎片化学习内容，它与整体的关系是什么\n>\n> 第一周实践组的同学，在完成使用Python获取语雀文档的任务中，公开了一些源码\n>\n> 作为新手，很可能看不懂这些代码，想要系统性的学习瞻仰大神的学习内容，大概不知道该从哪里下手\n>\n> 基于我们推荐的PBL学习模式，如果你有能力可以知道这些代码里，具体包含了Python哪些章节哪些技巧（比如有人告诉你这段代码包含了：循环、判断、包的安装、函数、文件读写、List、基础语法格式等几部分内容），那么只要比照着教程上对应的章节，再去理解代码里具体每一行的意义，对于新手来说，学习的过程其实是可控的。所以碎片化学习有一个前提，就是要有意识先构建整体学习框架，并不断训练自己通过PBL的方式，提升精准定位当前学习内容的能力。\n>\n> \n>\n> 选择本分支的同学，请结合自身实际情况，尝试构建自主性学习Python的学习框架，并和上周一样撰写文档，暴露自己的思维过程。学习框架不局限，你可以选择通过教材学习、视频学习、习题集学习，或者结合这些内容，或者补充你觉得更好的方式。\n>\n\n借助于菜鸟教程与kimi，我希望能在第一周（第一周入群）完成对python基础语法学习。我相信这是可行的。这源于我对编程语言的掌握与熟悉，以及课抢的少所带来的大块时间。\n\n\n\n![画板](https://cdn.nlark.com/yuque/0/2025/jpeg/58374392/1758631888161-0634b465-6984-4413-8190-dba7975fd8fd.jpeg)\n\n希望在第一周初步学习后，我能具备基本语言编写能力，在下一周选择爬虫/数据分析等分支，边学边深入研究。\n\n## 我提出或遇到的问题\n日记\n\n9/23 今天有一些事情耽搁，主要完成文档编写工作，并完成python环境配置、上网免费激活了pycharm，借助kimi了解了一些基础知识（about cmd powershell 虚拟环境），探索了ai助手工具fitten code chat，明天特别空，争取把c的知识复习并迁移到py\n\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n我对大学一直有相当的憧憬，这也是在周围人的经验性言论下促成的——直至我真正踏入并开始学习为止。\n\n我想我已经是对大学祛魅了吧。没有相当的自控力，掌握一门傍身的本领，当我走出校园之日，我义务教育延续的思维终将破碎，我也绝将碌碌无为。\n\n我从未战胜我的惰性，暑假也是完全在放纵中挥霍，我相信我能在nova社友的监督下实现蝶变吧。\n\n多言了，实则我所述说的社友们应该是早有认识了，或许我是太钝了吧。\n\n与诸位共勉！\n\n\n\n",
        "simhash": 8107157260973942671
    },
    "237911121": {
        "id": 237911121,
        "type": "Doc",
        "slug": "gyum5lqarsd5ivkp",
        "title": "实践操作类-郑袭明",
        "description": "想法先写个小程序，把语雀数据存入数据库正在疯狂敲代码中（）",
        "cover": "",
        "user_id": 59786892,
        "book_id": 69189148,
        "last_editor_id": 59786892,
        "public": 2,
        "status": 1,
        "likes_count": 5,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 29,
        "created_at": "2025-09-22T11:46:37.000Z",
        "updated_at": "2025-09-24T00:16:06.000Z",
        "content_updated_at": "2025-09-23T06:06:41.000Z",
        "published_at": "2025-09-23T06:06:41.000Z",
        "first_published_at": "2025-09-22T11:47:03.471Z",
        "user": {
            "id": 59786892,
            "type": "User",
            "login": "yuqueyonghuqnyzgw",
            "name": "郑袭明",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59786892/1758378043190-avatar/83438c06-f3aa-4a1a-8389-501326b758f5.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-17T14:06:29.000Z",
            "updated_at": "2025-08-24T15:13:52.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59786892,
            "type": "User",
            "login": "yuqueyonghuqnyzgw",
            "name": "郑袭明",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59786892/1758378043190-avatar/83438c06-f3aa-4a1a-8389-501326b758f5.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-17T14:06:29.000Z",
            "updated_at": "2025-08-24T15:13:52.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 想法\n先写个小程序，把语雀数据存入数据库\n\n正在疯狂敲代码中（）\n\n",
        "simhash": 3769636378772766754
    },
    "237910273": {
        "id": 237910273,
        "type": "Doc",
        "slug": "eslu0e17qdmch5fw",
        "title": "python学习类-卢鑫桐",
        "description": "分支2：探索在AI的辅助下学习Python的可行性 1.AI工具之前用的是github copilot，但它每月聊天信息配额有点少，很快就用完了，现在用的DeepSeekcopilot可以把文件直接喂给它，进行解释,修复，最好用的是它可以提示并且自动安装一些库，不用我手动pip install...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/59953498/1758542619341-e1e522f5-92ba-4f9d-8c40-5f97ee5cce77.png",
        "user_id": 59953498,
        "book_id": 69189148,
        "last_editor_id": 59953498,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 222,
        "created_at": "2025-09-22T11:40:52.000Z",
        "updated_at": "2025-09-22T15:19:16.000Z",
        "content_updated_at": "2025-09-22T12:46:16.000Z",
        "published_at": "2025-09-22T12:46:16.000Z",
        "first_published_at": "2025-09-22T12:46:16.467Z",
        "user": {
            "id": 59953498,
            "type": "User",
            "login": "yuqueyonghuntvwl3",
            "name": "卢鑫桐",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59953498/1757815249234-avatar/36af140b-54ad-46b3-b270-c060d69815d2.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-22T05:08:56.000Z",
            "updated_at": "2025-09-21T01:59:02.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59953498,
            "type": "User",
            "login": "yuqueyonghuntvwl3",
            "name": "卢鑫桐",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59953498/1757815249234-avatar/36af140b-54ad-46b3-b270-c060d69815d2.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-22T05:08:56.000Z",
            "updated_at": "2025-09-21T01:59:02.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "#### 分支2：探索在AI的辅助下学习Python的可行性\n 1.AI工具之前用的是github copilot，但它每月聊天信息配额有点少，很快就用完了，现在用的DeepSeek\n\n2. copilot可以把文件直接喂给它，进行解释,修复，最好用的是它可以提示并且自动安装一些库，不用我手动pip install ,未安装的编译器可以自动跳出网址。\n3. DeepSeek可以截图或把错误代码复制发给它，讲解比copilot详细![](https://cdn.nlark.com/yuque/0/2025/png/59953498/1758542619341-e1e522f5-92ba-4f9d-8c40-5f97ee5cce77.png)![](https://cdn.nlark.com/yuque/0/2025/png/59953498/1758542619371-05b4c5ed-f2a7-4df8-95ba-a3d30affc921.png)\n\n不仅仅解决发送问题，还会引申出相关易混淆的问题\n\n给AI一给问题，它会给出多种版本答案像优测,安全,简易等，但它给出的都是标准格式，像一些链接，地址不知道在哪输入。\n\n\n\n",
        "simhash": 10160273987675665570
    },
    "237898667": {
        "id": 237898667,
        "type": "Doc",
        "slug": "xvkk3nzgatckbony",
        "title": "python学习类-钟翔宇",
        "description": "行前有所思对于一个零基础的小白，在开始python学习之前我认为制定一个学习框架与规划是十分关键的。就像在出门远行旅游之前做好行程安排一样，具有指导性的作用。而我在此所进行的规划安排是基于自身能力与基础的，但可供大家参考。关于python，我在尝试制定学习框架（分支任务）阶段一：打好基础此阶段...",
        "cover": "",
        "user_id": 59587426,
        "book_id": 69189148,
        "last_editor_id": 59587426,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 780,
        "created_at": "2025-09-22T10:14:50.000Z",
        "updated_at": "2025-09-22T15:19:10.000Z",
        "content_updated_at": "2025-09-22T11:27:30.000Z",
        "published_at": "2025-09-22T11:27:30.000Z",
        "first_published_at": "2025-09-22T11:27:30.291Z",
        "user": {
            "id": 59587426,
            "type": "User",
            "login": "nannan-vqyqr",
            "name": "钟翔宇",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-11T10:03:50.000Z",
            "updated_at": "2025-09-16T09:51:37.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59587426,
            "type": "User",
            "login": "nannan-vqyqr",
            "name": "钟翔宇",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-11T10:03:50.000Z",
            "updated_at": "2025-09-16T09:51:37.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n**对于一个零基础的小白，在开始python学习之前我认为制定一个学习框架与规划是十分关键的。**\n\n**就像在出门远行旅游之前做好行程安排一样，具有指导性的作用。**\n\n**而我在此所进行的规划安排是基于自身能力与基础的，但可供大家参考。**\n\n## 关于python，我在尝试制定学习框架（分支任务）\n**阶段一：打好基础**\n\n****\n\n**此阶段的主要目标是掌握Python的核心语法，能独立编写一些小程序。**\n\n**1.环境搭建：**\n\n**可自助下载VS Code或PyCharm作为自己的工作平台（具体内容不做重点论述）**\n\n**2.寻找合适的学习资源：**\n\n**极力推荐视频教程与书籍自学的方式相结合（但这需要一定量的空闲时间，用碎片化时间学习可能会事倍功半)**\n\n**可从B站和中国大学MOOC网中寻找教学资源，这里我倾向于B站廖雪峰的Python教程，书籍的话《Python编程:从实践到入门》很适合新手入门学习，其中还会手把手教你配置Python的编程环境（VS Code），语法讲解详实，还有一定的练习。**\n\n****\n\n**阶段二：实践与深化**\n\n****\n\n**（注：由于新手对Python的了解有限，此后部分是信息检索后整合的结果）**\n\n**1.学习类和对象的概念，理解三大特性：封装，继承，多态。这是从“写脚本”到“做工程”的关键一步。**\n\n**2.实践小项目：**\n\n**·自动化脚本：自动整理电脑上的文件，自动发送邮件**\n\n**·命令行工具：编写可通过命令参数执行的查询工具**\n\n**·数据处理：读取一个文件，做简单的数据分析与整理**\n\n**·网络请求：编写一个爬虫小程序，合法获取图片或文章**\n\n**3.学习使用GIt**\n\n****\n\n**阶段三：选择方向专项突破（长期）**\n\n****\n\n**从自动化脚本，人工智能，数据分析，Web开发等领域进行选择并深入学习**\n\n**（规划过于长远，不是现在的自己所能明知的，故只是参考AI略述，现在重心仍是当下的入门学习，到达一定阶     段后再做个具体规划）**\n\n~~~~\n\n## 潜在问题\n**未尝试过同时入门两种编程语言（C语言和Python),不知在语法的学习中会不会产生混淆，其语言学的时间分配还得视课程而定。**\n\n## 总结\n**学习框架只是明确学习的方向，编程的学习还是需要自学能力的培养与日复一日的坚持，**\n\n**在大的方向上落实到小的目标才能真正的学好！**\n\n",
        "simhash": 14508750927886160145
    },
    "237892638": {
        "id": 237892638,
        "type": "Doc",
        "slug": "pv49678n66m4pipu",
        "title": "Python学习类-吉天祎（红包版）",
        "description": "行前有所思在完成我的OJ任务的时候（C语言），我使用过AI工具进行辅助，我通过AI工具帮我进行debug，并且解释一些VSC报错中我看不懂的bug。这都在提示我AI可以帮助我学习编程，并且让学习编程的过程不那么像自虐。实在是非常nice。因此我是希望通过AI进行编程学习的。关于python，我...",
        "cover": "",
        "user_id": 60270756,
        "book_id": 69189148,
        "last_editor_id": 60270756,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 220,
        "created_at": "2025-09-22T09:33:55.000Z",
        "updated_at": "2025-09-22T15:19:02.000Z",
        "content_updated_at": "2025-09-22T12:44:55.000Z",
        "published_at": "2025-09-22T12:44:55.000Z",
        "first_published_at": "2025-09-22T12:44:55.059Z",
        "user": {
            "id": 60270756,
            "type": "User",
            "login": "u58611180",
            "name": "25计科吉天祎",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-01T14:31:42.000Z",
            "updated_at": "2025-09-22T11:47:26.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60270756,
            "type": "User",
            "login": "u58611180",
            "name": "25计科吉天祎",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-01T14:31:42.000Z",
            "updated_at": "2025-09-22T11:47:26.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n在完成我的OJ任务的时候（C语言），我使用过AI工具进行辅助，我通过AI工具帮我进行debug，并且解释一些VSC报错中我看不懂的bug。这都在提示我AI可以帮助我学习编程，并且让学习编程的过程不那么像自虐。实在是非常nice。因此我是希望通过AI进行编程学习的。\n\n## 关于python，我在尝试xxxxx\n我希望进行分支2的任务\n\n## 我提出或遇到的问题\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## 一些总结又或许感悟\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n\n\n",
        "simhash": 79754455767449905
    },
    "237889189": {
        "id": 237889189,
        "type": "Doc",
        "slug": "ek9mwmydcq0bkh18",
        "title": "工具技巧类 张競之       浏览器插件的安装和使用（推荐使用chrome进行操作）",
        "description": "1）为什么使用插件视频网站不可复制视频？片头广告不能跳过？签到操作纯手动？购物时难以查找历史价格？网页不能翻译？绝大多数让人很烦的操作都可以利用插件实现作弊/自动化/加速，他们有极强的功能，可以给我们相当方便和舒适的上网体验。（！！！注意，插件脚本存在一定的安全风险，请自行甄别！！！一般来讲，...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/58079057/1758534144066-93da5074-7bf3-4408-8872-554dfd188ee2.png",
        "user_id": 58079057,
        "book_id": 69189148,
        "last_editor_id": 58079057,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 692,
        "created_at": "2025-09-22T09:14:54.000Z",
        "updated_at": "2025-09-23T07:24:02.000Z",
        "content_updated_at": "2025-09-23T07:24:02.000Z",
        "published_at": "2025-09-23T07:24:02.000Z",
        "first_published_at": "2025-09-22T10:22:07.885Z",
        "user": {
            "id": 58079057,
            "type": "User",
            "login": "zhangjingzhi-lnkfd",
            "name": "张競之",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/58079057/1758545491881-avatar/0b083f5d-fed0-439a-88f4-791d34915597.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-06-27T14:07:49.000Z",
            "updated_at": "2025-09-22T09:07:29.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 58079057,
            "type": "User",
            "login": "zhangjingzhi-lnkfd",
            "name": "张競之",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/58079057/1758545491881-avatar/0b083f5d-fed0-439a-88f4-791d34915597.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-06-27T14:07:49.000Z",
            "updated_at": "2025-09-22T09:07:29.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 1）为什么使用插件\n视频网站不可复制视频？片头广告不能跳过？签到操作纯手动？购物时难以查找历史价格？网页不能翻译？\n\n绝大多数让人很烦的操作都可以利用插件实现作弊/自动化/加速，他们有极强的功能，可以给我们相当方便和舒适的上网体验。（<font style=\"color:#DF2A3F;\">！！！注意，插件脚本存在一定的安全风险，请自行甄别！！！一般来讲，下载量越大越安全</font>）\n\n\n\n## 2）如何安装浏览器插件以及如何拥有愉悦的上网体验\n其实这个工作并不算困难（相对于给一些软件配置环境）下面，我会进行简单的演示。\n\n1.请各位自备梯子\n\n2.打开chrome浏览器\n\n:::info\n![点击右上角拼图形状的按钮](https://cdn.nlark.com/yuque/0/2025/png/58079057/1758534144066-93da5074-7bf3-4408-8872-554dfd188ee2.png)\n\n:::\n\n3.点击管理扩展程序\n\n![](https://cdn.nlark.com/yuque/0/2025/png/58079057/1758534377463-568dc090-1d35-457d-ad87-4e2e07698687.png)\n\n4.点击Chrome应用商店，并在搜索框里输入“篡改猴”（如果是英文版就输入Tampermonkey）这是一个很好的用户脚本提供平台（选黑色的那个，正常是第一个）\n\n![](https://cdn.nlark.com/yuque/0/2025/png/58079057/1758534520283-79540634-3e3b-43db-a1ff-571dea89bdc3.png)\n\n5.下载以后回到chrome：//extensions，会看到篡改猴在扩展程序中，点击右上角“开发者模式”（这样你可以更充分地获得、修改、创建脚本）\n\n6.然后呢，点击详情，向下滑，点击固定到工具栏（方便使用），并开启下面的所有按钮，我们会看到右上方多出了篡改猴的标志，点击选择获取脚本（如果编程能力强大的同学也可以选择创建，说不定可以把对语雀的畅想落实哦<font style=\"color:#DF2A3F;\">*使用的是JavaScript语言以及它自己的一些规则和函数，请自行了解</font>）\n\n![](https://cdn.nlark.com/yuque/0/2025/png/58079057/1758602843061-f1da3321-1648-409b-b4f6-c976b806ab35.png)\n\n7.然后，选择GreasyFork（Github和OpenUserJS也可以，主要油叉里面的脚本相对要多一些），直接点击第二步>浏览本网站，可以看到里面有许多的脚本（😁😁😁）\n\n![](https://cdn.nlark.com/yuque/0/2025/png/58079057/1758535680075-acbdcfb7-3d72-48e7-8b42-ecf21901f05b.png)\n\n\n\n<details class=\"lake-collapse\"><summary id=\"u23c8c1f5\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">以“「CSDNGreener」</span><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">🍃</span><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">CSDN广告完全过滤|免登录|个性化排版|最强老牌脚本|持续更新”为例</span></summary><p id=\"u5d51fa6f\" class=\"ne-p\"><span class=\"ne-text\">（</span><span class=\"ne-text\" style=\"color: #DF2A3F\">注意尽量不要同时运行其他插件，不然篡改猴可能无法运行！！！</span><span class=\"ne-text\">）可以看到启动以后右上角会有红色标记显示</span></p><p id=\"u4338b684\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u7bfb74de\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2025/png/58079057/1758553813480-9f77cc93-6921-4ba7-b4db-39610cddd068.png\" width=\"2879\" id=\"u76f27aa1\" class=\"ne-image\"></p><p id=\"u5a24e361\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2025/png/58079057/1758602912894-66098b37-ef2c-434f-8a27-8b043a2dc222.png\" width=\"2878\" id=\"uc6032d17\" class=\"ne-image\"></p></details>\n\n\n## 总结分享\n![](https://cdn.nlark.com/yuque/0/2025/png/58079057/1758611648919-2a4a11bc-1c05-4e63-ba7d-2779c1b1f3ee.png)\n\n目前只能做到这种程度了（希望可以输入用户名直接检索其在NOVA发布的所有文档，不知道有没有可能）\n\n\n\n\n\n",
        "simhash": 18066752839233316798
    },
    "237761927": {
        "id": 237761927,
        "type": "Doc",
        "slug": "kgak4fgwwwzpqb5c",
        "title": "Python学习类-胥庆阳",
        "description": "没及时看语雀，我有罪😭各位等着周六抢我的红包吧先把分支指导贴这儿：分支1：构建自主性学习Python的学习框架碎片化学习并不是抛弃传统的学习框架，相反，碎片化学习模式的要求更高！因为你需要思考当前的碎片化学习内容，它与整体的关系是什么第一周实践组的同学，在完成使用Python获取语雀文档的任...",
        "cover": "",
        "user_id": 59165834,
        "book_id": 69189148,
        "last_editor_id": 59165834,
        "public": 2,
        "status": 1,
        "likes_count": 5,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 1082,
        "created_at": "2025-09-21T16:16:13.000Z",
        "updated_at": "2025-09-23T12:57:52.000Z",
        "content_updated_at": "2025-09-23T12:57:52.000Z",
        "published_at": "2025-09-23T12:57:52.000Z",
        "first_published_at": "2025-09-21T16:16:36.793Z",
        "user": {
            "id": 59165834,
            "type": "User",
            "login": "luoziqi-dk7xs",
            "name": "胥庆阳",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-29T08:38:31.000Z",
            "updated_at": "2025-09-17T03:03:18.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59165834,
            "type": "User",
            "login": "luoziqi-dk7xs",
            "name": "胥庆阳",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-29T08:38:31.000Z",
            "updated_at": "2025-09-17T03:03:18.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "没及时看语雀，我有罪😭~~各位等着周六抢我的红包吧~~\n\n~~~~\n\n**先把分支指导贴这儿：**\n\n#### 分支1：构建自主性学习Python的学习框架\n碎片化学习并不是抛弃传统的学习框架，相反，碎片化学习模式的要求更高！\n\n因为你需要思考当前的碎片化学习内容，它与整体的关系是什么\n\n第一周实践组的同学，在完成使用Python获取语雀文档的任务中，公开了一些源码\n\n作为新手，很可能看不懂这些代码，想要系统性的学习瞻仰大神的学习内容，大概不知道该从哪里下手\n\n基于我们推荐的PBL学习模式，如果你有能力可以知道这些代码里，具体包含了Python哪些章节哪些技巧（比如有人告诉你这段代码包含了：循环、判断、包的安装、函数、文件读写、List、基础语法格式等几部分内容），那么只要比照着教程上对应的章节，再去理解代码里具体每一行的意义，对于新手来说，学习的过程其实是可控的。所以碎片化学习有一个前提，就是要有意识先构建整体学习框架，并不断训练自己通过PBL的方式，提升精准定位当前学习内容的能力。\n\n\n\n选择本分支的同学，请结合自身实际情况，尝试构建自主性学习Python的学习框架，并和上周一样撰写文档，暴露自己的思维过程。学习框架不局限，你可以选择通过教材学习、视频学习、习题集学习，或者结合这些内容，或者补充你觉得更好的方式。\n\n#### 自我分析与初步对策\n构建学习框架首要的是基于自我情况，故略作分析：\n\n首先，在高中课程与自己课后探索的基础上，我对python的基础语法已有了部分认知，但对于部分内容掌握不熟练，甚至一知半解（如面向对象，装饰器等），导致看他人语法时吃力。在他人推荐下，准备以这本书为参照学习。\n\n[流畅的Python = Fluent Python clear, concise, and effective programming (Luciano Ramalho) (Z-Library).pdf](https://nova.yuque.com/attachments/yuque/0/2025/pdf/59165834/1758537177954-64082bad-220e-48e4-a587-c5f036715f67.pdf)\n\n\n\n其次，以前对于包函数甚至内置函数的了解仅限于基本使用，而未深究它的参数等信息，这一点上准备以各官方文档为查阅方向。\n\n\n\n再者，面对项目时个人感觉最大的困难在于将问题拆分，有想法后无从下手，一方面是知识的不足，另一方面是相关思维的有待训练。\n\n#### 具体方案\npython学习需要阶段性递进，但同时综合性、挑战性的任务形式也不可缺少，暂且计划如下：\n\n1. 结合教材式\n\n这部分更偏向于碎片化，闲暇时阅读电子书，并作标注笔记，以初步认识语法为主。\n\n简单拉一下待学内容列表：\n\n    1. 核心数据结构与文件操作\n        1. 列表、元组、字典、集合的深入操作\n        2. 字符串处理方法\n        3. 文件读写（open、read、write等方法）\n        4. 异常处理（try-except）\n        5. 模块和包的导入使用\n    2. 面向对象与常用库学习\n        1. 类和对象的概念\n        2. 封装、继承、多态\n        3. 常用标准库（os、sys、datetime等）\n        4. 虚拟环境管理\n    3. 项目实践与框架学习\n        1. API调用和数据获取\n        2. 数据解析和处理\n        3. 阅读第三方库文档并尝试使用\n\n······ ······\n\n2. 实践式\n\n这方面以段时间为主，需要整体思考，复习所学并在ai的帮助下设置针对式习题练习，也可利用碎片阅读他人代码，并自主尝试注释，同时联系所学知识巩固。\n\n\n\n\n\n\n\n\n\n### \n",
        "simhash": 3248886278975947304
    },
    "237758991": {
        "id": 237758991,
        "type": "Doc",
        "slug": "ytxon9yrdc1aneyd",
        "title": "非纯技术类-朱志轩",
        "description": "基于语雀的协作方案1.类似于nova的形式，可以为每个任务（大型长期的）建立一个团队空间（如“百团大战”），按角色设定权限。设计明确的目录（eg.方案设计，志愿者征集，面试）。使用语雀知识库的“表格/数据库”或“文档索引页”做任务看板：字段含负责人、截止日期、状态（待办/进行中/完成）、链接到...",
        "cover": "",
        "user_id": 59553881,
        "book_id": 69189148,
        "last_editor_id": 59553881,
        "public": 2,
        "status": 1,
        "likes_count": 2,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 819,
        "created_at": "2025-09-21T15:19:51.000Z",
        "updated_at": "2025-09-24T01:25:39.000Z",
        "content_updated_at": "2025-09-24T01:25:39.000Z",
        "published_at": "2025-09-24T01:25:39.000Z",
        "first_published_at": "2025-09-21T15:20:08.256Z",
        "user": {
            "id": 59553881,
            "type": "User",
            "login": "jianlai-kqyrl",
            "name": "朱志轩",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/anonymous/1754811022139-7d1b7d2e-7ec6-4dcb-9f04-b40d50aa68b5.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-10T07:30:57.000Z",
            "updated_at": "2025-09-24T02:21:28.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59553881,
            "type": "User",
            "login": "jianlai-kqyrl",
            "name": "朱志轩",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/anonymous/1754811022139-7d1b7d2e-7ec6-4dcb-9f04-b40d50aa68b5.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-10T07:30:57.000Z",
            "updated_at": "2025-09-24T02:21:28.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "# 基于语雀的协作方案\n1.类似于nova的形式，可以为每个任务（大型长期的）建立一个团队空间（如“百团大战”），按角色设定权限。设计明确的目录（eg.方案设计，志愿者征集，面试）。使用语雀知识库的“表格/数据库”或“文档索引页”做任务看板：字段含负责人、截止日期、状态（待办/进行中/完成）、链接到对应文档。\n\n2.关于空间的另外一些板块想法： \n\n班务公告\n\n+ 顶部信息区：发布人｜发布日期｜生效日期｜标签（事务/活动）｜ddl\n+ 内容结构：一页摘要（3条要点）→ 详细说明 → 附件/表格 → 行动清单（负责人）\n\n 周活动纪要 \n\n+ 会议信息：时间｜主持｜议题列表｜相关文档链接\n+ 纪要结构：结论先行（决定事项清单）→ 讨论纪要 → 待办表（Owner/DDL/状态）→ 下次会议预告\n+ 速读标记：对结论性语句做重点标记\n\n活动策划与复盘模板 （eg.百团大战）\n\n+ 策划：目标｜受众｜时间地点｜流程｜物资清单｜风险预案｜预算\n+ 复盘：成果指标（参与人数/满意度/预算差异）｜亮点｜问题与改进｜照片与素材链接\n\n3.关于语雀通知的推送（相当多人已经有了一些需求）\n\n+ 语雀内提醒 \n    - @成员与评论：关键更新在文档顶部“更新说明”处评论并@相关人；使用“订阅该文档”提示重要页面。\n    - 关注目录/知识库：核心目录启用关注，便于成员收到新增文档通知。\n+ 与IM集成（飞书/企业微信/钉钉三选一） \n    - Webhook机器人：在IM建“班级通知”群，配置语雀更新→Webhook推送（新建/更新/到期提醒）。\n    - 推送格式规范： \n        * 标题：[类型] 主题（重要度）\n        * 摘要：三条要点（≤200字）\n        * 链接：语雀文档直达\n        * 截止：若有DDL，单独高亮\n    - 定时播报：每天17:00推送“今日更新摘要”，周日晚推“下周重点与DDL清单”。\n+ 邮件与日历 \n    - 订阅式周报：用语雀导出聚合页，结合简易脚本/自动化把“本周新增/变更”生成邮件周报。\n    - 日历集成：把DDL字段同步到共享日历（Google/Outlook/钉钉日历），设置提醒（T‑1/T‑0）。\n+ 触发规则 \n    - 重要级公告/考前资料/活动报名开始/截止变更 → 立即推送\n    - 常规文档更新 → 汇总到每日摘要\n    - 超期任务 → 单独私聊提醒负责人\n+ ————这个想法的实现可以交给实践组的xdm\n\n## 百团大战面试（）\n\n\n",
        "simhash": 2419786852509649764
    },
    "237755149": {
        "id": 237755149,
        "type": "Doc",
        "slug": "kv5npbtsk9q6gk2w",
        "title": "Python学习类-郭轩岐",
        "description": "前置思考 Q: 本周的社团活动选择Python学习类，这是出于什么原因 A: 其一是其他几个专题我不太感兴趣，并且他们的核心目标与我短期的打基础的目标不是特别契合，其二是我认为自己的水平还不足以支持实践类活动，在本周的目标中加入少量读懂实验组代码的目标，但本周的主目标还是搭建学习框架，锻炼自己...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/jpeg/60652024/1758465133702-fa53b430-22b3-4e77-8cca-eddaa45b88d4.jpeg",
        "user_id": 60652024,
        "book_id": 69189148,
        "last_editor_id": 60742657,
        "public": 2,
        "status": 0,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 648,
        "created_at": "2025-09-21T14:32:51.000Z",
        "updated_at": "2025-09-24T02:20:19.000Z",
        "content_updated_at": "2025-09-24T02:20:19.000Z",
        "published_at": "2025-09-23T09:51:29.000Z",
        "first_published_at": "2025-09-22T02:10:15.833Z",
        "user": {
            "id": 60652024,
            "type": "User",
            "login": "yuqueyonghu6wsag8",
            "name": "郭轩岐",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60652024/1757642684213-avatar/fe7ec746-97fd-4aa8-8511-008a9425cafa.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-12T02:03:29.000Z",
            "updated_at": "2025-09-18T02:31:54.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60742657,
            "type": "User",
            "login": "asakii",
            "name": "梁治诚",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60742657/1757988220828-avatar/6544bab2-94f9-4fcd-a03b-50895ba9228d.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-15T02:40:02.000Z",
            "updated_at": "2025-09-20T07:09:59.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## <u><font style=\"background-color:#C1E77E;\">                前置思考                  </font></u>\n1. <font style=\"background-color:#E8F7CF;\">Q: 本周的社团活动选择Python学习类，这是出于什么原因                                     </font>\n\n      <font style=\"background-color:#EFF0F0;\">A: </font>其一是其他几个专题我不太感兴趣，并且他们的核心目标与我短期的打基础的目标不是特别契合，其二是我认为自己的水平还不足以支持实践类活动，在本周的目标中加入少量读懂实验组代码的目标，但本周的主目标还是**<font style=\"background-color:#D8DAD9;\">搭建学习框架，锻炼自己碎片化学习的能力</font>**                                                               \n\n2. <font style=\"background-color:#E8F7CF;\">Q: 希望自己的学习框架中包含哪些内容，如何找到，大概每天学习多久     </font>\n\n      <font style=\"background-color:#EFF0F0;\">A: </font> 学习框架里首先必备一本**<font style=\"background-color:#D8DAD9;\">教材</font>**，由于我有一点基础，所以需要一本内容跨度广的教材，这样我就可以一边复习一边补充细节，而为了实现碎片化，教材最好存在电子版或图片，问问DS老师；其次是一些**<font style=\"background-color:#D8DAD9;\">练习集</font>**，包括实践类练习、debug练习、库的了解以及代码优化方案，本周着重选择Pandas，已经学过的内容可以加在复杂的习题里用作复习，这些工作都可以外包给DS和B站；再次是**<font style=\"background-color:#D8DAD9;\">建立自己的知识库</font>**，把以上所有内容以链接和文档的方式打包进这个知识库，方便碎片化学习；最后，记录每次碎片化学习的时长以及学习的内容，每日跟进，在不影响其他学科学习的前提下进行，大概每天学习30～45min                               \n\n3. <font style=\"background-color:#E8F7CF;\">Q: （）                                                         </font>\n\n      <font style=\"background-color:#EFF0F0;\">A: </font> （）\n\n---\n\n## <u><font style=\"background-color:#C1E77E;\">                目标设置                  </font></u>\n- [ ]  1.  搭建学习框架\n- [x]       <font style=\"background-color:#E8F7CF;\"> 电子版教材                                       番茄小说神力!!!      </font>\n- [x]        习题集                                              [debug助手链接](https://pythontutor.com/python-compiler.html#mode=edit)\n\n             <font style=\"background-color:#E8F7CF;\">                                                         </font>[<font style=\"background-color:#E8F7CF;\">力扣 </font>](https://leetcode.cn/)<font style=\"background-color:#E8F7CF;\">                            </font>\n\n- [ ]        知识库                  \n- [ ]  <font style=\"background-color:#E8F7CF;\">2.  初步了解pandas，完成一次数据抓取，精读第一部分，确保每个习题都能独立完成；然后选择1-2</font>个项目（推荐“数据可视化”，因为它直接用到Pandas和Matplotlib）进行实战（来自ds）\n- [ ]  <font style=\"background-color:#E8F7CF;\">3.  阅读《数据平衡》第一章，简单的案例创建    </font>\n- [ ]  4.  记得deadline                                        \n\n---\n\n## <u><font style=\"background-color:#C1E77E;\">           过程问题与解决             </font></u>\n1. <font style=\"background-color:#E8F7CF;\">Q: 发现力扣网站的python题目输入奇怪,有没有解决方案                                                                </font>\n\n      <font style=\"background-color:#EFF0F0;\">A: </font> 没有,但是学习了剪切字符串的函数,虽然麻烦一点,但没有问题产生                                                                \n\n2. <font style=\"background-color:#E8F7CF;\">Q:                                                                 </font>\n\n      <font style=\"background-color:#EFF0F0;\">A: </font>                                                                 \n\n3. <font style=\"background-color:#E8F7CF;\">Q:                                                                 </font>\n\n      <font style=\"background-color:#EFF0F0;\">A: </font>                                                             \n\n---\n\n## <u><font style=\"background-color:#C1E77E;\">                咸鱼总结                  </font></u>\n![画板](https://cdn.nlark.com/yuque/0/2025/jpeg/60652024/1758465133702-fa53b430-22b3-4e77-8cca-eddaa45b88d4.jpeg)\n\n",
        "simhash": 11538284272573058725
    },
    "237734475": {
        "id": 237734475,
        "type": "Doc",
        "slug": "lmqyyoselhytogrv",
        "title": "Phython信息类-袁博",
        "description": "分支2.2 人机vs大模型 八皇后问题是一个经典的回溯算法问题，目标是在8×8的国际象棋棋盘上放置8个皇后，使得任何两个皇后都不能互相攻击（即不能在同一行、同一列或同一对角线上）。 说起来。。。。。。那时年少轻狂，我看到C语言编程：/(ㄒoㄒ)/~~在它成功勾引到我时，我果断地掏出“神器”ph...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/jpeg/60717709/1758634444957-59381d3a-4c1d-4ca7-999d-b48b04794b22.jpeg",
        "user_id": 60717709,
        "book_id": 69189148,
        "last_editor_id": 60717709,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 2,
        "word_count": 647,
        "created_at": "2025-09-21T11:12:42.000Z",
        "updated_at": "2025-09-23T14:27:14.000Z",
        "content_updated_at": "2025-09-23T13:59:06.000Z",
        "published_at": "2025-09-23T13:59:06.000Z",
        "first_published_at": "2025-09-21T11:12:56.493Z",
        "user": {
            "id": 60717709,
            "type": "User",
            "login": "yuanbo-dmrqi",
            "name": "袁博",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60717709/1758094428866-avatar/38e9779d-b7f9-41e1-bc1b-4c963f26d997.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-14T15:10:59.000Z",
            "updated_at": "2025-09-21T10:56:32.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60717709,
            "type": "User",
            "login": "yuanbo-dmrqi",
            "name": "袁博",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60717709/1758094428866-avatar/38e9779d-b7f9-41e1-bc1b-4c963f26d997.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-14T15:10:59.000Z",
            "updated_at": "2025-09-21T10:56:32.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 分支2.2  人机vs大模型\n\n\n    八皇后问题是一个经典的回溯算法问题，目标是在8×8的国际象棋棋盘上放置8个皇后，使得任何两个皇后都不能互相攻击（即不能在同一行、同一列或同一对角线上）。\n\n    说起来。。。。。。\n\n## 那时年少轻狂，我看到C语言编程：/(ㄒoㄒ)/~~\n![](https://cdn.nlark.com/yuque/0/2025/jpeg/60717709/1758634444957-59381d3a-4c1d-4ca7-999d-b48b04794b22.jpeg)![](https://cdn.nlark.com/yuque/0/2025/webp/60717709/1758634687500-71f4ac79-9942-4e4a-9185-9398a0aa1bb3.webp)\n\n在它成功勾引到我时，我果断地掏出“神器”phython......（桀桀桀的笑）\n\n# 以下是Python实现（ds）：\n# ![](https://cdn.nlark.com/yuque/0/2025/jpeg/60717709/1758635042885-70752d44-d076-4a22-a72d-8f1d23027be8.jpeg)\ndef solve_n_queens(n=8):\n\n    \"\"\"\n\n    解决n皇后问题\n\n    :param n: 棋盘大小和皇后数量，默认为8\n\n    :return: 所有解的列表，每个解是一个列表，表示每行皇后的列位置\n\n    \"\"\"\n\n    def is_safe(board, row, col):\n\n        \"\"\"检查在board[row][col]位置放置皇后是否安全\"\"\"\n\n        # 检查同一列\n\n        for i in range(row):\n\n            if board[i] == col:\n\n                return False\n\n        \n\n        # 检查左上对角线\n\n        for i, j in zip(range(row-1, -1, -1), range(col-1, -1, -1)):\n\n            if board[i] == j:\n\n                return False\n\n        \n\n        # 检查右上对角线\n\n        for i, j in zip(range(row-1, -1, -1), range(col+1, n)):\n\n            if board[i] == j:\n\n                return False\n\n        \n\n        return True\n\n    \n\n    def backtrack(board, row):\n\n        \"\"\"回溯函数\"\"\"\n\n        if row == n:\n\n            # 找到一个解，添加到结果中\n\n            solutions.append(board[:])\n\n            return\n\n        \n\n        for col in range(n):\n\n            if is_safe(board, row, col):\n\n                board[row] = col  # 放置皇后\n\n                backtrack(board, row + 1)  # 递归处理下一行\n\n                # 回溯：不需要显式撤销，因为我们会覆盖board[row]的值\n\n    \n\n    solutions = []\n\n    # 初始化棋盘，board[i]表示第i行皇后的列位置\n\n    board = [-1] * n\n\n    backtrack(board, 0)\n\n    return solutions\n\n\n\ndef print_solution(solution):\n\n    \"\"\"打印一个解的棋盘布局\"\"\"\n\n    n = len(solution)\n\n    for row in range(n):\n\n        line = \"\"\n\n        for col in range(n):\n\n            if solution[row] == col:\n\n                line += \"Q \"\n\n            else:\n\n                line += \". \"\n\n        print(line)\n\n    print()\n\n\n\n# 解决八皇后问题\n\nif __name__ == \"__main__\":\n\n    solutions = solve_n_queens(8)\n\n    print(f\"八皇后问题共有 {len(solutions)} 种解法\")\n\n    \n\n    # 打印前3个解作为示例\n\n    for i, solution in enumerate(solutions[:3]):\n\n        print(f\"解法 {i+1}:\")\n\n        print_solution(solution)\n\n## <font style=\"color:rgb(15, 17, 21);\">优化版本（ds使用集合检查）</font>\ndef solve_n_queens_optimized(n=8):\n\n    \"\"\"\n\n    使用集合优化的n皇后解法\n\n    \"\"\"\n\n    def backtrack(row, cols, diag1, diag2):\n\n        if row == n:\n\n            solutions.append(board[:])\n\n            return\n\n        \n\n        for col in range(n):\n\n            d1 = row - col  # 主对角线索引\n\n            d2 = row + col  # 副对角线索引\n\n            \n\n            if col not in cols and d1 not in diag1 and d2 not in diag2:\n\n                board[row] = col\n\n                cols.add(col)\n\n                diag1.add(d1)\n\n                diag2.add(d2)\n\n                \n\n                backtrack(row + 1, cols, diag1, diag2)\n\n                \n\n                # 回溯\n\n                cols.remove(col)\n\n                diag1.remove(d1)\n\n                diag2.remove(d2)\n\n    \n\n    solutions = []\n\n    board = [-1] * n\n\n    backtrack(0, set(), set(), set())\n\n    return solutions\n\n\n\n可是结果。。。\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60717709/1758635685529-076ecfcc-cd82-4701-990f-40d93a8c306b.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60717709/1758635378999-3471a63b-b9dd-4995-b612-39d8289e4bf5.png)（果然不靠谱）\n\n\n\n没办法，只好自己动手，丰衣足食。（算了，明天再弄吧。）\n\n",
        "simhash": 2864584574543471361
    },
    "237730206": {
        "id": 237730206,
        "type": "Doc",
        "slug": "vyssn2yex79e2gp9",
        "title": "Python学习类-韩姝婧",
        "description": "分支1：构建自主性学习Python的学习框架 我先在b站上找了个视频，一集一个多小时，容易看完。视频前二十分钟我跟着他安装好了Python解释器和PyCharm,用了PowerShell,知道虚拟环境是干什么用的，还说了运算和对应的符号，以及啥是语法糖。还写了一些东西做示范。好处就是效率高。比...",
        "cover": "",
        "user_id": 59897459,
        "book_id": 69189148,
        "last_editor_id": 59897459,
        "public": 2,
        "status": 1,
        "likes_count": 2,
        "read_count": 0,
        "comments_count": 1,
        "word_count": 1354,
        "created_at": "2025-09-21T10:30:08.000Z",
        "updated_at": "2025-09-23T12:45:03.000Z",
        "content_updated_at": "2025-09-23T12:45:02.000Z",
        "published_at": "2025-09-23T12:45:02.000Z",
        "first_published_at": "2025-09-21T10:31:10.334Z",
        "user": {
            "id": 59897459,
            "type": "User",
            "login": "u58237953",
            "name": "韩姝婧",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59897459/1757909019923-avatar/31bd0e72-cd66-403d-b0c8-025c3a9c2a5f.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-20T10:32:05.000Z",
            "updated_at": "2025-09-15T07:22:04.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59897459,
            "type": "User",
            "login": "u58237953",
            "name": "韩姝婧",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59897459/1757909019923-avatar/31bd0e72-cd66-403d-b0c8-025c3a9c2a5f.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-20T10:32:05.000Z",
            "updated_at": "2025-09-15T07:22:04.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "#### 分支1：构建自主性学习Python的学习框架\n  我先在b站上找了个视频，一集一个多小时，容易看完。视频前二十分钟我跟着他安装好了Python解释器和PyCharm,用了PowerShell,知道虚拟环境是干什么用的，还说了运算和对应的符号，以及啥是语法糖。还写了一些东西做示范。好处就是效率高。比如安装时他嘴上叽里咕噜说着同时就点来点去，我连蒙带猜很快弄好了，虽然不知道在干什么。坏处就是不够细，比如也不专门讲缩进是怎么个缩法，elif不能放在else后面。很多东西只能在他的操作中体现。\n\n  因此我就去问ds，把我在那二十分钟教学里不理解的东西都抛给它。比如一些概念，如IDE是什么（第一次问完还是不理解）PyCharm是什么，PowerShell用于干啥。还有知其然不知其所以然的地方，比如只安装官网上的Python,不使用附带的IDE或者视频让我安装的PyCharm会怎样。还有我能想到的一切问题，比如Python解释器,文本编辑器，PowerShell中哪些是必须安装的，为什么？如果我在用PyCharm,这些还需要吗？虽然有些问题显得重复，但问着问着能感觉到脑子逐渐清晰起来。问ds的好处是，可以随心所欲地提问，无论问题显得多浅显。坏处是，我得先问问题它才能给出答案。比如我原本想利用ds学习各种符号的含义，结果发现我没法问，即使问了给出的答案也不知道是否全面。\n\n  所以我决定去找更长的视频（几十个小时），以及参考电子书，用来弥补这些比较细的东西。\n\n  总结，目前我给自己构建的学习框架是：1.利用找到的那个较短的视频整体把握自己应当学什么，并跟着示范动手操作2.利用ds等AI询问一切不理解的地方3.利用更为详细的视频和书籍让自己学得更完整扎实4.（本来还要说些什么的，结果给忘了，等我想起来再补上）\n\n  反正未来学习过程中出现啥问题就解决啥问题，具体问题具体分析。我也会不断摸索和调整。\n\n  我本人对编程一窍不通，所在专业也不学编程。因此刚接触这东西我确实暂时不是很明白该怎么学。恳请各位给点建议（-＾〇＾-）\n\n—————————————————————\n\n  我反思了下自己的学习框架。\n\n  1.我把重点放在较为粗略的视频上，而将AI和书籍作为补充。易导致学习不系统、有遗漏的问题。\n\n  2.我并没有想到主动找一些习题去做，只跟着视频里去做显然不够。\n\n  我按照cac老师的提醒，先是去查询了如何用Python读写一个excel表格里的内容。结果出现了诸如pandas,openpyxl等根本看不懂的名词，以及各种术语。由于实在难以理解，我就不理解了。这时我回过头看自己的框架，发现所依据的视频里似乎根本没有涉及（至少我快进没有发现，而且本身简短，现在想想能学到的东西本来就有限）。\n\n  但是我找的电子书（就是学校的教材）有看起来很完整的体系，同时也有课后习题，并且注重实践与应用。我一开始看的时候，觉得太枯燥了，不想看，所以让它起辅助作用。但是现在觉得，书虽然枯燥，但是有用。它能让我有体系地学习，也能尽量帮助我的学习不流于空泛。\n\n  还有AI。经过实践，我觉得AI更适合用于通俗地讲解一些东西，以及帮我寻找错误原因。\n\n  总而言之，我的新框架是：1.以电子书为主体，且完成一些课后习题 2.遇到不会的点找视频，也许有时图像比文字更有用 3.利用A进一步I讲解及纠错 4.利用语雀里的东西（才想起来）\n\n  补充：其实得出结论前，我试图查询Python包含的所有内容。但是真看不懂，就是看了跟没看一样。然后我在语雀里发现了https://csdiy这个东西，目前还在探索。然后又发现了那个碎片化学习的文档，觉得挺有用的。\n\n  这写的大概不是很好，欢迎各位提供宝贵的建议（・∀・）\n\n\n\n",
        "simhash": 13345323150923852451
    },
    "237726000": {
        "id": 237726000,
        "type": "Doc",
        "slug": "lmu2asnv073spl2g",
        "title": "非纯技术组-苏涵瑜",
        "description": "协作模式设计设计一套基于语雀的协作模式模版功能消息推送方便阅读PBL：目前大家遇到了什么问题，有什么需求？谁评论，点赞，提及，引用我的文档了？可以做个微信推送吗？我想关注某个人的文档发布与更新可以实现吗？如何更高效地统计写文档的人员？怎么分割文档更方便用llm总结内容？llm更偏好怎样的内容分...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/2520877/1758549526851-c610ab54-367b-4d23-a07f-b59e632deac6.png",
        "user_id": 2520877,
        "book_id": 69189148,
        "last_editor_id": 2520877,
        "public": 2,
        "status": 0,
        "likes_count": 2,
        "read_count": 0,
        "comments_count": 1,
        "word_count": 1662,
        "created_at": "2025-09-21T09:23:08.000Z",
        "updated_at": "2025-09-24T03:04:03.000Z",
        "content_updated_at": "2025-09-24T03:04:02.000Z",
        "published_at": "2025-09-24T00:52:34.000Z",
        "first_published_at": "2025-09-21T10:07:26.317Z",
        "user": {
            "id": 2520877,
            "type": "User",
            "login": "bingbing-xz1ez",
            "name": "苏涵瑜",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/2520877/1755705916885-avatar/63136f6c-7355-4940-b3eb-b8803d51e511.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2020-09-09T20:27:49.000Z",
            "updated_at": "2025-09-02T10:59:03.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 2520877,
            "type": "User",
            "login": "bingbing-xz1ez",
            "name": "苏涵瑜",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/2520877/1755705916885-avatar/63136f6c-7355-4940-b3eb-b8803d51e511.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2020-09-09T20:27:49.000Z",
            "updated_at": "2025-09-02T10:59:03.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 协作模式设计\n> 设计一套基于语雀的协作模式\n>\n> + 模版功能\n> + 消息推送\n> + 方便阅读\n>\n\n### PBL：\n1. 目前大家遇到了什么问题，有什么需求？\n\n:::tips\n+ 谁评论，点赞，提及，引用我的文档了？可以做个微信推送吗？\n+ 我想关注某个人的文档发布与更新可以实现吗？\n+ 如何更高效地统计写文档的人员？\n+ 怎么分割文档更方便用llm总结内容？\n    - llm更偏好怎样的内容分割？\n+ 如果看不懂文档怎么办？\n    - 让大家多一点通俗描述？梗概？\n    - llm解释？\n\n:::\n\n2. 除需求之外我们还要满足什么管理目的以尽量减少新问题产生或者进一步提高协作效率？\n\n:::tips\n+ 有没有什么大团队用语雀(语雀团队）、飞书（字节跳动）、notion、ob等一系列相似的软件协作的案例可供学习\n\n:::\n\n3. 语雀有哪些核心功能可以辅助设计？\n\n:::tips\n+ 语雀的功能从哪里看？\n    - 发现了语雀的\n    - 发现了一个功能较强大的表格\n    - B站介绍了一个语雀任务管理\n\n:::\n\n### 资料查询\n1. 找到语雀功能介绍\n2. 找到办公软件协作团队管理案例及详细方案设计\n\n提示词：你是一名资深信息搜索专家与管理专家，请你查阅资料寻找办公软件协作团队管理（特别是大厂大团队）案例及详细方案设计，侧重语雀应用，同时要涵盖飞书、notion、obsidian等其他流行软件，最后总结出一份报告给我\n\n_推荐大家使用豆包的深度探究，还蛮全的，吃个晚饭刚好给结果哈哈_\n\n根据豆包的回答我稍微删减了一下，算了太多了我们一个一个来\n\n### 问题解决\n1. 如何更高效地统计写文档的人员？\n\n能不能在每次任务发布的时候发布一个表格\n\n但是表格只能显示“几个人发了”，无法统计“谁没发”\n\n于是：\n\n> <font style=\"color:rgba(255, 255, 255, 0.95);background-color:rgb(43, 46, 48);\">项目名称： 语雀文档分析与成员对比系统</font>\n>\n> <font style=\"color:rgba(255, 255, 255, 0.95);background-color:rgb(43, 46, 48);\"> 项目描述： 使用Python设计并开发一个程序或网站，旨在通过语雀API获取指定文档并进行深入分析。该系统将实现以下核心功能： </font>\n>\n> <font style=\"color:rgba(255, 255, 255, 0.95);background-color:rgb(43, 46, 48);\">定时抓取： 在每个给定的时间间隔内，自动抓取指定语雀表格中的成员信息。 </font>\n>\n> <font style=\"color:rgba(255, 255, 255, 0.95);background-color:rgb(43, 46, 48);\">成员对比： 将抓取到的表格成员与空间成员列表进行对比。管理人员可编辑设置，允许忽略特定成员。 </font>\n>\n> <font style=\"color:rgba(255, 255, 255, 0.95);background-color:rgb(43, 46, 48);\">未填表人员识别： 精确找出未在表格中填写信息的成员。</font>\n>\n> <font style=\"color:rgba(255, 255, 255, 0.95);background-color:rgb(43, 46, 48);\"> 结果归档： 将每次统计结果自动归档至网站的“历史数据”板块，便于后续查询和分析。 </font>\n>\n> <font style=\"color:rgba(255, 255, 255, 0.95);background-color:rgb(43, 46, 48);\">附加说明： 系统需支持灵活配置，包括抓取时间、忽略成员列表等。 界面友好，操作简便，便于管理人员快速上手。 保证数据安全与隐私，所有传输和存储的数据均需加密处理。 </font>\n>\n> <font style=\"color:rgba(255, 255, 255, 0.95);background-color:rgb(43, 46, 48);\">技术关键词： Python, 语雀API, 文档分析, 成员对比, 定时任务, 数据归档, 网站开发。 期</font>\n>\n> <font style=\"color:rgba(255, 255, 255, 0.95);background-color:rgb(43, 46, 48);\">望成果： 一个稳定、高效、易用的语雀文档分析与成员对比系统。 </font>\n>\n\n提示词是经过llm修改的，然后cursor启动\n\n好的搓了n多遍还是没搞定，cursor的免费额度燃尽了……先搁置好了\n\n[此处为语雀卡片，点击链接查看](https://www.yuque.com/ph25ri/ua1c3q/lmu2asnv073spl2g#ilUxI)\n\n2. 感觉现在大家的文档都比较独立，而且社团确实比较庞大，文档数量很多，成员间就文档的交流个人认为比较麻烦，特别是如果后续组内分工甚至是各组间的成果共享不容易（除非像某人一样转过每个文档）\n\n对此我的建议是在每一组任务或者每一次任务中另外放置一个公开的文档，大家在里面提出自己的需求，比如**有没有实践组的大佬能搞定一下人员统计的问题**，然后大家对自己的研究内容应该是比较熟悉的，如果自己有涉及的或将要涉及的内容，直接在下方引用自己的文档，然后问题提出者在一段时间后去阅读这些相应文档\n\n3. **<font style=\"color:rgb(31, 35, 41);background-color:rgb(239, 240, 241);\">文档分割与 LLM 集成</font>**\n\n![](https://cdn.nlark.com/yuque/0/2025/png/2520877/1758549526851-c610ab54-367b-4d23-a07f-b59e632deac6.png)\n\n**其实没太懂，来自豆包阅读生成脑图，但是突然发现大家也可以写完长文之后发给豆包啥的生成思维导图**\n\n**第一层：项目总文档（相当于 “目录 + 说明书”）**\n\n用途：打开就能知道 “项目是啥、要做啥、东西在哪”，不用翻后续文档。相当于一个平白朴实一点的内容梗概\n\n主要干了啥？什么成功了在哪里？有什么问题在哪里？\n\n或者放一个思维导图\n\n（侧重“内容解决了什么问题”）（这部分完全可以交给AI，相当于是为了便利大家自己先做一个事先的准备）\n\n**第二层：子文档（相当于 “核心干活材料”）**\n\n用途：承载具体任务的内容，比如 “有什么问题？(可以用to-do的方式告诉大家解决了没有）“怎么搜集相关资料解决这些问题？”“又产生了什么新的问题？”“方案细节”，要保证 “一段内容说清一件事”（参考 RAG “递归分割”）。\n\n关键：用 “### 小标题” 拆模块，每个小标题下只说对应内容，不混着写。\n\n**第三层：碎片化素材（相当于 “草稿纸 + 笔记”）**\n\n用途：放临时内容，比如 “一些数据“（参考 RAG “固定长度分割”）。\n\n\n\n还是有点乱乱的，等我慢慢理吧\n\n## 面试流程设计\n\n\n",
        "simhash": 4071376056564690727
    },
    "237725607": {
        "id": 237725607,
        "type": "Doc",
        "slug": "umr5cdd9b33oiahu",
        "title": "实践操作类-陈芊静",
        "description": "学习技术中......",
        "cover": "",
        "user_id": 59557152,
        "book_id": 69189148,
        "last_editor_id": 59557152,
        "public": 2,
        "status": 1,
        "likes_count": 4,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 6,
        "created_at": "2025-09-21T09:17:20.000Z",
        "updated_at": "2025-09-23T11:36:00.000Z",
        "content_updated_at": "2025-09-23T11:36:00.000Z",
        "published_at": "2025-09-23T11:36:00.000Z",
        "first_published_at": "2025-09-21T09:17:47.945Z",
        "user": {
            "id": 59557152,
            "type": "User",
            "login": "qianjing-gajag",
            "name": "陈芊静",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59557152/1757685022990-avatar/9e031f13-fe30-46a6-b6c2-5be4ac7bd913.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-10T14:30:41.000Z",
            "updated_at": "2025-09-19T07:40:57.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59557152,
            "type": "User",
            "login": "qianjing-gajag",
            "name": "陈芊静",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59557152/1757685022990-avatar/9e031f13-fe30-46a6-b6c2-5be4ac7bd913.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-10T14:30:41.000Z",
            "updated_at": "2025-09-19T07:40:57.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "学习技术中......\n\n",
        "simhash": 17001119396843916982
    },
    "237722561": {
        "id": 237722561,
        "type": "Doc",
        "slug": "uwg76nw8ft69by6s",
        "title": "Python学习类-周枫宜",
        "description": "文章主体记录了这几天的一些尝试。新的想法这个模块是在坠机后单独加的。今天下午与gpt进行了一些新的对话，我把prompt贴在开头，并简单概括一下gpt的输出 (全贴上来太长太长了) 。具体实践感觉这几天内搞不定，大概会推到国庆节期间。除了开头，其他部分是之前写好后贴进模板的，逻辑可能不太通畅。...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/59151337/1758530272152-d3716881-f7b3-437c-9e77-4070f44b294c.png",
        "user_id": 59151337,
        "book_id": 69189148,
        "last_editor_id": 59151337,
        "public": 2,
        "status": 1,
        "likes_count": 3,
        "read_count": 0,
        "comments_count": 2,
        "word_count": 2262,
        "created_at": "2025-09-21T08:43:20.000Z",
        "updated_at": "2025-09-23T14:17:32.000Z",
        "content_updated_at": "2025-09-23T09:59:24.000Z",
        "published_at": "2025-09-23T14:17:31.000Z",
        "first_published_at": "2025-09-22T02:05:47.985Z",
        "user": {
            "id": 59151337,
            "type": "User",
            "login": "zolive",
            "name": "周枫宜",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59151337/1757863802852-avatar/2f4708e1-7dfe-4baa-ac9d-fc3c9dd0817c.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-29T00:59:20.000Z",
            "updated_at": "2025-09-22T12:49:04.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59151337,
            "type": "User",
            "login": "zolive",
            "name": "周枫宜",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59151337/1757863802852-avatar/2f4708e1-7dfe-4baa-ac9d-fc3c9dd0817c.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-29T00:59:20.000Z",
            "updated_at": "2025-09-22T12:49:04.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "> 文章主体记录了这几天的一些尝试。**新的想法**这个模块是在坠机后单独加的。今天下午与gpt进行了一些新的对话，我把prompt贴在开头，并简单概括一下gpt的输出 (全贴上来太长太长了) 。具体实践感觉这几天内搞不定，大概会推到国庆节期间。\n>\n> 除了开头，其他部分是之前写好后贴进模板的，逻辑可能不太通畅。这几天打算先脱离开，做做其他事情。\n>\n> 说实话像我现在这样不懂多少python，全靠ai写代码属于vibe coding，我不是很能判断输出质量。不过在我完成对python的进一步学习前只能先这样了。\n>\n\n## 新的想法\n（省略了我让gpt给几个功能分别写demo以便测试的过程）\n\n> <font style=\"color:#262626;\">接下来不用demo了，要完整的全流程代码。先整理出来所有要安装的依赖，之后给出代码，需要达到以下要求：利用合适的模型对我的pdf进行各种预处理，自动检测并裁切出文字块和公式块，分别送给合适的模型进行处理，将文本转换为latex或markdown。之后利用合适的模型对错误的识别进行校正。将获得的数据构建成数据库，要有缓存功能以免每次重复扫描。最后通过合适的模型，将我的提问与数据库中的内容进行匹配，只是简单的检测是否出现关键字肯定是不行的。</font>\n>\n\ngpt整理出了需安装的依赖，并给出了可选的本地LLM，之后根据prompt中的要求给出了代码。这个版本的公式检测基于OCR字框与简易符号密度判断，后处理校正也使用较基础的方案。它给出了一些改进建议，除下面prompt提到的以外，还有编写Web UI的选项。\n\n> paddlepaddle使用gpu版本。公式检测替换为yolov8。后处理使用本地模型，但我查阅到flan-t5对中文的支持不算最佳，是否有更优秀的注重中文和数学公式的模型。把替换后的完整代码给我，一定要完整。另外也给出下载预训练权重的方法，以及prompt template / 截断策略。\n>\n\ngpt将新的几个需求加入了代码，之后询问我现有的显卡与CUDA版本，来给出精确的用于PaddlePaddle GPU的`pip`安装命令，以及transformers用于运行本地模型。\n\n> （这一段是在cmd运行`nvidia-smi`后输出的信息）\n>\n\ngpt充分肯定了我的电脑配置（有点太自信了），并继续完成了上上条prompt中的要求。之后询问我是否需要现成的YOLOv8公式检测模型权重。\n\n> 第一步，可以给我一个现成的 YOLOv8 公式检测模型权重下载链接；第二步，我查阅后发现qwen2-7b-instruct需要的显存还是比较大的，需要量化吧。\n>\n\ngpt说公开的针对公式检测的YOLOv8权重不多，但仍给出了相关建议。量化方案我过些天研究一下。\n\n## 行前有所思\n> 暑假时我曾在ZLib上下了一大堆数学教材，想着开学后可以对比各种表述交叉学习。实际上到现在我只翻开过学校发的教材。排成一长串的pdf会让人失去兴趣。\n>\n\n于是我想到利用python以及ai提取并整理各书的内容。\n\n## 关于python，我在尝试探索在AI的辅助下学习Python的可行性\n我先向deepseek表达了自己的需求，但它给出的程序有些幻想出来的变量名（这问题以前也常有，像是写油猴脚本、rainmeter配置或是改注册表等等。deepseek把某个需求翻译成英文作为变量，仿佛修改这个变量就能起效。可能是我给的prompt不对）。\n\n总之我换成chatgpt了。它先是给出了各个功能单独的代码，在我要求后进行了整合。gpt也有自己的习惯，喜欢在输出的结尾问“要不要我再帮你...”。等它多问几次，最终的输出才会比较完整。gpt依次向代码中加入了OCR功能和缓存机制（本来还打算加入调用api的功能但我没有api key）。\n\n## 我提出或遇到的问题\n**以下是试错过程。我还不能确定是本地OCR这种方式不行还是Tesseract本身不行，希望是后者。毕竟调用api来完成扫描所需的token量巨大，成本难以负担。**\n\n---\n\n最终得到的代码如下：[课本pdf内容提取整理](https://gist.github.com/Zo-Live/6d7e88bd232ed690a7c6b754c1a92108) 。在使用前需要先安装 Tesseract OCR 引擎和 Poppler ，前者的路径加入程序，后者加入环境变量。且要安装一些包：`pip install pymupdf chromadb sentence-transformers pytesseract pdf2image`。\n\n虽然没有import，但这个也装上：`pip install huggingface_hub[hf_xet]`，不然会报错。\n\n>     gpt说：\n>\n> + pymupdf (fitz) → 提取 PDF 文字\n> + chromadb → 本地向量数据库\n> + sentence-transformers → 文本向量化（embedding）\n> + pytesseract → OCR 接口（调用系统的 Tesseract 程序）\n> + pdf2image → 把 PDF 页转换成图片，供 OCR 使用\n>\n\n中途也出现了各种各样的报错，像是\n\n> pycharm因为类型推断数据库版本过旧而不认识`get_text()`\n>\n> 因为没装`hf_xet`而fallback\n>\n> pycharm需要重启才能更新解释器的环境变量\n>\n> 等等\n>\n\n把报错信息贴给gpt，都能给出对应的解决方案。\n\n最终的代码自己能看懂一部分，尤其是关于循环和判断的部分。而看到列表以及`append()`、`split()`等函数会有种熟悉又陌生的感觉，自己不久前刚在OI Wiki中见到它们，通过与c++类比对它们的功能有一定了解，但也仅是了解。还有其他许多函数就让人眼花缭乱了。\n\n> 这程序运行起来真的很慢，可能是因为全靠OCR扫描，截至这个时间点已经运行了三个小时了，但只扫完了六本书。而且我还没检查过扫描的结果是否准确。改成调用api的话大概能显著提升效率。\n>\n> 后面可以让gpt给我详细解释一下这个程序。在文章开头所述的情况下，像这样通过实际应用来学习语法的模式大概居多。\n>\n> 不过我要先去睡觉了。\n>\n\n> 到今天中午为止，36本扫了33本，耗时将近16个小时。只依靠OCR显然不太现实，后续必须得研究一下调用api了。\n>\n> 等下午的课上完我回去看看扫描的准确率。按照以往使用OCR的经历，预计情况不会乐观。\n>\n\n看数据库构建完成时有一种救赎感好吧。花了将近20小时。\n\n但扫描结果如我想的一样不尽人意。我也自己阅读了一下生成的`.txt`缓存文件，格式挺混乱的。文字识别的准确率还能接受，但各种数学符号就不行了。\n\n## 一些总结又或许感悟\n> IDE先从vscode换成pycharm了。本来python没问题，但c++那边配置clangd和cmake之类的出了一堆问题，现在打开vscode看着一堆警告心情不快。\n>\n> 好吧pycharm就是更方便。\n>\n> 自己在转专业，多少有些担心学业压力，平时的空闲时间更倾向于花在数学和c++上，暂时没法很系统地学习python。上周六cac问起时其实有想举手）这里很感谢OI Wiki了，里面讲python基本就是贴着c++讲的，也方便类比学习。python语法确实有不少很漂亮的特性。\n>\n> 所以说现阶段要写python代码的话基本上是我给ai干活了。\n>\n\n绕了一圈。思考后我还是不打算直接调用api，而是在github上再找找其他开源的本地OCR项目，看有没有效果更好的。\n\n如果还是不行的话就考虑绕开识别pdf这一步，直接从网上爬取文本资源了。\n\n",
        "simhash": 8107157400560379791
    },
    "237720796": {
        "id": 237720796,
        "type": "Doc",
        "slug": "btag7pk04rf77y94",
        "title": "GitHub项目协作的不完全指南",
        "description": "欢迎来到NOVA社团的项目开发！我们将使用Git和GitHub进行代码版本控制和团队协作。根据cac老师的任务指派，由我负责向大家解释如何进行GitHub的项目协作。（写的好像有点太长了，可以选择性阅读）第一部分：理念与核心概念1. 为什么要用GitHub协作？版本控制：记录每一次代码修改，可...",
        "cover": "",
        "user_id": 59052738,
        "book_id": 69189148,
        "last_editor_id": 59052738,
        "public": 2,
        "status": 1,
        "likes_count": 14,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 6349,
        "created_at": "2025-09-21T08:21:47.000Z",
        "updated_at": "2025-09-23T03:12:31.000Z",
        "content_updated_at": "2025-09-21T12:38:06.000Z",
        "published_at": "2025-09-21T12:38:06.000Z",
        "first_published_at": "2025-09-21T08:22:59.355Z",
        "user": {
            "id": 59052738,
            "type": "User",
            "login": "runnel",
            "name": "张润程",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59052738/1757857361924-avatar/29e94643-3411-4c55-8eb9-3bb2cb2d3669.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-26T04:41:47.000Z",
            "updated_at": "2025-09-17T10:24:16.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59052738,
            "type": "User",
            "login": "runnel",
            "name": "张润程",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59052738/1757857361924-avatar/29e94643-3411-4c55-8eb9-3bb2cb2d3669.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-26T04:41:47.000Z",
            "updated_at": "2025-09-17T10:24:16.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "欢迎来到NOVA社团的项目开发！我们将使用Git和GitHub进行代码版本控制和团队协作。根据cac老师的任务指派，由我负责向大家解释如何进行GitHub的项目协作。（写的好像有点太长了，可以选择性阅读）\n\n## 第一部分：理念与核心概念\n### 1. 为什么要用GitHub协作？\n+ **版本控制**：记录每一次代码修改，可以轻松回退到任何历史版本。\n+ **协同工作**：多人同时在一个项目上工作而不会互相覆盖代码。\n+ **代码审查**：通过Pull Request（PR）机制，让代码在合并前被审核，提高质量。\n+ **问题追踪**：使用Issues来跟踪Bug、讨论新功能、管理任务。\n\n### 2. 核心概念速成\n+ **仓库（Repository）**：你的项目文件夹，里面包含了所有代码、文档和修改历史。\n+ **克隆（Clone）**：将远程仓库（在GitHub上）复制到你的本地电脑。\n+ **提交（Commit）**：对你修改的文件做一个“快照”，并附上一条说明信息。\n+ **分支（Branch）**：一个独立的开发线。主分支（`main` 或 `master`；我个人喜欢用`master`，而且在电脑上创建项目默认的主分支也是`master`）是稳定的，我们一般在新的分支上开发功能，完成后再合并回去。\n+ **拉取请求（Pull Request, PR）**：当你完成一个分支的开发后，发起一个请求，请其他人来审核你的代码，并合并到主分支。\n+ **合并（Merge）**：将一个分支的代码整合到另一个分支（如将功能分支合并到主分支）。\n+ **分叉（Fork）**: 将原仓库拷贝一份到自己名下，你在上面进行的任何修改都不会影响到原仓库，但同样可以进行PR来为原项目作出贡献。\n\n（以上中文翻译不一定准确，我们实际上在使用git相关术语的时候通常只会使用英文）\n\n---\n\n## 第二部分：工具准备与配置\n### 1. 安装Git\n+ **Windows**：下载并安装 [Git for Windows](https://gitforwindows.org/)（它会包含Git Bash，一个很好用的命令行工具；至于Git GUI，反正我从来不用）。\n+ **macOS**：在终端（Terminal）运行 `git --version`，如果没安装，会提示你安装Xcode Command Line Tools。\n+ **Linux（Ubuntu/Debian）**：在终端运行 `sudo apt install git`。\n\n### 2. 注册GitHub账号\n访问 [GitHub官网](https://github.com/) 注册一个账号。\n\n### 3. 配置SSH密钥（让本地和GitHub安全通信）\n1. 打开终端（或Git Bash）。\n2. 运行以下命令（替换成你的邮箱）：\n\n```bash\nssh-keygen -t ed25519 -C \"your_email@example.com\"\n```\n\n一路按回车即可。\n\n3. 查看生成的公钥并复制：\n\n```bash\ncat ~/.ssh/id_ed25519.pub\n```\n\n4. 登录GitHub，点击右上角头像 -> **Settings** -> **SSH and GPG keys** -> **New SSH key**。\n    - Title: 随便起个名，如 `My Laptop`\n    - Key: 粘贴刚才复制的内容\n5. 测试是否成功：\n\n```bash\nssh -T git@github.com\n```\n\n看到欢迎信息即成功。\n\n### 4. 配置用户信息（重要！）\n在终端运行以下命令，告诉Git你是谁：\n\n```bash\ngit config --global user.name \"你的GitHub用户名\"\ngit config --global user.email \"你的GitHub注册邮箱\"\n```\n\n---\n\n## 第三部分：标准协作流程（核心）\n假设我们有一个项目仓库：`https://github.com/NJU_NOVA/project-name`\n\n### 第0步：获取最新代码（初始化和日常开始）\n```bash\n# 1. 将远程仓库“克隆”到本地（只需做一次）\ngit clone git@github.com:NJU-NOVA/project-name.git\ncd project-name\n\n# 2. 确保本地主分支是最新的（每天开始工作前做）\ngit checkout master      # 切换到主分支\ngit pull origin master   # 从远程拉取最新代码\n```\n\n> 需要注意的是，实际上本文所有出现`git@github.com ...`的地方都可以直接替换成用`https://`开头的仓库网址，这种形式对`clone`操作基本没有影响，但是对`push`等操作影响就会比较大了。这其实分别对应`ssh`和`https`两种连接方式，后者在使用代理时尤其不稳定，容易出现无法`push`的情况，所以建议大家一步到位直接全采用`ssh`方式（不要问我为什么知道这一点，问的话就是过来人的血泪）。\n>\n\n### 第1步：创建新分支（每做一个新功能都如此）\n**原则：** 绝不在 `master` 分支上直接开发！\n\n```bash\n# 从最新的master分支创建一个新功能分支\ngit checkout -b feature/your-feature-name\n# 分支名示例: feature/add-webui, fix/typo-in-readme, docs/update-guide\n```\n\n### 第2步：在分支上开发\n1. 在你的分支上修改代码、添加文件。\n2. **经常提交（Commit）**，提交信息要清晰：\n\n```bash\ngit add .                          # 暂存所有修改\ngit commit -m \"feat: 添加用户登录功能\" # 提交并附上信息\n# 好的提交信息格式: <类型>: <描述>\n# 类型示例: feat(新功能), fix(修复bug), docs(文档), style(格式), refactor(重构)\n```\n\n### 第3步：推送分支到远程\n当你完成开发或想备份进度时：\n\n```bash\ngit push origin feature/your-feature-name\n# 第一次推送时，Git可能会提示你用：\ngit push --set-upstream origin feature/your-feature-name\n```\n\n> 这一步失败了很有可能是你忘了`pull`最新仓库，这一点对初用git的用户很常见，可以理解；但你要是按照网上的不知道哪来的教程来一个强制推送去解决问题的话我就得解决你了。\n>\n\n### 第4步：发起Pull Request (PR)\n1. 在GitHub项目页面，你会看到一个提示 **“Compare & pull request”**，点击它。\n2. **填写PR表单**：\n    - **Title**: `[Feature] 添加可交互用户界面`\n    - **Description**：详细描述你做了什么，可以贴截图。使用**模板**（我们项目大概会预设一个）。\n    - **Reviewers**：选择1-2个团队成员作为代码审核者。\n    - **Assignees**：可以指派给自己。\n3. 点击 **“Create pull request”**。\n\n### 第5步：代码审查与讨论\n+ 审核者会在PR中提出评论和建议。\n+ **你需要做**：根据评论修改代码，然后再次`add`, `commit`, `push`到**同一个分支**。PR会自动更新。\n+ 所有讨论解决后，审核者点击 **“Approve”**。\n\n### 第6步：合并与清理\n+ 由**项目负责人**或**审核者**将PR合并（Merge）到 `master` 分支。\n+ 合并后，可以在PR页面删除已经合并的远程分支。\n+ **切换回master分支，拉取最新代码，然后删除本地分支**：\n\n```bash\ngit checkout master\ngit pull origin master\ngit branch -d feature/your-feature-name # 删除本地分支\n```\n\n---\n\n## 第四部分：关键概念解析\n我们目前最重要的协作痛点仍然在于和PR的有关的几个问题上，所以我会进一步详细去解释这些操作。\n\n### 一、分支创建与命名规范\n#### 1. 为什么需要分支？\n想象一下，主分支（`master`）是一份稳定的、可随时发布的程序主副本。如果你直接在上面修改，万一改坏了，整个项目就瘫痪了。分支就像是：\n\n+ **主世界的平行宇宙**：你可以在里面任意实验、开发新功能，而完全不影响主项目。\n+ **每个人的工作沙盒**：每个成员都在自己的沙盒里工作，不会互相干扰。\n\n#### 2. 如何创建分支？（命令行细节）\n最佳实践是：**永远基于最新的 **`master`** 分支来创建你的新分支**。\n\n```bash\n# 1. 首先，确保你当前在master分支，并且它是最新的\ngit checkout master\ngit pull origin master        # 这步至关重要！获取远程最新的所有内容\n\n# 2. 基于当前最新的 master 分支，创建并切换到一个新分支\ngit checkout -b feature/amazing-new-feature\n# 这个命令是以下两个命令的简写：\n# git branch feature/amazing-new-feature   (创建分支)\n# git checkout feature/amazing-new-feature (切换分支)\n```\n\n#### 3. 分支命名规范（非常重要！）\n好的分支名能让所有团队成员一眼就知道这个分支的用途、是谁的、在做什么。\n\n**推荐格式：**`<类型>/<简短描述>-<可选issue号>`\n\n+ `<类型>`：表明分支的目的。\n    - `feature`：开发新功能。例如：`feature/user-auth`\n    - `fix`：修复bug。例如：`fix/login-crash`\n    - `hotfix`：紧急修复生产环境（主分支）的bug。例如：`hotfix/security-patch`\n    - `docs`：修改文档。例如：`docs/update-api-guide`\n    - `refactor`：代码重构，不改变功能。例如：`refactor/data-model`\n    - `style`：代码格式修改（空格、缩进等，不改变逻辑）。例如：`style/format-indentation`\n    - `test`：添加或修改测试。例如：`test/add-login-test`\n+ `<简短描述>`：用英文短横线（`-`）连接描述性单词，清晰简洁。\n    - **好**：`add-payment-service`, `fix-typo-in-header`\n    - **不好**：`patch-1`, `test-branch`, `xiaoming`s-work`（有空格和特殊字符）\n+ `<可选issue号>`：如果使用GitHub Issues来管理任务，强烈建议在描述中加上Issue号。\n    - 例如：你正在解决第5号Issue（一个关于UI的bug），分支名可以是：`fix/issue-5-ui-overlap`\n\n**示例：**\n\n+ `feature/issue-42-dark-mode` （开发第42号Issue提出的黑暗模式功能）\n+ `fix/annoying-scroll-bug` （修复一个烦人的滚动条bug）\n+ `docs/update-contribution-guide` （更新贡献指南文档）\n\n\n\n### 二、Pull Request 详解\nPR不仅仅是“合并代码”，它更是一个**代码审核、讨论、持续集成（CI）和知识共享的平台**。\n\n#### 1. 发起PR的最佳时机\n+ 你分配的功能已经**开发完成并测试通过**。\n+ 你遇到了难题，希望**征求大家的意见**（可以在标题加上 `[WIP]` 表示“工作进行中”，但通常建议完成后再PR）。\n\n#### 2. 如何创建一个高质量的PR？\n**1. 推送分支后，在GitHub上点击 “Compare & pull request”**\n\n**2. 填写至关重要的PR描述表格**  \n这是PR的灵魂，好的描述能极大提升审核效率。\n\n+ **Title（标题）**：像写邮件主题一样，清晰概括PR内容。\n    - 格式：`[类型] 简要描述`\n    - 示例：`[Feat] 新增用户第三方登录功能`, `[Fix] 解决首页图片加载失败的问题`\n+ **Description（描述）**：**请使用模板！** 我们大概率会提前配置PR模板（在仓库根目录创建 `.GitHub/PULL_REQUEST_TEMPLATE.md` 文件）。一个简单的模板如下：\n\n```markdown\n## 这个PR做了什么？ (What does this PR do?)\n<!-- 简要描述这个PR的目的和变更内容 -->\n- 新增了微信、微博第三方登录接口\n- 在用户设置页面增加了账号绑定UI\n\n## 相关的Issue编号 (Related Issues?)\n<!-- 关闭相关Issue，输入 '#' 会自动关联Issue -->\n关闭 #42, #43\n\n## 检查清单 (Checklist)\n<!-- 在提交PR前，请确认以下事项已完成 -->\n- [ ] 代码已经自我审核\n- [ ] 我已经测试过这些变更\n- [ ] 文档已更新（如果需要）\n- [ ] 代码符合项目的风格指南\n\n## 截图（如果适用）(Screenshots)\n<!-- 对于前端UI的变更，提供截图非常有用！ -->\n| 登录页 before | 登录页 after |\n|---|---|\n| <img src=\"before.png\" width=\"300\"> | <img src=\"after.png\" width=\"300\"> |\n```\n\n+ **Reviewers（审核者）**：**必须选择**1-2名熟悉相关代码的成员。这是代码审核的关键。\n+ **Assignees（负责人）**：指派给自己，表示你是这个PR的负责人。\n+ **Labels（标签）**：添加标签进行分类，如 `enhancement`, `bug`, `documentation`。\n+ **Linked Issues（关联Issue）**：在描述中通过 `#` + 编号关联Issue（如 `#42`），PR合并后，关联的Issue会自动关闭。\n\n#### 3. PR审核与迭代\n+ **审核者**：应仔细阅读代码，从**正确性、性能、安全性、可读性**等方面提出具体、友善的评论。\n    - 可以使用“建议（Suggestion）”功能直接提出代码修改意见，作者可以一键采纳。\n+ **作者**：根据评论在本地修改代码，然后再次 `add`, `commit`, `push` 到**同一个分支**。所有讨论和修改历史都会保留在PR页面，形成一个清晰的对话线程。\n\n\n\n### 三、Merge（合并）详解\n当PR通过所有审核后，就可以进行合并了。点击Merge按钮时，你会看到几种选项，理解它们的区别很重要。\n\n#### 1. 三种主要的合并方式：\n1. **Create a merge commit（创建合并提交） - 默认推荐**\n\n\n\n    - **工作原理**：创建一个新的提交（merge commit）来记录这次合并行为。这个提交有两个父提交（一个是原master分支的顶点，一个是你功能分支的顶点）。\n    - **优点**：**保留了完整的项目历史**，包括所有分支的拓扑结构，非常适合团队协作。这是最常用、最安全的选择。\n    - **缺点**：历史记录会多出一些“Merge pull request #XXX”的提交，看起来可能有点杂。\n    - **git命令等价于**：`git merge --no-ff your-branch-name`\n2. **Squash and merge（压缩合并）**\n\n\n\n    - **工作原理**：将你功能分支上的所有提交**压缩成一个全新的提交**，然后把这个新提交添加到 `master` 分支的顶端。\n    - **优点**：**保持主分支历史线性、整洁**。对于包含很多琐碎提交（如“fix typo”）的PR，这个功能非常有用，可以将它们整理成一条有意义的提交。\n    - **缺点**：丢失了分支开发过程中的历史细节（比如你中间尝试过哪些方案）。\n    - **适用场景**：PR内的提交信息比较零碎，希望主分支历史清晰明了。\n3. **Rebase and merge（变基合并）**\n\n\n\n    - **工作原理**：将你功能分支上的所有提交“重新播放”到 `master` 分支的最新顶点之后。就好像你的工作一直是基于最新的代码进行的一样。\n    - **优点**：产生一个**完全线性的项目历史**，没有合并提交，非常干净。\n    - **缺点**：**重写了历史**，如果操作不当会有风险。通常更适合小团队或个人项目中使用。\n    - **git命令等价于**：`git rebase master` + `git merge --ff-only your-branch-name`\n\n#### 2. 给NOVA新手的建议：\n+ **团队统一选择一种方式**。对于新手团队，**最推荐使用默认的 **`Create a merge commit`。因为它最安全，历史信息最完整，而且我们暂时没必要追求提交记录的美观性。\n+ 合并完成后，**记得清理分支**：\n    - 在GitHub上合并时，会有一个选项 `Delete branch`，勾选它即可删除远程分支。\n    - **本地**，你需要切换回 `master` 分支，拉取最新代码，然后删除已经合并的本地分支：\n\n```bash\ngit checkout master\ngit pull origin master # 拉取合并后的最新代码！\ngit branch -d feature/your-merged-branch # 删除本地分支\n```\n\n### 四、Fork 详解\n实际上很多同学可能都听说过`fork`这个说法，实际上这也是为项目做贡献最常见的手段，因为通常情况下我们对很多项目没有创建分支的权限。我看到群里的一些同学（比如汪同学）可能对直接参与项目比较迟疑，那么`fork-commit-pull request`对各位而言也是一种可行的工作流。\n\n简单来说：Fork 就是将别人的仓库（原仓库）完整地复制一份到你自己的 GitHub 账号下，让你拥有一个完全独立的、可以自由操作的副本。\n\n#### 为什么需要 Fork？\nFork 主要解决两种场景下的协作问题：\n\n##### 场景一：为没有写入权限的项目做贡献（最常见）\n这是开源项目的标准协作方式。比如你想为 Vue.js、React 这些著名项目修复一个错别字或添加新功能。\n\n1. 你没有权限直接到 `vuejs/core` 这个仓库里去创建分支。\n2. 你首先 **Fork** 这个项目，于是 GitHub 会在你的账号下（例如 `@your-username/core`）创建一个一模一样的副本。\n3. 你克隆（Clone）**自己 Fork 出来的仓库**，然后在这个副本上创建分支、进行修改。\n4. 修改完成后，你向你 Fork 的来源——即原始仓库（`vuejs/core`）——发起一个 **Pull Request**。\n5. 原始项目的维护者会审核你的代码，如果通过，就会将你的修改**合并（Merge）** 到官方项目中。\n\n**在这个过程中，你始终没有直接操作原始仓库的权限，但通过 Fork + PR 的机制，你同样能为项目做出贡献。**\n\n##### 场景二：以别人的项目为起点（Derivative Works）\n比如你看到一个很好的开源项目，想基于它进行深度定制，变成你们自己的东西，或者只是单纯想学习、实验一下代码。直接 Fork 一份，你的副本就成为了一个独立的起点，之后的发展可以和原项目完全无关。\n\n#### Fork 工作流 vs. 共享仓库分支工作流\n| 特性 | **Fork & Pull Request 工作流** | **共享仓库分支工作流** |\n| :--- | :--- | :--- |\n| **权限要求** | **不需要**原仓库的写入权限。任何人都可以Fork和提PR。 | **需要**被添加为仓库的**协作者（Collaborator）**，拥有写入权限。 |\n| **适用场景** | **开源项目**、公开协作、向陌生项目贡献代码。 | **私有团队项目**、公司内部项目、所有成员彼此信任的团队。 |\n| **仓库关系** | 你的Fork副本**独立于**原仓库。需要手动同步原仓库的更新。 | 所有人都在**同一个仓库**下操作。 |\n| **流程** | Fork -> Clone **自己的副本** -> 修改 -> Push 到**自己的副本** -> 向**原仓库**提PR | Clone **原仓库** -> 创建分支 -> 修改 -> Push 到**原仓库的分支** -> 提PR |\n| **心理安全** | 非常高。你的任何操作都不会直接影响原仓库。 | 相对较低。新手误操作可能会直接Push到主分支或误删分支（可通过分支保护规则规避）。 |\n\n\n#### Fork 工作流的详细步骤\n假设你想为 `NJU_NOVA/project-name` 做贡献，但你不是协作者。\n\n1. **Fork 原仓库**\n\n\n\n    - 访问原仓库的 GitHub 页面。\n    - 点击右上角的 **Fork** 按钮。\n    - 选择 Fork 到你自己的 GitHub 账号。完成后，你会被重定向到你的副本仓库，如 `your-username/project-name`。\n2. **克隆你的 Fork 副本**\n\n```bash\n# 克隆的是你自己账号下的仓库，不是原仓库！\ngit clone git@github.com:your-username/project-name.git\ncd project-name\n```\n\n3. **配置远程仓库（关键步骤）**\n\n```bash\n# 添加原仓库为 upstream 远程\ngit remote add upstream git@github.com:NJU_NOVA/project-name.git\n\n# 验证远程仓库设置\ngit remote -v\n# 应该看到：\n# origin    git@github.com:your-username/project-name.git (fetch)\n# origin    git@github.com:your-username/project-name.git (push)\n# upstream  git@github.com:NJU_NOVA/project-name.git (fetch)\n# upstream  git@github.com:NJU_NOVA/project-name.git (push)\n```\n\n    - 默认情况下，`origin` 指向你的 Fork（`your-username/project-name`）。\n    - 建议再添加一个指向**原始官方仓库**的远程，通常命名为 `upstream`。这样便于拉取官方的最新更新。\n4. **创建分支并进行开发**  \n（这一步和之前完全一样）\n\n```bash\n# 首先，确保基于最新的 upstream/master 进行开发\ngit fetch upstream\ngit checkout master\ngit merge upstream/master  # 或 git rebase upstream/master\n\n# 然后创建功能分支\ngit checkout -b feature/my-contribution\n# ... 进行你的修改，并提交 ...\ngit add .\ngit commit -m \"feat: add a cool new feature\"\n```\n\n5. **推送代码到你的 Fork**\n\n```bash\ngit push origin feature/my-contribution\n```\n\n6. **发起 Pull Request**\n\n\n\n    - 进入**你的 Fork 仓库页面**（`github.com/your-username/project-name`）。\n    - GitHub 通常会显示一个提示，比较你刚推送的分支，并建议你向原仓库提PR。点击 **“Compare & pull request”**。\n    - **关键：** 确保 **base repository** 是 `NJU_NOVA/project-name` 的 `master` 分支，**head repository** 是 `your-username/project-name` 的 `feature/my-contribution` 分支。\n7. **保持你的 Fork 更新**  \n如果原项目有了新的提交，你需要同步到你的 Fork，避免后续开发基于陈旧的代码。\n\n```bash\n# 切换到本地 master 分支\ngit checkout master\n\n# 从原仓库获取最新更新\ngit fetch upstream\n\n# 合并到本地 master\ngit merge upstream/master\n\n# 将更新后的本地 main 推送到你的 Fork (origin)\ngit push origin master\n```\n\n\n\n#### 又是一些建议\n对于我们这种**内部团队项目**，如果所有成员都是可信任的，**完全可以使用之前介绍的“共享仓库分支工作流”**。\n\n+ **更简单**：不需要配置 `upstream`，所有操作都在一个仓库内，流程更直观。\n+ **更方便**：更容易跟踪所有分支，成员之间协作（比如互相拉取分支）更直接。\n+ **权限可控**：作为仓库管理员，可以通过 **“分支保护规则”** 来防止主分支被直接推送，强制要求PR审核，从而保证安全。\n\n**但是，让大家都理解 Fork 的概念至关重要**，因为：\n\n1. 这是参与开源世界的**标准方式**。\n2. 未来如果有人想为其他项目做贡献，或者参考外部项目，一定会用到它。\n3. 如果未来你们的项目对外开放接收贡献，也会采用Fork模式。\n\n## 第五部分：项目分工建议\n### 角色划分\n1. **项目负责人（我希望是cac老师或者陈学长）**:\n    - 创建并管理仓库。\n    - 审核和合并重要的PR。\n    - 管理Issues和里程碑（Milestones）。\n    - 处理冲突和复杂问题。\n2. **核心开发者**:\n    - 负责核心模块的开发。\n    - 审核其他成员的PR。\n    - 可以拥有直接推送至特定分支的权限。\n3. **普通成员/新手**:\n    - 在分配的功能分支上开发。\n    - 为自己的功能编写文档和测试。\n    - 发起PR并参与代码讨论。\n4. **非常谨慎的新手**\n    - 在Fork的仓库上开发。\n    - 为自己的功能编写文档和测试。\n    - 发起PR并参与代码讨论。\n\n### 工作流建议：GitHub Flow\n1. **任务分配**：使用 **GitHub Issues** 来分配任务。每个功能、Bug修复对应一个Issue。\n2. **分支命名**：\n    - `feature/issue-1-add-login` (功能)\n    - `fix/issue-2-button-color` (修复)\n    - `docs/update-readme` (文档)\n3. **代码规范**：项目初期就定好代码风格，可以使用ESLint、Prettier等工具自动化格式。\n4. **每日同步**：每天开始工作前，务必从 `master` 分支 `pull` 一次，确保你的基础代码是最新的。\n\n---\n\n## 第六部分：常见问题与技巧\n+ **Q: 我**`git pull`**的时候提示有冲突怎么办？**\n    - **A**: 不要慌。冲突是因为你和别人修改了同一处代码。Git会用 `<<<<<<<`, `=======`, `>>>>>>>` 标记出来。你需要手动选择保留谁的代码，删除这些标记，然后重新 `add` 和 `commit`。\n+ **Q: 我commit信息写错了怎么办？**\n    - **A**: `git commit --amend` 可以修改最近一次的提交信息。\n+ **Q: 我还没开发完，临时要切到另一个分支去改个bug？**\n    - **A**: 使用 `git stash` 把当前工作现场“储藏”起来，改完bug后再 `git stash pop` 恢复。\n+ **铁律**：**在推代码（push）之前，先拉代码（pull）**。\n\n---\n\n## 附录：参考和延伸阅读\n1. [Git官方文档](https://git-scm.com/doc) (权威，但较复杂)\n2. [GitHub官方学习资源](https://docs.github.com/en/get-started) (非常直观)\n3. [交互式Git学习游戏](https://learngitbranching.js.org/) (通过游戏理解分支和合并，听说很有用)\n\n\n\n希望这份指南能帮助我们NOVA社团的每一位成员顺利开启协作之旅！遇到问题随时在团队内提问，我们互相学习，共同进步。**（问我不一定能解决问题，最好去问经验更丰富的老登）**\n\n",
        "simhash": 7025965973102297957
    },
    "237719466": {
        "id": 237719466,
        "type": "Doc",
        "slug": "ox2pz1ftbvagvqaq",
        "title": "Python学习类-王昊",
        "description": "分支1：构建自主性学习Python的学习框架首先，我需要知道应该怎样构建学习框架。还是先问问ds老师：Q:构建学习框架需要注意哪些方面？我能感受到你希望通过建立科学的学习框架来提升学习效率和质量。构建个人学习框架确实是一个值得投入的过程，它能帮你从盲目学习转向有方向的成长，无论你是在准备考试、...",
        "cover": "",
        "user_id": 59928019,
        "book_id": 69189148,
        "last_editor_id": 60400807,
        "public": 2,
        "status": 1,
        "likes_count": 2,
        "read_count": 0,
        "comments_count": 3,
        "word_count": 17395,
        "created_at": "2025-09-21T08:09:16.000Z",
        "updated_at": "2025-09-23T15:42:23.000Z",
        "content_updated_at": "2025-09-23T12:32:15.000Z",
        "published_at": "2025-09-23T12:32:15.000Z",
        "first_published_at": "2025-09-21T11:42:04.131Z",
        "user": {
            "id": 59928019,
            "type": "User",
            "login": "wanghao-sybdg",
            "name": "王昊",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59928019/1758201516622-avatar/2e2925a3-e4ea-4312-b361-0345568f2d09.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-21T12:30:07.000Z",
            "updated_at": "2025-09-14T11:51:49.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60400807,
            "type": "User",
            "login": "peifei-zphgc",
            "name": "裴斐",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-04T22:17:03.000Z",
            "updated_at": "2025-09-20T06:52:15.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 分支1：构建自主性学习Python的学习框架\n首先，我需要知道应该怎样构建学习框架。还是先问问ds老师：\n\n<details class=\"lake-collapse\"><summary id=\"u28228710\"><span class=\"ne-text\">Q:构建学习框架需要注意哪些方面？</span></summary><p id=\"u3330642a\" class=\"ne-p\"><span class=\"ne-text\">我能感受到你希望通过建立科学的学习框架来提升学习效率和质量。构建个人学习框架确实是一个值得投入的过程，它能帮你从盲目学习转向有方向的成长，无论你是在准备考试、学习新技能还是系统掌握某个领域的知识。</span></p><h2 id=\"Eh95N\"><span class=\"ne-text\">明确学习目标与方向 </span><span class=\"ne-text\">🎯</span></h2><p id=\"ue8354e78\" class=\"ne-p\"><span class=\"ne-text\">构建学习框架的首要步骤是明确学习目标。没有清晰目标的学习就像没有导航的航行，容易迷失方向。</span></p><p id=\"u0cbb606b\" class=\"ne-p\"><strong><span class=\"ne-text\">SMART原则</span></strong><span class=\"ne-text\">是设定目标的经典方法：</span></p><ul class=\"ne-ul\"><li id=\"u53052d31\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">具体</span></strong><span class=\"ne-text\">（Specific）：明确要学习什么，而不是“学习编程”这样的模糊目标</span></li><li id=\"ud93ad1b0\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">可衡量</span></strong><span class=\"ne-text\">（Measurable）：设定可衡量的指标，如“每周完成3个小项目”</span></li><li id=\"u898fa462\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">可实现</span></strong><span class=\"ne-text\">（Achievable）：目标应该既有挑战性又实际可行</span></li><li id=\"ufa38d504\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">相关性</span></strong><span class=\"ne-text\">（Relevant）：学习内容应与你的长期规划相关</span></li><li id=\"uafa5dc93\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">时间限制</span></strong><span class=\"ne-text\">（Time-bound）：设定明确的时间框架，如“3个月内掌握基础知识”</span></li></ul><p id=\"ucc3e6c98\" class=\"ne-p\"><span class=\"ne-text\">例如，不要只说“我想学英语”，而是“我计划在6个月内达到能流畅阅读英文科技文章的水平，每天学习45分钟”。</span></p><h2 id=\"oQQ9i\"><span class=\"ne-text\">设计系统化学习内容结构 </span><span class=\"ne-text\">📚</span></h2><p id=\"ub55316d5\" class=\"ne-p\"><span class=\"ne-text\">确定了学习目标后，需要设计一个循序渐进的内容体系。碎片化学习是效率低下的主要原因之一。</span></p><p id=\"ue8b67dc3\" class=\"ne-p\"><strong><span class=\"ne-text\">构建知识树的思路</span></strong><span class=\"ne-text\">：</span></p><ul class=\"ne-ul\"><li id=\"u91c527e4\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">基础核心</span></strong><span class=\"ne-text\">：先掌握该领域的基础概念和原理</span></li><li id=\"u235befc7\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">分支扩展</span></strong><span class=\"ne-text\">：然后逐步扩展到相关分支知识点</span></li><li id=\"uf76e079e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">交叉连接</span></strong><span class=\"ne-text\">：在不同知识点之间建立联系，形成网络</span></li><li id=\"ub625a8af\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">实践应用</span></strong><span class=\"ne-text\">：为每个知识点设计实践环节</span></li></ul><p id=\"u3d2f3d8b\" class=\"ne-p\"><span class=\"ne-text\">例如学习数据分析，可以先从统计学基础开始，然后学习Python和SQL，再逐步深入到机器学习和数据可视化。</span></p><h2 id=\"DoN7V\"><span class=\"ne-text\">选择合适的学习资源与工具 </span><span class=\"ne-text\">🔧</span></h2><p id=\"u9b8f9fd1\" class=\"ne-p\"><span class=\"ne-text\">优质的学习资源和工具能事半功倍。以下是不同类别的推荐资源：</span></p><p id=\"u5a09a816\" class=\"ne-p\"><span class=\"ne-text\">资源类型   \t 推荐工具/平台                      \t\t       特点</span></p><p id=\"ua4228077\" class=\"ne-p\"><span class=\"ne-text\">系统课程   \t Coursera、edX、中国大学MOOC          体系完整，有证书</span></p><p id=\"uf9ca6689\" class=\"ne-p\"><span class=\"ne-text\">实践平台  \t Kaggle、FreeCodeCamp、实验楼         边学边练，实战性强</span></p><p id=\"u9c38fb65\" class=\"ne-p\"><span class=\"ne-text\">知识管理  \t Notion、Obsidian、印象笔记                帮助整理和连接知识</span></p><p id=\"u45fb9186\" class=\"ne-p\"><span class=\"ne-text\">记忆辅助 \t\t Anki、Quizlet                                        基于间隔重复的记忆巩固</span></p><p id=\"ub81e07be\" class=\"ne-p\"><span class=\"ne-text\">选择资源时，优先选择那些有实践项目、社区活跃和更新及时的内容。</span></p><h2 id=\"uej4B\"><span class=\"ne-text\">制定科学的学习计划与时间安排 </span><span class=\"ne-text\">⏰</span></h2><p id=\"u5e1ecb41\" class=\"ne-p\"><span class=\"ne-text\">计划是学习的路线图。研究表明，有计划的学习者完成率比无计划者高出3倍以上。</span></p><p id=\"uc2978650\" class=\"ne-p\"><strong><span class=\"ne-text\">高效计划制定法</span></strong><span class=\"ne-text\">：</span></p><ul class=\"ne-ul\"><li id=\"u4e0cd034\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">时间分配</span></strong><span class=\"ne-text\">：采用番茄工作法（25分钟专注+5分钟休息）</span></li><li id=\"ud0243db5\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">进度跟踪</span></strong><span class=\"ne-text\">：每周回顾学习进度，调整下一周计划</span></li><li id=\"u708c947f\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">混合学习</span></strong><span class=\"ne-text\">：结合视频、阅读、实践等多种学习方式</span></li><li id=\"uf9850409\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">优先级排序</span></strong><span class=\"ne-text\">：重点内容安排在精力充沛的时段</span></li></ul><p id=\"u9e91fc8a\" class=\"ne-p\"><span class=\"ne-text\">可以使用Google日历或专门的学习计划APP如“Forest”来帮助执行计划。</span></p><h2 id=\"uvRpj\"><span class=\"ne-text\">建立反馈与评估机制 </span><span class=\"ne-text\">📊</span></h2><p id=\"u0ee294ec\" class=\"ne-p\"><span class=\"ne-text\">没有反馈的学习就像闭着眼睛走路。定期评估可以帮助你发现问题并及时调整方向。</span></p><p id=\"u332854fe\" class=\"ne-p\"><strong><span class=\"ne-text\">自我评估方法</span></strong><span class=\"ne-text\">：</span></p><ul class=\"ne-ul\"><li id=\"ufdd75a24\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">每周小测</span></strong><span class=\"ne-text\">：每周末用30分钟测试本周学习内容</span></li><li id=\"u0657a80a\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">项目实践</span></strong><span class=\"ne-text\">：每学完一个模块完成一个小项目</span></li><li id=\"ua8a308ad\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">教给别人</span></strong><span class=\"ne-text\">：尝试向他人解释你学到的概念（费曼技巧）</span></li><li id=\"ud95cce9e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">参加社区</span></strong><span class=\"ne-text\">：在相关论坛或社群中与他人交流</span></li></ul><p id=\"ud15a2532\" class=\"ne-p\"><span class=\"ne-text\">如果学习的是技能型内容，可以在GitHub上创建项目库，定期提交代码，接受他人的反馈。</span></p><h2 id=\"Qg1Km\"><span class=\"ne-text\">保持动力与克服挫折 </span><span class=\"ne-text\">🌱</span></h2><p id=\"u8ed1be45\" class=\"ne-p\"><span class=\"ne-text\">学习过程中遇到瓶颈和动力不足是正常现象。提前准备应对策略可以帮助你坚持下去。</span></p><p id=\"u22201af9\" class=\"ne-p\"><strong><span class=\"ne-text\">动力维持策略</span></strong><span class=\"ne-text\">：</span></p><ul class=\"ne-ul\"><li id=\"u9bf6da8a\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">微型目标</span></strong><span class=\"ne-text\">：将大目标分解为可达成的小目标，每完成一个就庆祝</span></li><li id=\"u91b0d629\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">学习伙伴</span></strong><span class=\"ne-text\">：找到志同道合的学习伙伴互相监督</span></li><li id=\"ub9dace80\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">环境设计</span></strong><span class=\"ne-text\">：创建专属学习环境，减少干扰因素</span></li><li id=\"u05be27fd\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">回顾成长</span></strong><span class=\"ne-text\">：每月回顾自己取得的进步，增强信心</span></li></ul><p id=\"u01e245e6\" class=\"ne-p\"><span class=\"ne-text\">记住，学习不是直线前进的过程，允许自己有停滞和反复，关键是保持长期一致性。</span></p><h2 id=\"kpPEs\"><span class=\"ne-text\">实践与应用知识 </span><span class=\"ne-text\">💡</span></h2><p id=\"ucd94be9d\" class=\"ne-p\"><span class=\"ne-text\">知识的价值在于应用。将学到的知识应用到实际情境中，不仅能加深理解，还能发现知识盲区。</span></p><p id=\"u0c7df1b1\" class=\"ne-p\"><strong><span class=\"ne-text\">知识应用方法</span></strong><span class=\"ne-text\">：</span></p><ul class=\"ne-ul\"><li id=\"u6ad836c0\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">真实项目</span></strong><span class=\"ne-text\">：找真实的问题来解决方案</span></li><li id=\"uf6adceca\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">模拟场景</span></strong><span class=\"ne-text\">：如果没有真实项目，可以参与案例研究或模拟场景</span></li><li id=\"u3f3ebb03\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">输出内容</span></strong><span class=\"ne-text\">：写博客、制作视频教程分享你学到的知识</span></li><li id=\"ue163fc05\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">跨界应用</span></strong><span class=\"ne-text\">：尝试将某个领域的知识应用到另一个领域</span></li></ul><p id=\"udfed965a\" class=\"ne-p\"><span class=\"ne-text\">构建学习框架是一个动态过程，需要根据你的学习风格和进展不断调整优化。最重要的是开始行动，然后在实践中不断完善你的框架。</span></p><p id=\"ua6cddb31\" class=\"ne-p\"><strong><span class=\"ne-text\">学习框架的真正力量不在于完美设计，而在于它为你提供的方向感和持续迭代的能力</span></strong><span class=\"ne-text\">。每个精心组织的学习阶段都会悄然重塑你的思维边界，当积累足够多时，回头望去，那些看似微不足道的每日积累已汇成无法被忽视的知识山脉。</span></p></details>\n再根据ds老师的指引逐步构建：\n\n### 学习目标和方向\n目标再细分成长期和短期的\n\n\n\n下面的问题其实是在军训期间问的，没有上下文可能有些突兀和奇怪，想了想还是直接把原问题贴了过来\n\n<details class=\"lake-collapse\"><summary id=\"u5006c062\"><span class=\"ne-text\">Q:是否明确了自己的职业方向学习更有目的？</span></summary><h3 id=\"ql7Bj\"><span class=\"ne-text\">如何明确方向并制定学习计划？（给你的建议） </span></h3><p id=\"u14422973\" class=\"ne-p\"><span class=\"ne-text\">如果你暂时还没有方向，不要焦虑，这是一个探索的过程。你可以这样做： </span></p><h4 id=\"gPyfd\"><span class=\"ne-text\">1.  广泛了解，缩小范围： </span></h4><p id=\"u0850351b\" class=\"ne-p\"><span class=\"ne-text\">◦  花点时间看看招聘网站（BOSS直聘、拉勾网等），了解IT行业有哪些主要的职位，如：</span></p><p id=\"u78aa72e2\" class=\"ne-p\"><strong><span class=\"ne-text\">■  </span></strong><strong><em><span class=\"ne-text\">前端开发、后端开发、移动端开发（iOS/Android）</span></em></strong></p><p id=\"u0047d211\" class=\"ne-p\"><strong><em><span class=\"ne-text\">■  嵌入式开发、物联网工程师（与你专业相关）  </span></em></strong></p><p id=\"u23b94943\" class=\"ne-p\"><strong><em><span class=\"ne-text\">■  数据分析师、算法工程师、人工智能工程师  </span></em></strong></p><p id=\"uf3b9c750\" class=\"ne-p\"><strong><em><span class=\"ne-text\">■  网络安全工程师、运维工程师   </span></em></strong><em><span class=\"ne-text\"> </span></em></p><p id=\"u51d2389c\" class=\"ne-p\"><span class=\"ne-text\">◦  看看这些职位的职位描述（JD），了解他们需要什么技能，做什么工作。    </span></p><h4 id=\"WeZ6s\"><span class=\"ne-text\">2.  结合自身，做出选择： </span></h4><p id=\"ufe66a9ba\" class=\"ne-p\"><span class=\"ne-text\">◦  兴趣：你对什么感兴趣？是喜欢做看得见的界面（前端），还是喜欢处理逻辑和数据（后端/算法）？ ◦  专业背景：你的电子信息工程专业背景，是走嵌入式/物联网方向的天然优势，竞争壁垒更高，是你区别于普通计算机科班生的核心竞争力。  </span></p><p id=\"uc3804948\" class=\"ne-p\"><span class=\"ne-text\">◦  性格：你是喜欢深入研究底层技术，还是喜欢快速迭代交付产品？    </span></p><h4 id=\"IR8Uq\"><span class=\"ne-text\">3.  设定一个“最小可行目标”： </span></h4><p id=\"u4cd29824\" class=\"ne-p\"><span class=\"ne-text\">◦  不要想“我要成为架构师”，这个目标太大太远。  </span></p><p id=\"u3c835abf\" class=\"ne-p\"><span class=\"ne-text\">◦  设定一个具体、可达成的短期目标，例如： </span></p><p id=\"ue861fc42\" class=\"ne-p\"><span class=\"ne-text\">■  “在3个月内，学习C语言和STM32，做一个通过Wi-Fi控制的小车”（嵌入式方向） </span></p><p id=\"uf61ee3a2\" class=\"ne-p\"><span class=\"ne-text\">■  “在4个月内，学习Java和SpringBoot，开发一个带用户登录的博客系统”（后端方向）  </span></p><p id=\"u43fbbc3c\" class=\"ne-p\"><span class=\"ne-text\">■  “在3个月内，学习Python、Pandas和Sklearn，完成一个Kaggle的入门竞赛”（数据方向）     </span></p><h4 id=\"x00Xm\"><span class=\"ne-text\">4.  执行并调整： </span></h4><p id=\"u7cc9476c\" class=\"ne-p\"><span class=\"ne-text\">◦  朝着这个目标去学习，在学习过程中，你可能会发现更细分的兴趣点（比如做了嵌入式后，发现你对通信协议特别感兴趣），然后可以随时调整你的方向。     </span></p><h3 id=\"uO2jX\"><span class=\"ne-text\">结论 </span></h3><p id=\"u9b933050\" class=\"ne-p\"><span class=\"ne-text\">明确职业方向不是学习开始前的“一次性决策”，而是一个“动态调整的过程”。但你必须先有一个初始方向，才能启动这个高效学习的飞轮。</span></p></details>\n实际上到今天我还没有到招聘网站上去了解这些职位需要什么技能，做什么工作。而且可能还有更细分的和未来新出现的。自己只是看名字感觉对第三条更感兴趣，然后才是第二条。\n\n<details class=\"lake-collapse\"><summary id=\"udb40b7aa\"><span class=\"ne-text\">Q:现在大一未开学，如果我更想成为数据分析师，算法工程师，人工智能工程师，该怎么办？</span></summary><p id=\"u56d476ca\" class=\"ne-p\"><span class=\"ne-text\">非常棒！大一就能明确自己的兴趣方向，这为你赢得了巨大的先发优势。从电子信息专业走向数据科学和人工智能领域，是一条完全可行且充满优势的道路。你的理工科背景，尤其是数学和信号处理的潜力，将是你的独特优势。</span></p><p id=\"ud707c7d1\" class=\"ne-p\"><span class=\"ne-text\">下面我为你量身打造一个从大一到大四的详细行动指南。</span></p><h3 id=\"ejIQ8\"><span class=\"ne-text\">核心心态建设</span></h3><ol class=\"ne-ol\"><li id=\"u5333f7fc\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">接受跨界优势</span></strong><span class=\"ne-text\">：不要认为电子信息是“偏离”了AI。恰恰相反，</span><strong><span class=\"ne-text\">AI的许多核心思想（如傅里叶变换、滤波、采样、最优化）正是电子信息的基础</span></strong><span class=\"ne-text\">。你未来的优势在于既懂算法模型，又理解物理信号和数据是如何产生的。</span></li><li id=\"uc8a62f9b\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">长远眼光</span></strong><span class=\"ne-text\">：这是一个需要长期积累的领域。不要追求速成，要打好坚实的基础。你的大学四年是绝佳的黄金时间。</span></li></ol><hr id=\"Ettjo\" class=\"ne-hr\"><h3 id=\"MlyUv\"><span class=\"ne-text\">分阶段行动计划</span></h3><h4 id=\"cIXZ5\"><strong><span class=\"ne-text\">第一阶段：大一 —— 打下坚实根基，培养兴趣</span></strong></h4><p id=\"u4ded5a32\" class=\"ne-p\"><span class=\"ne-text\">目标：</span><strong><span class=\"ne-text\">完美完成学业基础，熟练掌握Python，培养数据思维。</span></strong></p><ol class=\"ne-ol\"><li id=\"u92474749\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">学业是根本</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uc1bb2049\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数学课</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">高等数学（微积分）</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">线性代数</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">概率论与数理统计</span></strong><span class=\"ne-text\">。这是AI领域的三大支柱，必须不惜一切代价学到顶尖水平。上课认真听，作业独立完成，争取高分。理解每一个概念背后的直观意义，而不只是会解题。</span></li><li id=\"u7219dc9d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">专业基础课</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">C语言</span></strong><span class=\"ne-text\">认真学。它虽不是AI主流语言，但能极大地训练你的编程思维和逻辑能力。</span><strong><span class=\"ne-text\">电路分析</span></strong><span class=\"ne-text\">等课程也要学好，它们培养你的系统思维和建模能力。</span></li></ul></ul><ol start=\"2\" class=\"ne-ol\"><li id=\"uf2537037\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">编程入门</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u7cb73f6a\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">主攻Python</span></strong><span class=\"ne-text\">：利用课余时间，系统学习Python。不要只看书，一定要多敲代码。学完基础语法后，立刻开始学习 </span><code class=\"ne-code\"><span class=\"ne-text\">NumPy</span></code><span class=\"ne-text\"> (数组计算)、</span><code class=\"ne-code\"><span class=\"ne-text\">Pandas</span></code><span class=\"ne-text\"> (数据处理与分析)、</span><code class=\"ne-code\"><span class=\"ne-text\">Matplotlib</span></code><span class=\"ne-text\"> (数据可视化) 这“三件套”。这是你后续所有项目和学习的工具基础。</span></li><li id=\"u1a37c047\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">实践项目</span></strong><span class=\"ne-text\">：找一个你感兴趣的数据集（比如电影数据、游戏数据、体育比赛数据），用刚学的“三件套”尝试做一些简单的分析和图表。目的是熟悉工具，培养兴趣。</span></li></ul></ul><ol start=\"3\" class=\"ne-ol\"><li id=\"u543f0e73\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">英语能力</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u8507f916\" data-lake-index-type=\"0\"><span class=\"ne-text\">坚持学习英语，尤其是阅读能力。顶尖的论文、技术文档、Stack Overflow上的答案都是英文的。这是你获取第一手信息的钥匙。</span></li></ul></ul><h4 id=\"BQkPP\"><strong><span class=\"ne-text\">第二阶段：大二 —— 深化技能，探索方向</span></strong></h4><p id=\"u2ff3ee2a\" class=\"ne-p\"><span class=\"ne-text\">目标：</span><strong><span class=\"ne-text\">巩固数学基础，学习机器学习核心算法，开始尝试项目。</span></strong></p><ol class=\"ne-ol\"><li id=\"u122e159b\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数学进阶</span></strong><span class=\"ne-text\">：如果学校有开</span><strong><span class=\"ne-text\">离散数学</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">优化方法</span></strong><span class=\"ne-text\">（运筹学）等课程，尽量选修。</span></li><li id=\"udcb2dbee\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">机器学习入门</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u4b1b6c62\" data-lake-index-type=\"0\"><span class=\"ne-text\">学习 </span><code class=\"ne-code\"><span class=\"ne-text\">Scikit-learn</span></code><span class=\"ne-text\"> 库。这是Python最经典的机器学习库。</span></li><li id=\"u19d1bf05\" data-lake-index-type=\"0\"><span class=\"ne-text\">通过网课（如吴恩达的Machine Learning课程）系统学习机器学习基础算法：线性回归、逻辑回归、决策树、聚类、支持向量机等。</span><strong><span class=\"ne-text\">重点是理解算法的原理、适用场景和优缺点</span></strong><span class=\"ne-text\">，而不仅仅是调包。</span></li></ul></ul><ol start=\"3\" class=\"ne-ol\"><li id=\"u0a69272c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">技能拓展</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u18e6bc66\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据库</span></strong><span class=\"ne-text\">：学习</span><strong><span class=\"ne-text\">SQL</span></strong><span class=\"ne-text\">，这是数据处理工程师的必备技能。学会从数据库中取数。</span></li><li id=\"u2284b66b\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">Linux</span></strong><span class=\"ne-text\">：熟悉基本的Linux命令行操作，未来你的模型大多会在Linux服务器上运行。</span></li><li id=\"ue08f5506\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">Git</span></strong><span class=\"ne-text\">：学会使用Git进行代码版本管理，这是团队协作的基石。</span></li></ul></ul><ol start=\"4\" class=\"ne-ol\"><li id=\"u0403bef5\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">尝试竞赛</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u78fc6f80\" data-lake-index-type=\"0\"><span class=\"ne-text\">参加</span><strong><span class=\"ne-text\">Kaggle</span></strong><span class=\"ne-text\">或</span><strong><span class=\"ne-text\">天池</span></strong><span class=\"ne-text\">等平台上的入门级（Getting Started）机器学习竞赛。不要在乎名次，目的是体验一个完整的数据科学项目流程：数据清洗、特征工程、模型训练、模型集成、结果提交。</span></li></ul></ul><h4 id=\"Bxgin\"><strong><span class=\"ne-text\">第三阶段：大三 —— 专业进阶，积累经验</span></strong></h4><p id=\"ucdc054da\" class=\"ne-p\"><span class=\"ne-text\">目标：</span><strong><span class=\"ne-text\">深入专研，确定细分方向，积累项目/实习经验。</span></strong></p><ol class=\"ne-ol\"><li id=\"u85a8e659\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">深度学习</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ua1f3c312\" data-lake-index-type=\"0\"><span class=\"ne-text\">学习深度学习框架：</span><strong><span class=\"ne-text\">PyTorch</span></strong><span class=\"ne-text\">（目前学术界和工业界主流）或</span><strong><span class=\"ne-text\">TensorFlow</span></strong><span class=\"ne-text\">。</span></li><li id=\"u64a32282\" data-lake-index-type=\"0\"><span class=\"ne-text\">学习神经网络、CNN（计算机视觉）、RNN/LSTM（自然语言处理）等。</span></li></ul></ul><ol start=\"2\" class=\"ne-ol\"><li id=\"u4b07d589\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">确定方向</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uc6fbe7a1\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">计算机视觉</span></strong><span class=\"ne-text\">：数字图像处理（你的专业可能会开这门课，要无比重视！）、目标检测、图像分割。</span></li><li id=\"u02ff54c2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">自然语言处理</span></strong><span class=\"ne-text\">：词向量、Transformer、BERT。</span></li><li id=\"ub4cfa849\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">强化学习</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">推荐系统</span></strong><span class=\"ne-text\">等。根据兴趣选择一个方向深入。</span></li></ul></ul><ol start=\"3\" class=\"ne-ol\"><li id=\"uf38277ce\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">项目与实习</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u81914584\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">做有深度的项目</span></strong><span class=\"ne-text\">：不再满足于课堂作业和入门竞赛。可以尝试：</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul class=\"ne-list-wrap\"><ul ne-level=\"2\" class=\"ne-ul\"><li id=\"ucfd7a939\" data-lake-index-type=\"0\"><span class=\"ne-text\">和老师做科研项目（很多电子信息系的老师也在做AI相关研究，如图像信号处理、雷达信号识别等，</span><strong><span class=\"ne-text\">这是你的绝佳优势！</span></strong><span class=\"ne-text\">）</span></li><li id=\"uaeff79f4\" data-lake-index-type=\"0\"><span class=\"ne-text\">参加更高级别的算法竞赛。</span></li><li id=\"uc22f0643\" data-lake-index-type=\"0\"><span class=\"ne-text\">自己从生活中发现问题，并用AI思路去解决。</span></li></ul></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u4710994d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">寻找第一份实习</span></strong><span class=\"ne-text\">：大三暑假，尝试申请一家公司的数据分析/算法实习岗。实习经验对于秋招至关重要。</span></li></ul></ul><h4 id=\"ViAM3\"><strong><span class=\"ne-text\">第四阶段：大四 —— 冲刺与收获</span></strong></h4><p id=\"u1ab10806\" class=\"ne-p\"><span class=\"ne-text\">目标：</span><strong><span class=\"ne-text\">准备面试，完成毕业设计，收获Offer。</span></strong></p><ol class=\"ne-ol\"><li id=\"u4ad2c551\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">毕业设计</span></strong><span class=\"ne-text\">：选择一个与你目标方向相关的课题，做深做透，它将成为你简历上最亮眼的一部分。</span></li><li id=\"udf6aca67\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">求职准备</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u6d25d608\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">刷题</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">LeetCode</span></strong><span class=\"ne-text\">是必刷的，尤其是算法题，大厂面试必考。</span></li><li id=\"uc5c03f01\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">复习</span></strong><span class=\"ne-text\">：系统复习机器学习、深度学习的基础知识，因为面试官喜欢问原理。</span></li><li id=\"uc1d5e28d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">准备项目经历</span></strong><span class=\"ne-text\">：清晰梳理你做过的每一个项目，能用简短的语言说清楚背景、你的工作、遇到的困难和最终结果。</span></li></ul></ul><ol start=\"3\" class=\"ne-ol\"><li id=\"ufc6e033a\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">抉择</span></strong><span class=\"ne-text\">：是求职还是考研？如果目标是算法工程师，</span><strong><span class=\"ne-text\">硕士学历目前几乎是标配</span></strong><span class=\"ne-text\">，因为需要更深厚的理论功底。大三时就要想清楚并准备。</span></li></ol><hr id=\"skrkb\" class=\"ne-hr\"><h3 id=\"mKvtk\"><span class=\"ne-text\">如何利用你的电子信息专业背景？</span></h3><p id=\"u79e38e9e\" class=\"ne-p\"><span class=\"ne-text\">这是你的“杀手锏”，一定要用好：</span></p><ul class=\"ne-ul\"><li id=\"ud3526d4c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">信号处理即特征工程</span></strong><span class=\"ne-text\">：电子信息的核心是从信号中提取信息。这</span><strong><span class=\"ne-text\">完全等同于</span></strong><span class=\"ne-text\">机器学习中的“特征工程”。你对时域、频域、滤波的理解，会让你在如何处理数据上有独一无二的视角。</span></li><li id=\"u1fbf8c8d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">关注交叉领域</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">AIoT</span></strong><span class=\"ne-text\">是绝佳方向。用你熟悉的嵌入式设备（传感器）采集数据，然后用你学习的AI算法去分析数据。例如：基于振动信号的设备故障诊断、基于雷达手势识别。你的毕业设计完全可以做这个方向，秒杀其他纯CS背景的同学。</span></li><li id=\"u8451722e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">选择相关课程</span></strong><span class=\"ne-text\">：如果你的专业有</span><strong><span class=\"ne-text\">数字图像处理</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">数字信号处理</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">随机过程</span></strong><span class=\"ne-text\">等课程，一定要优先学好，它们与你目标的契合度超高。</span></li></ul><h3 id=\"aGj70\"><span class=\"ne-text\">资源推荐</span></h3><ul class=\"ne-ul\"><li id=\"uf5c63c67\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">网课</span></strong><span class=\"ne-text\">：Coursera（吴恩达机器学习/深度学习）、Udacity、edX、B站上有大量优质搬运和原创教程。</span></li><li id=\"uf8c85633\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">书籍</span></strong><span class=\"ne-text\">：《统计学习方法》（李航）、《机器学习》（周志华，西瓜书）、《深度学习》（花书）。</span></li><li id=\"u384b1a99\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">社区</span></strong><span class=\"ne-text\">：Kaggle、GitHub、Stack Overflow、知乎、掘金。</span></li></ul><p id=\"u57b9f8f3\" class=\"ne-p\"><strong><span class=\"ne-text\">总结：你的道路非常清晰——「电子信息基础 + 数据科学技能」。这是一条“复合型人才”的道路，竞争力更强。从现在开始，打好数学和Python基础，一步一个脚印，你的目标一定可以实现！</span></strong></p></details>\n<details class=\"lake-collapse\"><summary id=\"u9fec111d\"><span class=\"ne-text\">Q:推荐转到计算机专业或人工智能专业吗？</span></summary><p id=\"ufccc0ca8\" class=\"ne-p\"><span class=\"ne-text\">这是一个非常棒的问题，也是很多像你一样有前瞻性的大一学生都会思考的核心问题。我的建议可能有点反直觉：</span></p><p id=\"uf28f0d01\" class=\"ne-p\"><strong><span class=\"ne-text\">对于你（电子信息专业且目标为AI方向）的情况，我建议：优先考虑不转专业，而是通过自学和规划课程的方式向目标靠拢。转专业应该是最后的选择，而非第一选择。</span></strong></p><p id=\"ua7125bc2\" class=\"ne-p\"><span class=\"ne-text\">下面我为你进行详细的利弊分析，并给出无论转不转专业都通用的行动方案。</span></p><hr id=\"xUDH5\" class=\"ne-hr\"><h3 id=\"BfHjC\"><span class=\"ne-text\">一、为什么不转专业可能是更优解？（你的独特优势）</span></h3><p id=\"u5af720a7\" class=\"ne-p\"><span class=\"ne-text\">你的电子信息专业背景，在AI时代反而可能成为一个巨大的</span><strong><span class=\"ne-text\">差异化优势</span></strong><span class=\"ne-text\">。</span></p><ol class=\"ne-ol\"><li id=\"ue341276e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">打造“复合型”竞争力，避免同质化竞争</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u7d6bbd26\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">纯CS/AI专业的学生</span></strong><span class=\"ne-text\">：知识结构类似，都在学机器学习、深度学习、刷LeetCode。你们未来的竞争将是“硬碰硬”的。</span></li><li id=\"u90d9b1f9\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">你（电子信息+AI）</span></strong><span class=\"ne-text\">：你懂信号处理、嵌入式系统，还懂AI算法。这意味着你能解决纯软件工程师无法解决的问题，例如：</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul class=\"ne-list-wrap\"><ul ne-level=\"2\" class=\"ne-ul\"><li id=\"ufef15027\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">AIoT（人工智能物联网）</span></strong><span class=\"ne-text\">：如何在嵌入式设备上部署和优化AI模型（模型轻量化、边缘计算）。</span></li><li id=\"u137abb69\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">工业AI</span></strong><span class=\"ne-text\">：如何用AI分析传感器信号进行预测性维护、故障诊断。</span></li><li id=\"u7dfa4491\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">自动驾驶/机器人</span></strong><span class=\"ne-text\">：如何处理雷达、激光雷达（LiDAR）、摄像头等多传感器融合信号。</span></li></ul></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u5781fcfc\" data-lake-index-type=\"0\"><span class=\"ne-text\">这种“既懂硬件又懂智能算法”的人才非常稀缺，竞争力极强。</span></li></ul></ul><ol start=\"2\" class=\"ne-ol\"><li id=\"u93e29395\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">课程设置上并非不可逾越</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ucf468183\" data-lake-index-type=\"0\"><span class=\"ne-text\">电子信息专业也会开设大量编程、算法（如DSP中的各种算法）、数学课程（高数、线代、概率论）。这些同样是AI的基石。</span></li><li id=\"u04312cd9\" data-lake-index-type=\"0\"><span class=\"ne-text\">你缺少的可能是《操作系统》、《计算机网络》、《数据库》等核心CS课程。但这些课程</span><strong><span class=\"ne-text\">完全可以通过MOOC（慕课）、自学、选修等方式补上</span></strong><span class=\"ne-text\">。相反，CS同学想自学《数字信号处理》或《单片机原理》则困难得多。</span></li></ul></ul><ol start=\"3\" class=\"ne-ol\"><li id=\"u3c42b583\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">转专业的成本与风险</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u48ccf2fa\" data-lake-index-type=\"0\"><span class=\"ne-text\">转专业通常对大一成绩有很高要求，你需要花大量时间精力去维持高GPA，可能会压缩你自学Python和AI的时间。</span></li><li id=\"u18e02d2b\" data-lake-index-type=\"0\"><span class=\"ne-text\">转入新环境需要适应，可能会打乱你原有的学习节奏。</span></li></ul></ul><hr id=\"A9eEG\" class=\"ne-hr\"><h3 id=\"AQqc7\"><span class=\"ne-text\">三、给你的核心行动建议（不转专业下的攻略）</span></h3><p id=\"u78fb9ba9\" class=\"ne-p\"><span class=\"ne-text\">假设你决定留在电子信息专业，那么你的大学四年规划应该是 </span><strong><span class=\"ne-text\">“电子信息为本，计算机/AI为纲”</span></strong><span class=\"ne-text\">。</span></p><p id=\"uc28bc184\" class=\"ne-p\"><strong><span class=\"ne-text\">大一（现在 - 下学期）：夯实基础，探索方向</span></strong></p><ul class=\"ne-ul\"><li id=\"ub7b878bf\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">稳住GPA</span></strong><span class=\"ne-text\">：尤其是高数、线代、C语言，这些课程分数要高，这是你无论保研、考研还是求职的底气。</span></li><li id=\"u54f9809e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">自学Python</span></strong><span class=\"ne-text\">：按照我们之前的讨论，快速掌握Python及数据分析三件套（NumPy, Pandas, Matplotlib）。</span></li><li id=\"u3094bd41\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">尝试小项目</span></strong><span class=\"ne-text\">：从硬件相关的小项目入手（如用ESP32采集传感器数据并用Python分析），保持对专业的兴趣，同时锻炼编程能力。</span></li></ul><p id=\"u3aa97b90\" class=\"ne-p\"><strong><span class=\"ne-text\">大二：双向深入，弥补短板</span></strong></p><ul class=\"ne-ul\"><li id=\"ucd85f070\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">学好专业核心课</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">数字信号处理</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">单片机</span></strong><span class=\"ne-text\"> 这两门课要学到极致！它们是你未来的“杀手锏”。</span></li><li id=\"ud96e3878\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">系统学习计算机基础</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u7c401b44\" data-lake-index-type=\"0\"><span class=\"ne-text\">通过</span><strong><span class=\"ne-text\">MOOC</span></strong><span class=\"ne-text\">（中国大学MOOC、Coursera）自学 </span><strong><span class=\"ne-text\">《数据结构与算法》</span></strong><span class=\"ne-text\"> 、 </span><strong><span class=\"ne-text\">《操作系统》</span></strong><span class=\"ne-text\"> 。这是弥补你与CS学生差距的关键。</span></li><li id=\"u6026d498\" data-lake-index-type=\"0\"><span class=\"ne-text\">开始刷 </span><strong><span class=\"ne-text\">LeetCode</span></strong><span class=\"ne-text\">，从简单题开始，培养算法思维。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"u8da5e9a4\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">入门机器学习</span></strong><span class=\"ne-text\">：学习 </span><code class=\"ne-code\"><span class=\"ne-text\">Scikit-learn</span></code><span class=\"ne-text\">，完成吴恩达的机器学习课程。</span></li></ul><p id=\"ub3fff03c\" class=\"ne-p\"><strong><span class=\"ne-text\">大三：方向聚焦，积累经验</span></strong></p><ul class=\"ne-ul\"><li id=\"u2def34cc\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">深入学习AI</span></strong><span class=\"ne-text\">：学习深度学习框架（</span><strong><span class=\"ne-text\">PyTorch</span></strong><span class=\"ne-text\">），并选择一个细分方向（CV/NLP）深入。</span></li><li id=\"u6a509997\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">做有深度的项目</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u95f64910\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">最佳路径</span></strong><span class=\"ne-text\">：找一位做</span><strong><span class=\"ne-text\">信号处理、图像处理、模式识别</span></strong><span class=\"ne-text\">方向的导师，进入他的实验室。你的专业背景会让你如鱼得水。例如，做“基于深度学习的心电图信号分类”、“基于视觉的机械臂抓取”等。</span><strong><span class=\"ne-text\">这种项目能让你的简历闪闪发光。</span></strong></li><li id=\"uae0024f2\" data-lake-index-type=\"0\"><span class=\"ne-text\">参加</span><strong><span class=\"ne-text\">算法竞赛</span></strong><span class=\"ne-text\">（如Kaggle、天池）。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"u7a6fce72\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">寻找实习</span></strong><span class=\"ne-text\">：大三暑假，尝试申请AI算法岗或数据岗的实习。你的项目经历将是核心竞争力。</span></li></ul><p id=\"u48313e6b\" class=\"ne-p\"><strong><span class=\"ne-text\">大四：冲刺收获</span></strong></p><ul class=\"ne-ul\"><li id=\"ubb7f40a4\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">抉择</span></strong><span class=\"ne-text\">：考研（强烈推荐，AI方向硕士学历溢价很高） or 求职。</span></li><li id=\"ud9e130fd\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">毕业设计</span></strong><span class=\"ne-text\">：做一个与AI相关的跨学科课题，完美展示你的复合背景。</span></li></ul><h3 id=\"bVw3x\"><span class=\"ne-text\">总结</span></h3><p id=\"u55a0b668\" class=\"ne-p\"><strong><span class=\"ne-text\">不要把你的专业看成是阻碍，而应将其视为让你脱颖而出的“杠杆”。</span></strong></p><ul class=\"ne-ul\"><li id=\"u97c213ef\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">路径一（推荐）</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">电子信息（本科） + 人工智能（硕士）</span></strong><span class=\"ne-text\">。这是最完美、最具竞争力的路径。</span></li><li id=\"u4e23303e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">路径二</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">成为一名软硬兼修的AI算法工程师/专家</span></strong><span class=\"ne-text\">，专注于AIoT、工业智能等蓝海领域。</span></li></ul><p id=\"u43dec5b8\" class=\"ne-p\"><span class=\"ne-text\">现在，你不需要为“转不转”而过度焦虑。你需要做的是：</span><strong><span class=\"ne-text\">学好当前课程，同时把Python和机器学习的基础打起来</span></strong><span class=\"ne-text\">。当你在大二、大三做了几个硬核项目之后，你会更清楚地知道自己想要什么，那时你的选择将会更加明智。</span></p></details>\n\n\n根据上面的问题分析出当前的目标：\n\n**自学Python**：按照我们之前的讨论，快速掌握Python及数据分析三件套（NumPy, Pandas, Matplotlib）。\n\n### 设计系统化学习内容结构\n<details class=\"lake-collapse\"><summary id=\"ua5a6f566\"><span class=\"ne-text\">Q:我该如何自学matplotlib，numpy 和pandas？</span></summary><p id=\"u3631dcf0\" class=\"ne-p\"><span class=\"ne-text\">太棒了！这是一个非常具体且重要的问题。</span><code class=\"ne-code\"><span class=\"ne-text\">NumPy</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">Pandas</span></code><span class=\"ne-text\">, 和 </span><code class=\"ne-code\"><span class=\"ne-text\">Matplotlib</span></code><span class=\"ne-text\"> 是 Python 数据科学生态的核心三剑客。自学它们的最佳路径是 </span><strong><span class=\"ne-text\">“理论 -&gt; 实践 -&gt; 项目”</span></strong><span class=\"ne-text\"> 的循环。</span></p><p id=\"u928c19e7\" class=\"ne-p\"><span class=\"ne-text\">以下是我为你量身定制的自学方案：</span></p><h3 id=\"LMwMS\"><span class=\"ne-text\">核心学习策略</span></h3><ol class=\"ne-ol\"><li id=\"ue2f5ca02\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">理解分工</span></strong><span class=\"ne-text\">：首先明白这三个库是干什么的，这能让你在学习时思路清晰。</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u8180c590\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">NumPy</span></strong><span class=\"ne-text\">： </span><strong><span class=\"ne-text\">计算基础</span></strong><span class=\"ne-text\">。提供高性能的多维数组对象和数学工具。它是 </span><code class=\"ne-code\"><span class=\"ne-text\">Pandas</span></code><span class=\"ne-text\"> 和很多科学计算库的基础。</span><strong><span class=\"ne-text\">核心是 </span></strong><code class=\"ne-code\"><span class=\"ne-text\">array</span></code><strong><span class=\"ne-text\">（数组）和向量化运算</span></strong><span class=\"ne-text\">。</span></li><li id=\"u14ddd6f7\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">Pandas</span></strong><span class=\"ne-text\">： </span><strong><span class=\"ne-text\">数据处理核心</span></strong><span class=\"ne-text\">。用于处理</span><strong><span class=\"ne-text\">表格型</span></strong><span class=\"ne-text\">和</span><strong><span class=\"ne-text\">异质型</span></strong><span class=\"ne-text\">数据。它强大在其两种核心数据结构：</span><code class=\"ne-code\"><span class=\"ne-text\">Series</span></code><strong><span class=\"ne-text\"> (一维列)</span></strong><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">DataFrame</span></code><strong><span class=\"ne-text\"> (二维表格)</span></strong><span class=\"ne-text\">。几乎所有数据处理操作都围绕它们展开。</span></li><li id=\"u30621400\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">Matplotlib</span></strong><span class=\"ne-text\">： </span><strong><span class=\"ne-text\">可视化工具</span></strong><span class=\"ne-text\">。用于创建各种静态、动态、交互式的图表。其绘图逻辑有点类似“搭积木”，先创建画布，再一步步添加元素。</span></li></ul></ul><ol start=\"2\" class=\"ne-ol\"><li id=\"u7f496b03\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">学习顺序</span></strong><span class=\"ne-text\">：建议按 </span><strong><span class=\"ne-text\">NumPy -&gt; Pandas -&gt; Matplotlib</span></strong><span class=\"ne-text\"> 的顺序学习。因为 Pandas 依赖 NumPy 的数组概念，而可视化通常是对处理好的数据（DataFrame）进行展示。</span></li><li id=\"u6e3aaac8\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">核心心态</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u79a62a1f\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">不要死记硬背所有函数</span></strong><span class=\"ne-text\">：记住最常用的，其他的用时查文档。</span></li><li id=\"u46678b67\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">官方文档是你最好的朋友</span></strong><span class=\"ne-text\">：这三个库的官方文档非常完善，且有中文版（部分）。遇到函数不会用，第一时间查文档。</span></li><li id=\"u1bce5548\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">边学边练</span></strong><span class=\"ne-text\">：光看不动手，绝对学不会。</span></li></ul></ul><hr id=\"P3hCh\" class=\"ne-hr\"><h3 id=\"VNlTH\"><span class=\"ne-text\">分步自学指南</span></h3><h4 id=\"D9Z36\"><span class=\"ne-text\">阶段一：NumPy - 打好科学计算的基础</span></h4><ul class=\"ne-ul\"><li id=\"ucc6a79ec\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">学习目标</span></strong><span class=\"ne-text\">：理解数组的概念，掌握最基本的数组操作和计算。</span></li><li id=\"ua3d97bd2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">核心知识点</span></strong><span class=\"ne-text\">：</span></li></ul><ol class=\"ne-list-wrap\"><ol ne-level=\"1\" class=\"ne-ol\"><li id=\"u7abbfa1e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">创建数组</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">np.array()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.arange()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.zeros()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.ones()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.random</span></code></li><li id=\"ua7c704ad\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数组属性</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">shape</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">dtype</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">ndim</span></code></li><li id=\"u516f069e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数组索引和切片</span></strong><span class=\"ne-text\">：和列表类似，但支持多维度操作，这是关键。</span></li><li id=\"uec4ee0bb\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数组操作</span></strong><span class=\"ne-text\">：形状变换 (</span><code class=\"ne-code\"><span class=\"ne-text\">reshape</span></code><span class=\"ne-text\">)、数组拼接 (</span><code class=\"ne-code\"><span class=\"ne-text\">concatenate</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">vstack</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">hstack</span></code><span class=\"ne-text\">)、数组分割 (</span><code class=\"ne-code\"><span class=\"ne-text\">split</span></code><span class=\"ne-text\">)</span></li><li id=\"ue99e26a4\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">通用函数 (ufunc)</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">np.sqrt()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.sin()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.exp()</span></code></li><li id=\"u1b1b88af\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">广播机制 (Broadcasting)</span></strong><span class=\"ne-text\">：这是一个重要概念，允许不同形状的数组进行数学运算。</span></li></ol></ol><ul class=\"ne-ul\"><li id=\"u7907edf8\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">如何练习</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ub07b95a3\" data-lake-index-type=\"0\"><span class=\"ne-text\">创建一个 1-9 的一维数组，将其变为 3x3 的二维数组。</span></li><li id=\"u8f4c4fd9\" data-lake-index-type=\"0\"><span class=\"ne-text\">从数组中提取所有偶数元素。</span></li><li id=\"u1c8fc621\" data-lake-index-type=\"0\"><span class=\"ne-text\">对两个不同形状的数组进行加减乘除运算，理解广播。</span></li></ul></ul><h4 id=\"vZawI\"><span class=\"ne-text\">阶段二：Pandas - 掌握数据处理的核心</span></h4><ul class=\"ne-ul\"><li id=\"u63f7209a\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">学习目标</span></strong><span class=\"ne-text\">：能熟练地用 </span><code class=\"ne-code\"><span class=\"ne-text\">Series</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">DataFrame</span></code><span class=\"ne-text\"> 进行数据清洗、转换和分析。</span></li><li id=\"u9ac0ec3e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">核心知识点</span></strong><span class=\"ne-text\">：</span></li></ul><ol class=\"ne-list-wrap\"><ol ne-level=\"1\" class=\"ne-ol\"><li id=\"ua0baa264\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">核心数据结构</span></strong><span class=\"ne-text\">：创建 </span><code class=\"ne-code\"><span class=\"ne-text\">Series</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">DataFrame</span></code><span class=\"ne-text\">（可以从字典、列表、NumPy数组创建）。</span></li><li id=\"u08a658f1\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据查看</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">head()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">tail()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">info()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">describe()</span></code></li><li id=\"u8b7822a5\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据索引和选择</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">iloc</span></code><span class=\"ne-text\"> (基于位置的索引), </span><code class=\"ne-code\"><span class=\"ne-text\">loc</span></code><span class=\"ne-text\"> (基于标签的索引)。</span><strong><span class=\"ne-text\">这是重中之重！</span></strong></li><li id=\"u59f50659\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">处理缺失值</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">isnull()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">dropna()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">fillna()</span></code></li><li id=\"u9346033d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据合并</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">concat()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">merge()</span></code><span class=\"ne-text\"> (类似SQL的JOIN)</span></li><li id=\"uc334afc1\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">分组和聚合</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">groupby()</span></code><span class=\"ne-text\"> 操作。这是数据分析的核心功能。</span></li><li id=\"uc78e2d78\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">应用函数</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">apply()</span></code><span class=\"ne-text\"> 方法，非常灵活强大。</span></li><li id=\"u3125d692\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">读写文件</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">read_csv()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">to_csv()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">read_excel()</span></code><span class=\"ne-text\"> 等。</span></li></ol></ol><ul class=\"ne-ul\"><li id=\"uf38b9d2c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">如何练习</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u9c46b762\" data-lake-index-type=\"0\"><span class=\"ne-text\">找一个 </span><code class=\"ne-code\"><span class=\"ne-text\">CSV</span></code><span class=\"ne-text\"> 文件（比如Kaggle上的泰坦尼克数据集 </span><code class=\"ne-code\"><span class=\"ne-text\">titanic.csv</span></code><span class=\"ne-text\">）。</span></li><li id=\"ue29d249b\" data-lake-index-type=\"0\"><span class=\"ne-text\">将其读入 Pandas。</span></li><li id=\"u1f72618e\" data-lake-index-type=\"0\"><span class=\"ne-text\">查看数据的基本信息、前几行。</span></li><li id=\"u3c070bd8\" data-lake-index-type=\"0\"><span class=\"ne-text\">筛选出特定条件的数据（例如，所有年龄大于30岁的女性）。</span></li><li id=\"u3bfe4e75\" data-lake-index-type=\"0\"><span class=\"ne-text\">计算某些列的平均值、总和（例如，不同舱位的平均票价）。</span></li><li id=\"udc1cc101\" data-lake-index-type=\"0\"><span class=\"ne-text\">处理缺失值（例如，用平均年龄填充年龄的缺失值）。</span></li></ul></ul><h4 id=\"V7TkH\"><span class=\"ne-text\">阶段三：Matplotlib - 让数据说话</span></h4><ul class=\"ne-ul\"><li id=\"u33945ebb\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">学习目标</span></strong><span class=\"ne-text\">：能够绘制常用图表，并对其进行基本美化。</span></li><li id=\"u5a85526e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">核心知识点</span></strong><span class=\"ne-text\">：</span></li></ul><ol class=\"ne-list-wrap\"><ol ne-level=\"1\" class=\"ne-ol\"><li id=\"u714d8beb\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">两种接口</span></strong><span class=\"ne-text\">：</span></li></ol></ol><ul class=\"ne-list-wrap\"><ul class=\"ne-list-wrap\"><ul ne-level=\"2\" class=\"ne-ul\"><li id=\"uff895955\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">MATLAB式接口</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">plt.plot()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">plt.scatter()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">plt.bar()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">plt.hist()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">plt.pie()</span></code><span class=\"ne-text\"> 等。</span><strong><span class=\"ne-text\">适合快速绘图</span></strong><span class=\"ne-text\">。</span></li><li id=\"uff523c9d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">面向对象接口</span></strong><span class=\"ne-text\">：先创建 </span><code class=\"ne-code\"><span class=\"ne-text\">Figure</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">Axes</span></code><span class=\"ne-text\"> 对象，再调用其方法（如 </span><code class=\"ne-code\"><span class=\"ne-text\">ax.plot()</span></code><span class=\"ne-text\">）。</span><strong><span class=\"ne-text\">更灵活，推荐掌握</span></strong><span class=\"ne-text\">。</span></li></ul></ul></ul><ol class=\"ne-list-wrap\"><ol start=\"2\" ne-level=\"1\" class=\"ne-ol\"><li id=\"ue8341325\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">图表元素设置</span></strong><span class=\"ne-text\">：设置标题 (</span><code class=\"ne-code\"><span class=\"ne-text\">set_title</span></code><span class=\"ne-text\">)、坐标轴标签 (</span><code class=\"ne-code\"><span class=\"ne-text\">set_xlabel</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">set_ylabel</span></code><span class=\"ne-text\">)、图例 (</span><code class=\"ne-code\"><span class=\"ne-text\">legend</span></code><span class=\"ne-text\">)、网格 (</span><code class=\"ne-code\"><span class=\"ne-text\">grid</span></code><span class=\"ne-text\">)。</span></li><li id=\"ue30e7281\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">子图</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">plt.subplots()</span></code><span class=\"ne-text\"> 创建多个子图。</span></li><li id=\"u907cae32\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">常用图表类型</span></strong><span class=\"ne-text\">：折线图、散点图、柱状图、直方图、饼图、箱线图。</span></li></ol></ol><ul class=\"ne-ul\"><li id=\"uc8b8d3a0\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">如何练习</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u992de982\" data-lake-index-type=\"0\"><span class=\"ne-text\">用之前 Pandas 处理好的数据绘图。</span></li><li id=\"ubc3e9fa1\" data-lake-index-type=\"0\"><span class=\"ne-text\">绘制不同舱位乘客数量的柱状图。</span></li><li id=\"u4d1f9f83\" data-lake-index-type=\"0\"><span class=\"ne-text\">绘制年龄和票价关系的散点图。</span></li><li id=\"u9c306078\" data-lake-index-type=\"0\"><span class=\"ne-text\">绘制年龄分布的直方图。</span></li><li id=\"u9ea17413\" data-lake-index-type=\"0\"><span class=\"ne-text\">在一个画布上创建 2x2 的子图，分别绘制不同的图表。</span></li></ul></ul><hr id=\"xJJ86\" class=\"ne-hr\"><h3 id=\"cxl8G\"><span class=\"ne-text\">实践项目：将三者融会贯通</span></h3><p id=\"u8707c685\" class=\"ne-p\"><span class=\"ne-text\">找一个你感兴趣的数据集（如电影数据、股票数据、电商销售数据），完成一个完整的</span><strong><span class=\"ne-text\">数据分析小项目</span></strong><span class=\"ne-text\">：</span></p><ol class=\"ne-ol\"><li id=\"ue0891d0c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据获取与加载</span></strong><span class=\"ne-text\">：用 Pandas 的 </span><code class=\"ne-code\"><span class=\"ne-text\">read_csv</span></code><span class=\"ne-text\"> 读取数据。</span></li><li id=\"ucda45eba\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据探索与清洗</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ucdc19fdd\" data-lake-index-type=\"0\"><span class=\"ne-text\">用 </span><code class=\"ne-code\"><span class=\"ne-text\">head()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">info()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">describe()</span></code><span class=\"ne-text\"> 查看数据。</span></li><li id=\"u1991e121\" data-lake-index-type=\"0\"><span class=\"ne-text\">用 </span><code class=\"ne-code\"><span class=\"ne-text\">isnull().sum()</span></code><span class=\"ne-text\"> 检查缺失值并处理。</span></li><li id=\"u31114747\" data-lake-index-type=\"0\"><span class=\"ne-text\">用 </span><code class=\"ne-code\"><span class=\"ne-text\">duplicated().sum()</span></code><span class=\"ne-text\"> 检查重复值并处理。</span></li></ul></ul><ol start=\"3\" class=\"ne-ol\"><li id=\"ub9cc53c2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据分析与计算</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ucb113a21\" data-lake-index-type=\"0\"><span class=\"ne-text\">使用 </span><code class=\"ne-code\"><span class=\"ne-text\">groupby</span></code><span class=\"ne-text\"> 进行分组聚合计算。</span></li><li id=\"u7591dd90\" data-lake-index-type=\"0\"><span class=\"ne-text\">使用 </span><code class=\"ne-code\"><span class=\"ne-text\">value_counts</span></code><span class=\"ne-text\"> 进行计数统计。</span></li><li id=\"ud9eb3017\" data-lake-index-type=\"0\"><span class=\"ne-text\">使用 </span><code class=\"ne-code\"><span class=\"ne-text\">sort_values</span></code><span class=\"ne-text\"> 进行排序。</span></li></ul></ul><ol start=\"4\" class=\"ne-ol\"><li id=\"ue802e4a9\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据可视化</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u4e6943fe\" data-lake-index-type=\"0\"><span class=\"ne-text\">使用 Matplotlib 将上一步分析出的关键信息用图表可视化。</span></li><li id=\"u2d03cc7e\" data-lake-index-type=\"0\"><span class=\"ne-text\">例如：销售额随时间变化的折线图、不同品类的销量柱状图、价格分布的直方图等。</span></li></ul></ul><ol start=\"5\" class=\"ne-ol\"><li id=\"uddd78531\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">得出结论</span></strong><span class=\"ne-text\">：根据你的分析和图表，用一两句话总结你的发现。</span></li></ol><p id=\"u3705234d\" class=\"ne-p\"><strong><span class=\"ne-text\">项目示例</span></strong><span class=\"ne-text\">：分析某电商“双十一”的销售数据，找出最畅销的商品类别、销售额随时间的变化趋势、不同地区消费者的购买力对比等。</span></p><hr id=\"Npq3h\" class=\"ne-hr\"><h3 id=\"P7xBC\"><span class=\"ne-text\">优质学习资源推荐</span></h3><ul class=\"ne-ul\"><li id=\"u87be7839\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">官方文档</span></strong><span class=\"ne-text\">（首选！）：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"udd8afc8f\" data-lake-index-type=\"0\"><a href=\"https://numpy.org/doc/stable/\" data-href=\"https://numpy.org/doc/stable/\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">NumPy 官方文档</span></a></li><li id=\"uc22bafde\" data-lake-index-type=\"0\"><a href=\"https://pandas.pydata.org/docs/\" data-href=\"https://pandas.pydata.org/docs/\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Pandas 官方文档</span></a></li><li id=\"u7814b68d\" data-lake-index-type=\"0\"><a href=\"https://matplotlib.org/stable/contents.html\" data-href=\"https://matplotlib.org/stable/contents.html\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Matplotlib 官方文档</span></a></li></ul></ul><ul class=\"ne-ul\"><li id=\"uc85bc7ef\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">书籍</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u32ad5c1f\" data-lake-index-type=\"0\"><span class=\"ne-text\">《利用Python进行数据分析》（Wes McKinney著）：Pandas之父写的，是经典入门书。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"uebbdf98f\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">在线教程/课程</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u3d39635a\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">B站</span></strong><span class=\"ne-text\">：搜索“NumPy Pandas 教程”，有大量高质量的免费视频（例如@莫烦Python、@跟李沐学AI等Up主的课程）。</span></li><li id=\"u8474817c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">Kaggle Learn</span></strong><span class=\"ne-text\">：有非常精炼的 </span><a href=\"https://www.kaggle.com/learn/pandas\" data-href=\"https://www.kaggle.com/learn/pandas\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Pandas</span></a><span class=\"ne-text\"> 和 </span><a href=\"https://www.kaggle.com/learn/data-visualization\" data-href=\"https://www.kaggle.com/learn/data-visualization\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">数据可视化</span></a><span class=\"ne-text\"> 微课程，边学边练。</span></li><li id=\"u14ccd127\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">廖雪峰的官方网站</span></strong><span class=\"ne-text\">：有基础的Pandas教程。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ud1725fc6\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">Cheat Sheet（速查表）</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u0f8b6607\" data-lake-index-type=\"0\"><span class=\"ne-text\">搜索 “NumPy Cheat Sheet&quot;, &quot;Pandas Cheat Sheet”, “Matplotlib Cheat Sheet”，把常用的表格下载下来，遇到忘记的函数随时查。</span></li></ul></ul><p id=\"u22a91630\" class=\"ne-p\"><span class=\"ne-text\">记住，</span><strong><span class=\"ne-text\">动手是学习编程的唯一捷径</span></strong><span class=\"ne-text\">。从今天起，就打开你的代码编辑器，跟着教程敲下第一行 </span><code class=\"ne-code\"><span class=\"ne-text\">import numpy as np</span></code><span class=\"ne-text\"> 吧！祝你学习愉快！</span></p></details>\n<details class=\"lake-collapse\"><summary id=\"u1ee17a10\"><span class=\"ne-text\">Q:我是一名大一新生，学过两年c＋＋，希望将来成为数据分析师或人工智能工程师，想要掌握python以及numpy，pandas，和Matplotlib，应该掌握到什么程度？</span></summary><p id=\"uef097ec8\" class=\"ne-p\"><span class=\"ne-text\">非常欣赏你在大一就有如此清晰的规划！拥有两年C++基础是一个</span><strong><span class=\"ne-text\">巨大的优势</span></strong><span class=\"ne-text\">，这意味着你已经掌握了扎实的编程思维（变量、循环、函数、指针、内存管理等），学习Python及其生态库会非常快。你的重点将不再是学习“编程”，而是学习“工具”和“领域知识”。</span></p><p id=\"u34bf6fc7\" class=\"ne-p\"><span class=\"ne-text\">针对你的目标（数据分析师/AI工程师），我对你需要掌握的Python、NumPy、Pandas和Matplotlib程度，分为 </span><strong><span class=\"ne-text\">“基础”、“熟练”、“进阶”</span></strong><span class=\"ne-text\"> 三个层级。你的目标应该是达到 </span><strong><span class=\"ne-text\">“熟练”</span></strong><span class=\"ne-text\"> 并向 </span><strong><span class=\"ne-text\">“进阶”</span></strong><span class=\"ne-text\"> 探索。</span></p><hr id=\"dkKx9\" class=\"ne-hr\"><h3 id=\"jIfHg\"><span class=\"ne-text\">总体定位：从“会用”到“精通”</span></h3><p id=\"u5997f9d1\" class=\"ne-p\"><span class=\"ne-text\">对于你的职业目标，不能停留在“知道怎么用”，而必须达到 </span><strong><span class=\"ne-text\">“能在项目中高效、可靠地解决实际问题”</span></strong><span class=\"ne-text\"> 的水平。你需要理解其核心概念和常用API，而不是死记硬背所有函数。</span></p><hr id=\"ONn27\" class=\"ne-hr\"><h3 id=\"OP06u\"><span class=\"ne-text\">分库掌握程度指南</span></h3><h4 id=\"p711m\"><span class=\"ne-text\">1. Python 本身</span></h4><ul class=\"ne-ul\"><li id=\"u889ae45e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">基础 (必须牢固掌握)</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u46da2688\" data-lake-index-type=\"0\"><span class=\"ne-text\">基本语法：变量、数据类型（整型、浮点、字符串、布尔）、操作符。</span></li><li id=\"u3f4d107d\" data-lake-index-type=\"0\"><span class=\"ne-text\">流程控制：</span><code class=\"ne-code\"><span class=\"ne-text\">if</span></code><span class=\"ne-text\">/</span><code class=\"ne-code\"><span class=\"ne-text\">elif</span></code><span class=\"ne-text\">/</span><code class=\"ne-code\"><span class=\"ne-text\">else</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">for</span></code><span class=\"ne-text\">/</span><code class=\"ne-code\"><span class=\"ne-text\">while</span></code><span class=\"ne-text\"> 循环。</span></li><li id=\"ud083071a\" data-lake-index-type=\"0\"><span class=\"ne-text\">核心数据结构：</span><strong><span class=\"ne-text\">列表、元组、字典、集合</span></strong><span class=\"ne-text\">。必须非常熟悉它们的创建、增删改查、迭代和方法。</span><strong><span class=\"ne-text\">字典尤其重要</span></strong><span class=\"ne-text\">。</span></li><li id=\"u20d4f2ce\" data-lake-index-type=\"0\"><span class=\"ne-text\">函数：定义、参数传递（位置参数、关键字参数、默认参数）、返回值、</span><code class=\"ne-code\"><span class=\"ne-text\">lambda</span></code><span class=\"ne-text\"> 匿名函数。</span></li><li id=\"u9b5a2259\" data-lake-index-type=\"0\"><span class=\"ne-text\">文件读写：</span><code class=\"ne-code\"><span class=\"ne-text\">open</span></code><span class=\"ne-text\"> 函数和 </span><code class=\"ne-code\"><span class=\"ne-text\">with</span></code><span class=\"ne-text\"> 语句。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"uc684a28d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">熟练 (核心要求)</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u014a3645\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">函数式编程基础</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">map</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">filter</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">reduce</span></code><span class=\"ne-text\"> 函数，以及列表推导式（超常用）。</span></li><li id=\"u6654041f\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">错误和异常处理</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">try...except...else...finally</span></code><span class=\"ne-text\">，能优雅地处理程序运行时可能出现的错误。</span></li><li id=\"ub7c6c241\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">面向对象编程 (OOP)</span></strong><span class=\"ne-text\">：由于你有C++基础，理解类、对象、继承、多态很容易。重点是熟悉Python的OOP语法（如 </span><code class=\"ne-code\"><span class=\"ne-text\">__init__</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">self</span></code><span class=\"ne-text\">）。</span></li><li id=\"udb56025d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">模块和包管理</span></strong><span class=\"ne-text\">：如何导入模块 (</span><code class=\"ne-code\"><span class=\"ne-text\">import</span></code><span class=\"ne-text\">)，如何使用 </span><code class=\"ne-code\"><span class=\"ne-text\">pip</span></code><span class=\"ne-text\"> 安装和管理第三方库。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ubc41bc9e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">进阶 (加分项)</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u9d92a76b\" data-lake-index-type=\"0\"><span class=\"ne-text\">装饰器、生成器、上下文管理器等高级特性。这些在框架开发中常用，在数据分析中了解即可。</span></li><li id=\"u0b493567\" data-lake-index-type=\"0\"><span class=\"ne-text\">并发编程（如多线程、多进程），在处理大规模数据时可能会用到。</span></li></ul></ul><h4 id=\"i0Ept\"><span class=\"ne-text\">2. NumPy</span></h4><ul class=\"ne-ul\"><li id=\"ue2b0c15b\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">基础 (必须牢固掌握)</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ud995129c\" data-lake-index-type=\"0\"><span class=\"ne-text\">理解NumPy的核心——</span><strong><span class=\"ne-text\">多维数组 (</span></strong><code class=\"ne-code\"><span class=\"ne-text\">ndarray</span></code><strong><span class=\"ne-text\">)</span></strong><span class=\"ne-text\">，以及它相比Python列表在性能上的巨大优势。</span></li><li id=\"ua40ab472\" data-lake-index-type=\"0\"><span class=\"ne-text\">熟练创建数组：</span><code class=\"ne-code\"><span class=\"ne-text\">np.array()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.arange()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.zeros()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.ones()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.random</span></code><span class=\"ne-text\"> 等。</span></li><li id=\"ucaa5fd13\" data-lake-index-type=\"0\"><span class=\"ne-text\">数组的索引和切片（包括布尔索引、花式索引）。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"u7660a338\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">熟练 (核心要求)</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ubc8d3ceb\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">向量化操作</span></strong><span class=\"ne-text\">：这是NumPy的灵魂！摒弃使用循环处理数组元素的思维，学会直接用数组进行数学运算（如 </span><code class=\"ne-code\"><span class=\"ne-text\">array * 2</span></code><span class=\"ne-text\">）。</span></li><li id=\"ue39d1234\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">通用函数 (ufunc)</span></strong><span class=\"ne-text\">：如 </span><code class=\"ne-code\"><span class=\"ne-text\">np.sqrt()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.sin()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.exp()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.log()</span></code><span class=\"ne-text\"> 等。</span></li><li id=\"u6969369f\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数组操作</span></strong><span class=\"ne-text\">：形状变换 (</span><code class=\"ne-code\"><span class=\"ne-text\">reshape</span></code><span class=\"ne-text\">)、拼接 (</span><code class=\"ne-code\"><span class=\"ne-text\">concatenate</span></code><span class=\"ne-text\">)、分割 (</span><code class=\"ne-code\"><span class=\"ne-text\">split</span></code><span class=\"ne-text\">)、转置 (</span><code class=\"ne-code\"><span class=\"ne-text\">T</span></code><span class=\"ne-text\">)。</span></li><li id=\"uad061551\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">广播机制 (Broadcasting)</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">必须深刻理解并会用</span></strong><span class=\"ne-text\">。这是理解后续Pandas和AI库操作的基础。</span></li><li id=\"u91041a72\" data-lake-index-type=\"0\"><span class=\"ne-text\">常用的数学和统计函数：</span><code class=\"ne-code\"><span class=\"ne-text\">np.sum()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.mean()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.std()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.max()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">np.min()</span></code><span class=\"ne-text\">，并掌握 </span><code class=\"ne-code\"><span class=\"ne-text\">axis</span></code><span class=\"ne-text\"> 参数的概念。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"u269c6cc7\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">进阶 (加分项)</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ub3c86854\" data-lake-index-type=\"0\"><span class=\"ne-text\">数组在内存中的布局。</span></li><li id=\"u8d1b0db1\" data-lake-index-type=\"0\"><span class=\"ne-text\">使用 </span><code class=\"ne-code\"><span class=\"ne-text\">strides</span></code><span class=\"ne-text\"> 进行高级操作。</span></li><li id=\"u95fbefa0\" data-lake-index-type=\"0\"><span class=\"ne-text\">与C++代码的交互（如Cython）。</span></li></ul></ul><h4 id=\"sNcio\"><span class=\"ne-text\">3. Pandas</span></h4><ul class=\"ne-ul\"><li id=\"u9c00cfee\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">基础 (必须牢固掌握)</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ufb44937b\" data-lake-index-type=\"0\"><span class=\"ne-text\">理解两个核心数据结构：</span><code class=\"ne-code\"><span class=\"ne-text\">Series</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">DataFrame</span></code><span class=\"ne-text\">。</span></li><li id=\"u521da918\" data-lake-index-type=\"0\"><span class=\"ne-text\">数据读取与输出：</span><code class=\"ne-code\"><span class=\"ne-text\">pd.read_csv()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">pd.read_excel()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">.to_csv()</span></code><span class=\"ne-text\">。能处理不同的编码格式。</span></li><li id=\"ue8e8053f\" data-lake-index-type=\"0\"><span class=\"ne-text\">数据查看：</span><code class=\"ne-code\"><span class=\"ne-text\">head()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">tail()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">info()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">describe()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">shape</span></code><span class=\"ne-text\">。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"u3121fdfe\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">熟练 (核心要求)</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">这是数据分析师吃饭的家伙，必须极其熟练！</span></strong></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ueb4593a7\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据选择</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">绝对精通 </span></strong><code class=\"ne-code\"><span class=\"ne-text\">.loc</span></code><strong><span class=\"ne-text\"> (基于标签) 和 </span></strong><code class=\"ne-code\"><span class=\"ne-text\">.iloc</span></code><strong><span class=\"ne-text\"> (基于位置) 索引器</span></strong><span class=\"ne-text\">。</span></li><li id=\"u4297fb5a\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据清洗</span></strong><span class=\"ne-text\">：</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul class=\"ne-list-wrap\"><ul ne-level=\"2\" class=\"ne-ul\"><li id=\"u2d2e7e59\" data-lake-index-type=\"0\"><span class=\"ne-text\">处理缺失值：</span><code class=\"ne-code\"><span class=\"ne-text\">isnull()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">dropna()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">fillna()</span></code><span class=\"ne-text\">。</span></li><li id=\"u63ebbd7e\" data-lake-index-type=\"0\"><span class=\"ne-text\">处理重复值：</span><code class=\"ne-code\"><span class=\"ne-text\">duplicated()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">drop_duplicates()</span></code><span class=\"ne-text\">。</span></li><li id=\"u6586a031\" data-lake-index-type=\"0\"><span class=\"ne-text\">字符串处理：</span><code class=\"ne-code\"><span class=\"ne-text\">.str</span></code><span class=\"ne-text\"> 访问器下的方法（如 </span><code class=\"ne-code\"><span class=\"ne-text\">contains</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">replace</span></code><span class=\"ne-text\">）。</span></li></ul></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u16035994\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据转换</span></strong><span class=\"ne-text\">：</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul class=\"ne-list-wrap\"><ul ne-level=\"2\" class=\"ne-ul\"><li id=\"u3ca27b08\" data-lake-index-type=\"0\"><span class=\"ne-text\">行列转换：</span><code class=\"ne-code\"><span class=\"ne-text\">set_index()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">reset_index()</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">melt()</span></code><span class=\"ne-text\">。</span></li><li id=\"ub15530b9\" data-lake-index-type=\"0\"><span class=\"ne-text\">应用函数：</span><code class=\"ne-code\"><span class=\"ne-text\">apply()</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">applymap()</span></code><span class=\"ne-text\"> 方法。</span></li><li id=\"u64434731\" data-lake-index-type=\"0\"><span class=\"ne-text\">合并数据：</span><code class=\"ne-code\"><span class=\"ne-text\">pd.concat()</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">pd.merge()</span></code><span class=\"ne-text\">（后者类似SQL的JOIN，必须掌握）。</span></li></ul></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u4b683245\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据分组与聚合</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">这是核心中的核心！</span></strong><span class=\"ne-text\"> 深刻理解并熟练运用 </span><code class=\"ne-code\"><span class=\"ne-text\">groupby()</span></code><span class=\"ne-text\"> 操作。能进行多种聚合操作（如 </span><code class=\"ne-code\"><span class=\"ne-text\">.agg(['mean', 'std'])</span></code><span class=\"ne-text\">）。</span></li><li id=\"uf3af3a47\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">时间序列</span></strong><span class=\"ne-text\">：处理时间数据 </span><code class=\"ne-code\"><span class=\"ne-text\">pd.to_datetime()</span></code><span class=\"ne-text\">，以及时间序列的重采样 </span><code class=\"ne-code\"><span class=\"ne-text\">resample()</span></code><span class=\"ne-text\">。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ub7af9760\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">进阶 (加分项)</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u19a50412\" data-lake-index-type=\"0\"><span class=\"ne-text\">性能优化：</span><code class=\"ne-code\"><span class=\"ne-text\">eval()</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">query()</span></code><span class=\"ne-text\"> 函数。</span></li><li id=\"ubb9bf3b4\" data-lake-index-type=\"0\"><span class=\"ne-text\">自定义窗口函数（用于滚动计算）。</span></li><li id=\"ue5efe3ab\" data-lake-index-type=\"0\"><span class=\"ne-text\">与数据库的交互（如 </span><code class=\"ne-code\"><span class=\"ne-text\">sqlalchemy</span></code><span class=\"ne-text\">）。</span></li></ul></ul><h4 id=\"aeApX\"><span class=\"ne-text\">4. Matplotlib &amp; Seaborn</span></h4><ul class=\"ne-ul\"><li id=\"uecc89a60\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">基础 (必须牢固掌握)</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u68a2c6d9\" data-lake-index-type=\"0\"><span class=\"ne-text\">理解两种接口：MATLAB式的 </span><code class=\"ne-code\"><span class=\"ne-text\">pyplot</span></code><span class=\"ne-text\"> 接口（</span><code class=\"ne-code\"><span class=\"ne-text\">plt.plot(...)</span></code><span class=\"ne-text\">）和更灵活的面向对象接口（</span><code class=\"ne-code\"><span class=\"ne-text\">fig, ax = plt.subplots()</span></code><span class=\"ne-text\">）。</span><strong><span class=\"ne-text\">建议主力使用面向对象接口</span></strong><span class=\"ne-text\">。</span></li><li id=\"u6d72c33c\" data-lake-index-type=\"0\"><span class=\"ne-text\">会画基本图表：折线图 (</span><code class=\"ne-code\"><span class=\"ne-text\">plot</span></code><span class=\"ne-text\">)、散点图 (</span><code class=\"ne-code\"><span class=\"ne-text\">scatter</span></code><span class=\"ne-text\">)、柱状图 (</span><code class=\"ne-code\"><span class=\"ne-text\">bar</span></code><span class=\"ne-text\">/</span><code class=\"ne-code\"><span class=\"ne-text\">barh</span></code><span class=\"ne-text\">)、直方图 (</span><code class=\"ne-code\"><span class=\"ne-text\">hist</span></code><span class=\"ne-text\">)、饼图 (</span><code class=\"ne-code\"><span class=\"ne-text\">pie</span></code><span class=\"ne-text\">)。</span></li><li id=\"u4a452219\" data-lake-index-type=\"0\"><span class=\"ne-text\">会添加基本元素：标题、坐标轴标签、图例、网格。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ua8b8a6b0\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">熟练 (核心要求)</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u187bbcfb\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">子图操作</span></strong><span class=\"ne-text\">：使用 </span><code class=\"ne-code\"><span class=\"ne-text\">plt.subplots()</span></code><span class=\"ne-text\"> 创建和管理多个子图。</span></li><li id=\"ube35f8cc\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">全面掌控图表样式</span></strong><span class=\"ne-text\">：能熟练设置颜色、线条样式、标记、刻度、字体等所有可视化元素。</span></li><li id=\"uc4f8eb0c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">Seaborn</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">必须掌握</span></strong><span class=\"ne-text\">。这是一个基于Matplotlib的高级库，能用更简洁的语法绘制出更美观、信息更丰富的统计图表（如分布图 </span><code class=\"ne-code\"><span class=\"ne-text\">distplot</span></code><span class=\"ne-text\">、箱线图 </span><code class=\"ne-code\"><span class=\"ne-text\">boxplot</span></code><span class=\"ne-text\">、热力图 </span><code class=\"ne-code\"><span class=\"ne-text\">heatmap</span></code><span class=\"ne-text\">、 pairplot等）。</span></li><li id=\"u8dba5cb9\" data-lake-index-type=\"0\"><span class=\"ne-text\">能够将Pandas DataFrame 与 Matplotlib/Seaborn 无缝衔接，常用 </span><code class=\"ne-code\"><span class=\"ne-text\">df.plot()</span></code><span class=\"ne-text\"> 进行快速绘图。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ud2c18f29\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">进阶 (加分项)</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ufc239046\" data-lake-index-type=\"0\"><span class=\"ne-text\">交互式可视化：学习 </span><code class=\"ne-code\"><span class=\"ne-text\">Plotly</span></code><span class=\"ne-text\"> 库。</span></li><li id=\"ua75c02c5\" data-lake-index-type=\"0\"><span class=\"ne-text\">制作动画。</span></li><li id=\"u615caa21\" data-lake-index-type=\"0\"><span class=\"ne-text\">发布高质量的可视化作品。</span></li></ul></ul><h3 id=\"bHVJA\"><span class=\"ne-text\">给你的学习路径建议</span></h3><ol class=\"ne-ol\"><li id=\"ub97476df\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">快速入门Python</span></strong><span class=\"ne-text\">：利用你的C++基础，一周内过完Python基础语法。重点熟悉列表、字典和函数。</span></li><li id=\"ua664045c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">征服NumPy</span></strong><span class=\"ne-text\">：花1-2周时间，理解数组、向量化和广播。这是地基。</span></li><li id=\"uccd6c929\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">主攻Pandas</span></strong><span class=\"ne-text\">：这是你未来最常用的工具，花1-2个月时间，</span><strong><span class=\"ne-text\">以项目驱动学习</span></strong><span class=\"ne-text\">。找几个数据集（如泰坦尼克、电影评分、共享单车数据）从头到尾操作一遍。</span></li><li id=\"u0a6e9bdc\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">可视化</span></strong><span class=\"ne-text\">：与Pandas同步学习Matplotlib和Seaborn，学完Pandas的某个操作后，立刻尝试用图表把它展示出来。</span></li><li id=\"ue81a8d38\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">项目实践</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ud6fa1ba8\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据分析项目</span></strong><span class=\"ne-text\">：在Kaggle上找一个入门级比赛（如Titanic: Machine Learning from Disaster），完整地走一遍数据清洗、探索性数据分析（EDA）、特征工程和建模的流程。</span></li><li id=\"ue27dd3e4\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">AI方向拓展</span></strong><span class=\"ne-text\">：在打好上述基础后，开始学习 </span><strong><span class=\"ne-text\">Scikit-learn</span></strong><span class=\"ne-text\">（机器学习库），然后逐步过渡到 </span><strong><span class=\"ne-text\">PyTorch/TensorFlow</span></strong><span class=\"ne-text\">（深度学习框架）。同时，</span><strong><span class=\"ne-text\">必须加强数学基础</span></strong><span class=\"ne-text\">（线性代数、概率论、微积分）。</span></li></ul></ul><p id=\"u384e9795\" class=\"ne-p\"><strong><span class=\"ne-text\">总结</span></strong><span class=\"ne-text\">：对于你来说，</span><strong><span class=\"ne-text\">Pandas的熟练度是区分业余和专业的关键</span></strong><span class=\"ne-text\">。你的C++背景让你有潜力理解得更深（比如内存管理、性能瓶颈）。不要满足于能跑通代码，要多思考“为什么这样设计”、“有没有更高效的方法”。祝你学有所成！</span></p></details>\n### 选择合适的学习资源与工具\n自己已经自学了一段时间Python了，由于自己没有将各种渠道的内容进行比较，导致没有找到适合自己的学习方式，之前一直处于“试错”阶段，盘点一下至今已经试过的方法：\n\nB站的各种免费教程（各种方向都会简单涉及）\n\n菜鸟教程（[https://www.runoob.com/](https://www.runoob.com/)）（文档阅读获取信息的效率更高）\n\nCS61A（视频来自B站，资料来自[https://www.learncs.site/](https://www.learncs.site/),可能对新手难度有些高，似乎CS50X会更友好些）\n\n<details class=\"lake-collapse\"><summary id=\"u83b01b1c\"><span class=\"ne-text\">CS61A</span></summary><p id=\"u364196e9\" class=\"ne-p\"><span class=\"ne-text\">原谅我才疏学浅，只会引用他人和ds的评价来表达我的赞美之情：</span></p><p id=\"uaeb4f1f0\" class=\"ne-p\"><a href=\"https://csdiy.wiki/\" data-href=\"https://csdiy.wiki/\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://csdiy.wiki/</span></a><span class=\"ne-text\">  感谢子奇学长的推荐！</span></p><p id=\"ubf5be747\" class=\"ne-p\"><span class=\"ne-text\">DS:</span></p><p id=\"uf677bbc4\" class=\"ne-p\"><span class=\"ne-text\">太棒了！CS61A 是一门世界顶级的编程入门课程，它能真正教你“像计算机科学家一样思考”。学好它绝对会让你脱胎换骨，但过程也确实充满挑战。我来为你拆解一下如何高效学习，以及如何对待各个部分。</span></p><h3 id=\"NbBHi\"><span class=\"ne-text\">核心哲学：CS61A 学的是什么？</span></h3><p id=\"u3ad4a49f\" class=\"ne-p\"><span class=\"ne-text\">首先，不要把这门课当成“学Python的课”。Python只是工具。这门课的核心是教你</span><strong><span class=\"ne-text\">计算的核心概念</span></strong><span class=\"ne-text\">，主要包括：</span></p><ol class=\"ne-ol\"><li id=\"u1afeb1a2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">抽象</span></strong><span class=\"ne-text\">：如何用函数、数据、对象构建复杂系统，同时隐藏细节。</span></li><li id=\"u571258de\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">递归</span></strong><span class=\"ne-text\"> 和 </span><strong><span class=\"ne-text\">声明式编程</span></strong><span class=\"ne-text\">：不仅是如何写递归函数，更是一种解决问题的思维方式。</span></li><li id=\"ud99d4f46\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">解释器</span></strong><span class=\"ne-text\"> 和 </span><strong><span class=\"ne-text\">编程语言如何工作</span></strong><span class=\"ne-text\">：通过自己实现一个解释器，深刻理解环境模型、求值规则等。</span></li></ol><p id=\"uc161614a\" class=\"ne-p\"><span class=\"ne-text\">你的目标不是完成作业，而是</span><strong><span class=\"ne-text\">内化这些思想</span></strong><span class=\"ne-text\">。</span></p><hr id=\"CkjHi\" class=\"ne-hr\"><h3 id=\"clU6m\"><span class=\"ne-text\">一、 如何学习 CS61A？—— 学习流</span></h3><p id=\"u41f05383\" class=\"ne-p\"><span class=\"ne-text\">一个高效的学习流程（The Cycle）应该是这样的：</span></p><ol class=\"ne-ol\"><li id=\"u01a413f3\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">课前预习（Before Lecture）</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u328ccca1\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">必做</span></strong><span class=\"ne-text\">：快速浏览当天要讲的课程笔记（Notes）。不用完全看懂，目的是带着问题去听课。</span></li><li id=\"u4eeb338d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">选做</span></strong><span class=\"ne-text\">：如果时间充裕，可以看一下对应的课本章节（</span><em><span class=\"ne-text\">Composing Programs</span></em><span class=\"ne-text\">），书上的解释通常更细致。</span></li></ul></ul><ol start=\"2\" class=\"ne-ol\"><li id=\"uc3015dad\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">上课听讲（Lecture）</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uc820dec1\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">紧跟思路</span></strong><span class=\"ne-text\">：教授（DeNero 等）的板书和逻辑链条非常精彩。不要只顾着抄代码，关键是听懂他</span><strong><span class=\"ne-text\">为什么</span></strong><span class=\"ne-text\">要这样设计，背后的概念是什么。</span></li><li id=\"u5af53de9\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">积极思考</span></strong><span class=\"ne-text\">：遇到课堂提问（比如 Polling 问题），即使不在现场也要自己先想一个答案，再看教授的解答。</span></li></ul></ul><ol start=\"3\" class=\"ne-ol\"><li id=\"u0be01000\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">课后复习（After Lecture）</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ubde709ea\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">重写代码</span></strong><span class=\"ne-text\">：把 lecture 里的关键代码自己重新写一遍，确保理解每一行。</span></li><li id=\"u97d64242\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">完成阅读</span></strong><span class=\"ne-text\">：仔细阅读对应的课程笔记和课本章节，解决预习和听课时留下的疑问。</span></li></ul></ul><ol start=\"4\" class=\"ne-ol\"><li id=\"u9589e381\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">实践应用（Practice）</span></strong><span class=\"ne-text\">：这就是 Discussion, Lab, Homework 的作用了。</span></li></ol><hr id=\"SejYs\" class=\"ne-hr\"><h3 id=\"CfH8O\"><span class=\"ne-text\">二、 Discussion, Lab, Homework 怎么看 &amp; 怎么用？</span></h3><p id=\"uec52322c\" class=\"ne-p\"><span class=\"ne-text\">这三者是巩固知识、应用实践的核心环节，环环相扣。</span></p><h4 id=\"Tmq8i\"><span class=\"ne-text\">1. Discussion Section</span></h4><ul class=\"ne-ul\"><li id=\"u141ec757\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">它是什么？</span></strong><span class=\"ne-text\"> 通常由助教带领，回顾一周的重要概念，讲解典型的例题和问题。</span></li><li id=\"u567ff149\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">怎么看？</span></strong></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u0dbb0380\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">黄金资料</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">Discussion 讲义（Worksheet）是这门课最重要的复习资料之一！</span></strong><span class=\"ne-text\"> 上面的题目都是精挑细选的，直接针对核心考点和难点。</span></li><li id=\"ue6501e4c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">使用方法</span></strong><span class=\"ne-text\">：</span></li></ul></ul><ol class=\"ne-list-wrap\"><ol class=\"ne-list-wrap\"><ol ne-level=\"2\" class=\"ne-ol\"><li id=\"ub61118aa\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">先自己做！</span></strong><span class=\"ne-text\"> 在Discussion课前，尝试自己解答讲义上的题目。卡住的地方就是你的知识盲点。</span></li><li id=\"ubd78870f\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">带着问题去听</span></strong><span class=\"ne-text\">：听助教讲解时，重点听你的卡点以及助教的解题思路。</span></li><li id=\"u4f413f9f\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">复习神器</span></strong><span class=\"ne-text\">：考前复习时，把所有Discussion讲义上的题目重新做一遍，比刷任何其他题都管用。</span></li></ol></ol></ol><h4 id=\"YA1l6\"><span class=\"ne-text\">2. Lab</span></h4><ul class=\"ne-ul\"><li id=\"udec909ff\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">它是什么？</span></strong><span class=\"ne-text\"> 动手编程的实践环节。通常是结对编程，有助教在现场帮忙。难度通常低于Homework。</span></li><li id=\"u68bf6693\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">怎么看？</span></strong></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u0dd1215f\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">最佳练习场</span></strong><span class=\"ne-text\">：这是你</span><strong><span class=\"ne-text\">无痛实践</span></strong><span class=\"ne-text\">新学概念的地方。没有时间压力，有同伴和助教可以立即求助。</span></li><li id=\"u8cb5ddae\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">使用方法</span></strong><span class=\"ne-text\">：</span></li></ul></ul><ol class=\"ne-list-wrap\"><ol class=\"ne-list-wrap\"><ol ne-level=\"2\" class=\"ne-ol\"><li id=\"udaea752c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">务必亲自做！</span></strong><span class=\"ne-text\"> 绝对不要直接抄答案。哪怕一开始毫无头绪，也要先和伙伴讨论，尝试写一些代码。</span></li><li id=\"u4693f84b\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">理解错误</span></strong><span class=\"ne-text\">：Lab是让你犯错误并学会调试的最佳场所。充分利用现场的助教资源。</span></li><li id=\"u7926bb91\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">巩固基础</span></strong><span class=\"ne-text\">：Lab题目 often 考察的是最基础、最核心的概念（如环境图、递归、树处理），把这些基础打牢，Homework和Project才会轻松。</span></li></ol></ol></ol><h4 id=\"i0jPA\"><span class=\"ne-text\">3. Homework</span></h4><ul class=\"ne-ul\"><li id=\"u2fd797d9\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">它是什么？</span></strong><span class=\"ne-text\"> 更具挑战性的编程作业，通常需要综合运用本周甚至之前学到的多个概念。</span></li><li id=\"ub397d208\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">怎么看？</span></strong></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uf8e951c6\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">综合能力检验</span></strong><span class=\"ne-text\">：Homework的目的是逼你进行更深层次的思考，将分散的知识点串联起来。</span></li><li id=\"u78e74c29\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">使用方法</span></strong><span class=\"ne-text\">：</span></li></ul></ul><ol class=\"ne-list-wrap\"><ol class=\"ne-list-wrap\"><ol ne-level=\"2\" class=\"ne-ol\"><li id=\"u44dad225\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">尽早开始！</span></strong><span class=\"ne-text\"> Homework通常耗时较长，千万不要拖到截止日期前一晚。</span></li><li id=\"uff6e40a7\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">利用好自动评分器</span></strong><span class=\"ne-text\">：提交代码前先在本地测试，通过</span><code class=\"ne-code\"><span class=\"ne-text\">ok</span></code><span class=\"ne-text\">命令测试用例。但要注意，</span><strong><span class=\"ne-text\">通过测试不等于理解透彻</span></strong><span class=\"ne-text\">。要确保你明白每个测试用例背后的意图。</span></li><li id=\"u8bacb0ac\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">讨论</span></strong><span class=\"ne-text\">：课程允许（甚至鼓励）与同学讨论思路，但</span><strong><span class=\"ne-text\">代码必须自己写</span></strong><span class=\"ne-text\">。这是学术诚信的红线。和别人聊完天后，一定要自己离开电脑，重新独立写出来。</span></li></ol></ol></ol><h4 id=\"ALCfO\"><span class=\"ne-text\">4. Project</span></h4><ul class=\"ne-ul\"><li id=\"u54dad5cf\" data-lake-index-type=\"0\"><span class=\"ne-text\">虽然你没问，但这是CS61A的重头戏。</span></li><li id=\"u2f265056\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">它是什么？</span></strong><span class=\"ne-text\"> 大型编程项目（如蚂蚁大战蜜蜂、Scheme解释器）。工作量巨大，极具挑战性也极具成就感。</span></li><li id=\"u5d957071\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">策略</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ud449673d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">绝对不要拖延！</span></strong><span class=\"ne-text\"> 一发布就马上开始看要求。</span></li><li id=\"ub7182f3a\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">分解任务</span></strong><span class=\"ne-text\">：仔细阅读说明，把大项目分解成一个个小步骤，逐个击破。</span></li><li id=\"u50e5edd2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">充分利用调试工具</span></strong><span class=\"ne-text\">和 </span><strong><span class=\"ne-text\">答疑平台</span></strong><span class=\"ne-text\">。</span></li></ul></ul><hr id=\"Jhhs0\" class=\"ne-hr\"><h3 id=\"XoiFU\"><span class=\"ne-text\">三、 其他至关重要的资源</span></h3><ol class=\"ne-ol\"><li id=\"u81c979f4\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">课程网站</span></strong><span class=\"ne-text\">：你的指挥中心。所有通知、资料、作业都在上面。</span></li><li id=\"ucc00762a\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">Piazza / Ed Stem</span></strong><span class=\"ne-text\">：课程论坛。</span><strong><span class=\"ne-text\">有问题就上去问！</span></strong><span class=\"ne-text\"> 你遇到的问题别人很可能也遇到了。多看多问，助教和教授都会非常活跃地解答。</span></li><li id=\"ub9c89559\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">Office Hours</span></strong><span class=\"ne-text\">：助教和教授的答疑时间。如果你一个问题卡了超过30分钟，就带着你的代码和具体问题去OH吧。这是你获得一对一帮助的最佳机会。</span></li></ol><h3 id=\"znN4i\"><span class=\"ne-text\">总结与心态</span></h3><ul class=\"ne-ul\"><li id=\"u38ff1a29\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">顺序</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">预习 -&gt; Lecture -&gt; 复习 -&gt; Discussion -&gt; Lab -&gt; Homework -&gt; Project</span></code></li><li id=\"u83040926\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">核心</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">理解重于代码</span></strong><span class=\"ne-text\">。能解释清楚代码为什么这样写，比单纯通过测试更重要。</span></li><li id=\"u7bb41f49\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">心态</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u2c62c100\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">接受挣扎</span></strong><span class=\"ne-text\">：学这门课感到困惑和挫折是完全正常的。这是大脑在成长的标志。</span></li><li id=\"uddec245a\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">寻求帮助</span></strong><span class=\"ne-text\">：不要一个人闷头苦干，充分利用教学资源。</span></li><li id=\"ua914985d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">享受过程</span></strong><span class=\"ne-text\">：当你最终靠自己调试出一个复杂bug，或者看到自己写的解释器成功运行时，那种巨大的成就感是无与伦比的。</span></li></ul></ul><p id=\"uaff080cd\" class=\"ne-p\"><span class=\"ne-text\">祝你学习顺利，在CS61A的旅程中收获满满！这是一门能让你受益整个职业生涯的课程。</span></p></details>\n### 建立反馈与评估机制\n现状就是：在自己看CS61A录课和写作业，途中的。看菜鸟教程学numpy,pandas和Matplotlib，自己做一些有意思的事，后面可能要找一些项目来检验学习成果。\n\n\n\n2025.9.21 19:41第一次编辑\n\n## 分支2：探索在AI的辅助下学习Python的可行性\n### 分支2.1&分支2.2：使用AI进行一次Debug、使用AI生成作业的代码\n来自CS61A Homework2 Q3\n\n```python\nImplement the function make_repeater that takes a one-argument function f and a \npositive integer n. It returns a one-argument function, where make_repeater(f, n)(x) \nreturns the value of f(f(...f(x)...)) in which f is applied n times to x. \nFor example, make_repeater(square, 3)(5) squares 5 three times and returns 390625, \njust like square(square(square(5))).\n\ndef make_repeater(f, n):\n    \"\"\"Returns the function that computes the nth application of f.\n\n    >>> add_three = make_repeater(increment, 3)\n    >>> add_three(5)\n    8\n    >>> make_repeater(triple, 5)(1) # 3 * 3 * 3 * 3 * 3 * 1\n    243\n    >>> make_repeater(square, 2)(5) # square(square(5))\n    625\n    >>> make_repeater(square, 3)(5) # square(square(square(5)))\n    390625\n    \"\"\"\n```\n\n我的实现：\n\n```python\nfrom itertools import product\nfrom operator import add, mul\n\nsquare = lambda x: x * x\nidentity = lambda x: x\ntriple = lambda x: 3 * x\nincrement = lambda x: x + 1\n\ndef make_repeater(f, n):\n    if n == 0:\n        return f\n    else:\n        return f(make_repeater(f, n - 1))\n\nprint(make_repeater(triple, 1)(1))     \n```\n\n```python\n    triple = lambda x: 3 * x\n                       ~~^~~\nTypeError: unsupported operand type(s) for *: 'int' and 'function'\n```\n\n<details class=\"lake-collapse\"><summary id=\"u6559f19e\"><span class=\"ne-text\">Q:代码改进建议</span></summary><p id=\"udfa2239d\" class=\"ne-p\"><span class=\"ne-text\">您的代码中有一个小错误：当 </span><code class=\"ne-code\"><span class=\"ne-text\">n == 0</span></code><span class=\"ne-text\"> 时不应该返回 </span><code class=\"ne-code\"><span class=\"ne-text\">f</span></code><span class=\"ne-text\">，而应该返回恒等函数 </span><code class=\"ne-code\"><span class=\"ne-text\">identity</span></code><span class=\"ne-text\">。让我来修正并改进这个实现：</span></p><pre data-language=\"python\" id=\"wJAO7\" class=\"ne-codeblock language-python\"><code>from itertools import product\nfrom operator import add, mul\n\nsquare = lambda x: x * x\nidentity = lambda x: x\ntriple = lambda x: 3 * x\nincrement = lambda x: x + 1\n\ndef make_repeater(f, n):\n    if n == 0:\n        return identity  # 修正：n=0时应该返回恒等函数\n    else:\n        return lambda x: f(make_repeater(f, n - 1)(x))\n\n# 更简洁的迭代实现版本\ndef make_repeater_iterative(f, n):\n    &quot;&quot;&quot;迭代版本的实现&quot;&quot;&quot;\n    def repeated(x):\n        result = x\n        for _ in range(n):\n            result = f(result)\n        return result\n    return repeated\n\n# 测试\nif __name__ == &quot;__main__&quot;:\n    # 测试递归版本\n    print(make_repeater(triple, 1)(1))  # 应该输出 3\n    print(make_repeater(triple, 0)(5))  # 应该输出 5 (恒等函数)\n    print(make_repeater(increment, 3)(5))  # 应该输出 8\n    \n    # 测试迭代版本\n    print(make_repeater_iterative(triple, 1)(1))  # 应该输出 3\n    print(make_repeater_iterative(triple, 0)(5))  # 应该输出 5\n    print(make_repeater_iterative(increment, 3)(5))  # 应该输出 8</code></pre><p id=\"u0368ebca\" class=\"ne-p\"><strong><span class=\"ne-text\">主要改进：</span></strong></p><ol class=\"ne-ol\"><li id=\"u9c94f70d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">修正了边界条件</span></strong><span class=\"ne-text\">：当 </span><code class=\"ne-code\"><span class=\"ne-text\">n == 0</span></code><span class=\"ne-text\"> 时返回 </span><code class=\"ne-code\"><span class=\"ne-text\">identity</span></code><span class=\"ne-text\"> 而不是 </span><code class=\"ne-code\"><span class=\"ne-text\">f</span></code></li><li id=\"u4539344e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">提供了迭代版本</span></strong><span class=\"ne-text\">：迭代实现通常更高效且不会遇到递归深度限制</span></li><li id=\"u9a6986a1\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">改进了lambda表达式</span></strong><span class=\"ne-text\">：确保递归调用正确嵌套</span></li><li id=\"u0a822219\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">添加了测试代码</span></strong><span class=\"ne-text\">：验证函数在各种情况下的正确性</span></li></ol><p id=\"u86e987d0\" class=\"ne-p\"><strong><span class=\"ne-text\">选择建议：</span></strong></p><ul class=\"ne-ul\"><li id=\"u89a74065\" data-lake-index-type=\"0\"><span class=\"ne-text\">如果 </span><code class=\"ne-code\"><span class=\"ne-text\">n</span></code><span class=\"ne-text\"> 可能很大，使用迭代版本避免递归深度限制</span></li><li id=\"u5a9c0702\" data-lake-index-type=\"0\"><span class=\"ne-text\">如果 </span><code class=\"ne-code\"><span class=\"ne-text\">n</span></code><span class=\"ne-text\"> 很小，递归版本更简洁直观</span></li></ul><p id=\"uff6c0f0e\" class=\"ne-p\"><span class=\"ne-text\">两个版本在功能上是等价的，但迭代版本在性能和大输入情况下更可靠。</span></p></details>\n~~Debug的比较早，还没有认真反思，未完待续...~~\n\n迭代版本很容易理解，递归方法仔细分析也可以理解。理解之后应该要更进一步，分析自己出错的原因。\n\n再稍微分析一下就能发现：f 的参数应该是整数，而我的表达式中 f 的参数是函数，所以出错了\n\n如何让 f 中函数变成数值呢？还是不会，让ds又写了一个版本\n\n```python\ndef make_repeater(f, n):\n    def repeater(x):\n        if n == 1:\n            return f(x)\n        else:\n            return f(make_repeater(f, n-1)(x))\n    \n    return repeater\n```\n\n理解：先让内函数进行计算，再返回内函数。\n\n这是否是一个通法：内函数正常写就可以，再返回内函数？\n\n### 分支2.4：解析代码\n来自CS61A Lecture8\n\n```python\ndef pirate(arggg): \n    print(“matey”) \n    def plunder(arggg): \n        return arggg \n        return plunder\n\npirate(pirate(pirate))(abs)(7)\n```\n\n<details class=\"lake-collapse\"><summary id=\"u63397b5d\"><span class=\"ne-text\">Q:解释运行过程</span></summary><p id=\"u3634b0e1\" class=\"ne-p\"><span class=\"ne-text\">我们来逐步分析这段代码的运行过程：</span></p><ol class=\"ne-ol\"><li id=\"u9f146b83\" data-lake-index-type=\"0\"><span class=\"ne-text\">首先，</span><code class=\"ne-code\"><span class=\"ne-text\">pirate</span></code><span class=\"ne-text\"> 是一个函数，它接受一个参数 </span><code class=\"ne-code\"><span class=\"ne-text\">arggg</span></code><span class=\"ne-text\">，打印 &quot;matey&quot;，然后定义并返回内部函数 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder</span></code><span class=\"ne-text\">（该函数也接受一个参数 </span><code class=\"ne-code\"><span class=\"ne-text\">arggg</span></code><span class=\"ne-text\"> 并直接返回它）。</span></li><li id=\"ufff392d7\" data-lake-index-type=\"0\"><span class=\"ne-text\">表达式 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate(pirate(pirate))</span></code><span class=\"ne-text\"> 从内向外计算：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u97fdacfe\" data-lake-index-type=\"0\"><span class=\"ne-text\">最内层的 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate</span></code><span class=\"ne-text\"> 是一个函数（即 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate</span></code><span class=\"ne-text\"> 函数本身），所以 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate(pirate)</span></code><span class=\"ne-text\"> 表示用 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate</span></code><span class=\"ne-text\"> 函数作为参数调用 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate</span></code><span class=\"ne-text\"> 函数。</span></li></ul></ul><ol start=\"3\" class=\"ne-ol\"><li id=\"u5bb410a3\" data-lake-index-type=\"0\"><span class=\"ne-text\">计算 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate(pirate)</span></code><span class=\"ne-text\">：</span></li></ol><p id=\"u30a9fc93\" class=\"ne-p\"><span class=\"ne-text\">因此，</span><code class=\"ne-code\"><span class=\"ne-text\">pirate(pirate)</span></code><span class=\"ne-text\"> 返回一个函数，等价于：<br /></span><span class=\"ne-text\">     def plunder(arggg):<br /></span><span class=\"ne-text\">         return arggg</span></p><p id=\"ue64d8539\" class=\"ne-p\"><span class=\"ne-text\">并且打印了一次 &quot;matey&quot;。</span></p><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u4a5eaeaf\" data-lake-index-type=\"0\"><span class=\"ne-text\">调用 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate(arggg)</span></code><span class=\"ne-text\">，其中 </span><code class=\"ne-code\"><span class=\"ne-text\">arggg = pirate</span></code><span class=\"ne-text\">（即函数本身）。</span></li><li id=\"uec7c4d16\" data-lake-index-type=\"0\"><span class=\"ne-text\">打印 &quot;matey&quot;。</span></li><li id=\"uedcf14e1\" data-lake-index-type=\"0\"><span class=\"ne-text\">定义并返回 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder</span></code><span class=\"ne-text\"> 函数（注意：这个 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder</span></code><span class=\"ne-text\"> 函数接受一个参数并返回它，但这里返回的 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder</span></code><span class=\"ne-text\"> 函数实际上会覆盖外部传入的 </span><code class=\"ne-code\"><span class=\"ne-text\">arggg</span></code><span class=\"ne-text\">？实际上，内部函数 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder</span></code><span class=\"ne-text\"> 的参数名也是 </span><code class=\"ne-code\"><span class=\"ne-text\">arggg</span></code><span class=\"ne-text\">，但这是局部变量，不影响外部）。</span></li><li id=\"u382334c1\" data-lake-index-type=\"0\"><span class=\"ne-text\">所以 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate(pirate)</span></code><span class=\"ne-text\"> 返回的是 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder</span></code><span class=\"ne-text\"> 函数（该函数返回其输入）。</span></li></ul></ul><ol start=\"4\" class=\"ne-ol\"><li id=\"u33007535\" data-lake-index-type=\"0\"><span class=\"ne-text\">然后，计算 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate(pirate(pirate))</span></code><span class=\"ne-text\"> = </span><code class=\"ne-code\"><span class=\"ne-text\">pirate( plunder )</span></code><span class=\"ne-text\">（因为上一步返回的是 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder</span></code><span class=\"ne-text\"> 函数）。</span></li></ol><p id=\"uf643834c\" class=\"ne-p\"><span class=\"ne-text\">至此，又打印了一次 &quot;matey&quot;，并且返回了一个新的 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder</span></code><span class=\"ne-text\"> 函数（我们称之为 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder2</span></code><span class=\"ne-text\">）。</span></p><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u1f2fea3d\" data-lake-index-type=\"0\"><span class=\"ne-text\">调用 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate(arggg)</span></code><span class=\"ne-text\">，其中 </span><code class=\"ne-code\"><span class=\"ne-text\">arggg = plunder</span></code><span class=\"ne-text\">（函数）。</span></li><li id=\"ud41e9d8b\" data-lake-index-type=\"0\"><span class=\"ne-text\">打印 &quot;matey&quot;。</span></li><li id=\"u2639d010\" data-lake-index-type=\"0\"><span class=\"ne-text\">定义并返回一个新的 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder</span></code><span class=\"ne-text\"> 函数（同样，这个新函数返回其输入）。</span></li><li id=\"u07073229\" data-lake-index-type=\"0\"><span class=\"ne-text\">所以 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate(plunder)</span></code><span class=\"ne-text\"> 返回一个新的 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder</span></code><span class=\"ne-text\"> 函数（它返回其输入）。</span></li></ul></ul><ol start=\"5\" class=\"ne-ol\"><li id=\"u3447428d\" data-lake-index-type=\"0\"><span class=\"ne-text\">现在，整个表达式是 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate(pirate(pirate))</span></code><span class=\"ne-text\"> 返回了 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder2</span></code><span class=\"ne-text\">，然后继续调用：</span><code class=\"ne-code\"><span class=\"ne-text\">plunder2(abs)</span></code><span class=\"ne-text\">。</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uf48c995d\" data-lake-index-type=\"0\"><code class=\"ne-code\"><span class=\"ne-text\">plunder2</span></code><span class=\"ne-text\"> 就是上面返回的 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder</span></code><span class=\"ne-text\"> 函数，它接受一个参数并返回它。所以 </span><code class=\"ne-code\"><span class=\"ne-text\">plunder2(abs)</span></code><span class=\"ne-text\"> 返回 </span><code class=\"ne-code\"><span class=\"ne-text\">abs</span></code><span class=\"ne-text\"> 函数（绝对值函数）。</span></li></ul></ul><ol start=\"6\" class=\"ne-ol\"><li id=\"u3a4f810d\" data-lake-index-type=\"0\"><span class=\"ne-text\">最后，调用 </span><code class=\"ne-code\"><span class=\"ne-text\">abs(7)</span></code><span class=\"ne-text\">，返回 7。</span></li></ol><p id=\"u09ce7e69\" class=\"ne-p\"><span class=\"ne-text\">所以，整个过程打印了两次 &quot;matey&quot;（因为调用了两次 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate</span></code><span class=\"ne-text\"> 函数），最终结果是 7。</span></p><p id=\"u7979c2bd\" class=\"ne-p\"><span class=\"ne-text\">总结：</span></p><ul class=\"ne-ul\"><li id=\"u334f0fcb\" data-lake-index-type=\"0\"><span class=\"ne-text\">两次打印 &quot;matey&quot;。</span></li><li id=\"u58788d31\" data-lake-index-type=\"0\"><span class=\"ne-text\">最终返回 7。</span></li></ul><p id=\"u45e28b9f\" class=\"ne-p\"><span class=\"ne-text\">因此，</span><code class=\"ne-code\"><span class=\"ne-text\">pirate(pirate(pirate))(abs)(7)</span></code><span class=\"ne-text\"> 的输出是：<br /></span><span class=\"ne-text\">   matey<br /></span><span class=\"ne-text\">   matey<br /></span><span class=\"ne-text\">   7</span></p><p id=\"ubeb78de5\" class=\"ne-p\"><span class=\"ne-text\">注意：实际上，在第一次调用 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate(pirate)</span></code><span class=\"ne-text\"> 时打印一次，第二次调用 </span><code class=\"ne-code\"><span class=\"ne-text\">pirate(plunder)</span></code><span class=\"ne-text\"> 时又打印一次，然后返回的函数链最终应用 </span><code class=\"ne-code\"><span class=\"ne-text\">abs(7)</span></code><span class=\"ne-text\"> 得到 7。</span></p></details>\n按课里说的，理解高阶函数最好的方法是画环境图，但是我看了一遍运行过程还是没看懂...\n\n至少DS的解析我在看第二遍的时候看懂了，写的还是很清晰的\n\n但是光是能看懂还是不够的，在之后的练习中证明我对高阶函数掌握的还不是很好\n\n<details class=\"lake-collapse\"><summary id=\"u7402750f\"><span class=\"ne-text\">Q:程序写成高阶函数的形式有什么优点？</span></summary><p id=\"ue877fcda\" class=\"ne-p\"><span class=\"ne-text\">当然！将程序写成高阶函数（Higher-Order Functions）的形式是函数式编程的核心思想之一，它能带来诸多显著优点。这些优点也正是 CS61A 这类课程如此强调它的原因。</span></p><p id=\"u633ab337\" class=\"ne-p\"><span class=\"ne-text\">高阶函数是指：</span><strong><span class=\"ne-text\">一个可以接受其他函数作为参数，和/或可以将函数作为返回值的函数</span></strong><span class=\"ne-text\">。</span></p><p id=\"uca0b819e\" class=\"ne-p\"><span class=\"ne-text\">其优点主要体现在以下几个层面：</span></p><hr id=\"HEZnD\" class=\"ne-hr\"><h3 id=\"xwouD\"><span class=\"ne-text\">1. 提升抽象层级，增强代码表达力 (Abstraction &amp; Expressiveness)</span></h3><p id=\"u9dff0cfd\" class=\"ne-p\"><span class=\"ne-text\">这是最核心的优点。高阶函数允许你将“操作”本身进行抽象，而不仅仅是数据。</span></p><ul class=\"ne-ul\"><li id=\"u3aedeba7\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">例子对比</span></strong><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u8a6c326a\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">传统命令式循环（低抽象）</span></strong><span class=\"ne-text\">：</span></li></ul></ul><pre data-language=\"python\" id=\"QGlm5\" class=\"ne-codeblock language-python\"><code># 目的是：找出列表中所有的偶数\nnumbers = [1, 2, 3, 4, 5]\nresult = []\nfor num in numbers:\n    if num % 2 == 0:\n        result.append(num)</code></pre><p id=\"ud88ff7d6\" class=\"ne-p\"><span class=\"ne-text\">这里你关心的是“如何做”的每一个细节：初始化列表、迭代、条件判断、添加元素。</span></p><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u2484ed83\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">高阶函数模式（高抽象）</span></strong><span class=\"ne-text\">：</span></li></ul></ul><pre data-language=\"python\" id=\"KLIqm\" class=\"ne-codeblock language-python\"><code>numbers = [1, 2, 3, 4, 5]\nresult = list(filter(lambda x: x % 2 == 0, numbers))</code></pre><p id=\"u7308ff98\" class=\"ne-p\"><span class=\"ne-text\">这里你直接声明了你的“目的”：</span><strong><span class=\"ne-text\">过滤（filter）</span></strong><span class=\"ne-text\"> 这个列表，过滤的条件是“是偶数”。代码读起来几乎就像一句英语，它关注的是“做什么”，而不是“怎么做”。</span></p><p id=\"uc18baf97\" class=\"ne-p\"><strong><span class=\"ne-text\">优点</span></strong><span class=\"ne-text\">：代码更简洁、更易读、更易维护。读者能一眼看出代码的意图。</span></p><h3 id=\"x55KJ\"><span class=\"ne-text\">2. 避免重复代码，促进模块化 (Avoid Repetition &amp; Modularity)</span></h3><p id=\"u871263d7\" class=\"ne-p\"><span class=\"ne-text\">高阶函数可以帮助你从特定的模式中抽离出变化的部分，从而编写出更通用、可复用的代码。</span></p><ul class=\"ne-ul\"><li id=\"u966c95af\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">例子</span></strong><span class=\"ne-text\">：假设你想对列表中的每个元素进行某种操作（比如，全部乘以2，或者全部加1）。</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u5762ab4c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">没有高阶函数</span></strong><span class=\"ne-text\">：你会写多个循环，导致代码重复。</span></li></ul></ul><pre data-language=\"python\" id=\"X5pfe\" class=\"ne-codeblock language-python\"><code># 乘以2\ndoubled = []\nfor n in numbers:\n    doubled.append(n * 2)\n\n# 加1\nincremented = []\nfor n in numbers:\n    incremented.append(n + 1)</code></pre><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u192935f2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">使用高阶函数 </span></strong><code class=\"ne-code\"><span class=\"ne-text\">map</span></code><span class=\"ne-text\">：你可以将变化的操作（乘以2或加1）抽象成一个函数参数。</span></li></ul></ul><pre data-language=\"python\" id=\"GLVoA\" class=\"ne-codeblock language-python\"><code>def multiply_by_two(x):\n    return x * 2\n\ndef add_one(x):\n    return x + 1\n\ndoubled = list(map(multiply_by_two, numbers))\nincremented = list(map(add_one, numbers))</code></pre><p id=\"u08681f04\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">map</span></code><span class=\"ne-text\"> 函数本身封装了“遍历集合并对每个元素进行操作”这个</span><strong><span class=\"ne-text\">固定模式</span></strong><span class=\"ne-text\">，而具体执行什么操作，则由传入的函数参数决定。这完美符合了“将变化的部分参数化”的设计原则。</span></p><p id=\"ua58f389d\" class=\"ne-p\"><strong><span class=\"ne-text\">优点</span></strong><span class=\"ne-text\">：减少了代码量，消除了重复模式。一旦 </span><code class=\"ne-code\"><span class=\"ne-text\">map</span></code><span class=\"ne-text\">/</span><code class=\"ne-code\"><span class=\"ne-text\">filter</span></code><span class=\"ne-text\">/</span><code class=\"ne-code\"><span class=\"ne-text\">reduce</span></code><span class=\"ne-text\"> 这些通用高阶函数被正确实现和测试，你就可以信赖它们，从而更专注于业务逻辑（传入的函数）。</span></p><h3 id=\"xpS2O\"><span class=\"ne-text\">3. 实现延迟计算和惰性求值 (Lazy Evaluation)</span></h3><p id=\"u0b87e9b3\" class=\"ne-p\"><span class=\"ne-text\">在一些语言中（如 Python 的生成器），高阶函数可以返回一个迭代器而不是最终结果。这意味着计算不会立即执行，而是在你真正需要值的时候才执行。</span></p><ul class=\"ne-ul\"><li id=\"u8d27665b\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">例子</span></strong><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">map</span></code><span class=\"ne-text\"> 函数在 Python 3 中返回的是一个迭代器。</span></li></ul><pre data-language=\"python\" id=\"W2A8k\" class=\"ne-codeblock language-python\"><code>mapped = map(lambda x: x * 2, [1, 2, 3, 4]) # 此时并没有进行任何计算\nprint(next(mapped)) # 输出 2，此时才计算第一个元素\nprint(next(mapped)) # 输出 4，此时才计算第二个元素</code></pre><p id=\"u8aace01c\" class=\"ne-p\"><strong><span class=\"ne-text\">优点</span></strong><span class=\"ne-text\">：对于大规模数据流处理非常高效，可以节省内存和计算资源，因为你不需要一次性生成整个结果集。</span></p><h3 id=\"RFh7g\"><span class=\"ne-text\">4. 轻松实现行为定制和回调机制 (Behavior Customization &amp; Callbacks)</span></h3><p id=\"u47fd6dc8\" class=\"ne-p\"><span class=\"ne-text\">这是高阶函数最广泛的应用之一。你可以通过传入不同的函数，来轻松改变另一个函数的行为。</span></p><ul class=\"ne-ul\"><li id=\"u0d31bc23\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">例子</span></strong><span class=\"ne-text\">：GUI 编程中的事件监听、网络框架中的请求处理。</span></li></ul><pre data-language=\"python\" id=\"Q6WwI\" class=\"ne-codeblock language-python\"><code># 一个模拟的按钮类\nclass Button:\n    def __init__(self):\n        self.on_click_handler = None # 保存回调函数\n\n    def set_on_click(self, func):\n        self.on_click_handler = func # 接收一个函数作为参数（高阶行为）\n\n    def click(self):\n        if self.on_click_handler:\n            self.on_click_handler() # 在特定时机调用该函数\n\n# 使用：可以动态地为按钮赋予不同的点击行为\nbutton = Button()\nbutton.set_on_click(lambda: print(&quot;Hello!&quot;)) # 传入一个行为\nbutton.click() # 输出 &quot;Hello!&quot;\n\nbutton.set_on_click(lambda: print(&quot;Goodbye!&quot;)) # 传入另一个行为\nbutton.click() # 输出 &quot;Goodbye!&quot;</code></pre><p id=\"u4cd7fb78\" class=\"ne-p\"><strong><span class=\"ne-text\">优点</span></strong><span class=\"ne-text\">：提供了极大的灵活性，程序结构变得非常松耦合。</span><code class=\"ne-code\"><span class=\"ne-text\">Button</span></code><span class=\"ne-text\"> 类完全不需要关心点击后具体要做什么，它只负责在正确的时间调用被赋予的函数。</span></p><h3 id=\"Cfsix\"><span class=\"ne-text\">5. 为装饰器（Decorators）奠定基础</span></h3><p id=\"udbc8605d\" class=\"ne-p\"><span class=\"ne-text\">Python 的装饰器本质上就是高阶函数的一种语法糖。它接受一个函数，对其进行包装（添加一些额外功能），然后返回一个新的函数。</span></p><ul class=\"ne-ul\"><li id=\"ued50b385\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">例子</span></strong><span class=\"ne-text\">：一个计算函数运行时间的装饰器。</span></li></ul><pre data-language=\"python\" id=\"iQUE1\" class=\"ne-codeblock language-python\"><code>import time\n\ndef timer(func): # timer 是一个高阶函数，它接受函数 func 作为参数\n    def wrapper(*args, **kwargs):\n        start = time.time()\n        result = func(*args, **kwargs) # 在这里执行原函数\n        end = time.time()\n        print(f&quot;{func.__name__} ran in {end-start:.2f}s&quot;)\n        return result\n    return wrapper # 返回一个新的函数 wrapper\n\n@timer # 使用装饰器\ndef some_slow_function():\n    time.sleep(2)\n\nsome_slow_function() # 输出 &quot;some_slow_function ran in 2.00s&quot;</code></pre><p id=\"ue6a42d3f\" class=\"ne-p\"><strong><span class=\"ne-text\">优点</span></strong><span class=\"ne-text\">：允许你以非常清晰和可重用的方式为现有代码添加横切关注点（如日志、计时、权限检查），而无需修改原函数本身的代码。</span></p><h3 id=\"ebzuA\"><span class=\"ne-text\">总结</span></h3><p id=\"u5035c977\" class=\"ne-p\"><br></p><p id=\"u66cfc51d\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\">优点              核心思想                                          例子</span></p><p id=\"u146ed648\" class=\"ne-p\" style=\"text-align: left\"><strong><span class=\"ne-text\">增强表达力    </span></strong><span class=\"ne-text\">声明“做什么”而非“怎么做”        </span><code class=\"ne-code\"><span class=\"ne-text\">filter</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">map</span></code></p><p id=\"u5f8cab57\" class=\"ne-p\" style=\"text-align: left\"><strong><span class=\"ne-text\">促进模块化    </span></strong><span class=\"ne-text\">抽离变化，减少重复                         用 </span><code class=\"ne-code\"><span class=\"ne-text\">map</span></code><span class=\"ne-text\"> 替代多个循环</span></p><p id=\"ub80ceeef\" class=\"ne-p\" style=\"text-align: left\"><strong><span class=\"ne-text\">延迟计算       </span></strong><span class=\"ne-text\">需要时才执行，节省资源                   Python 的 </span><code class=\"ne-code\"><span class=\"ne-text\">map</span></code><span class=\"ne-text\"> 迭代器</span></p><p id=\"udf931657\" class=\"ne-p\" style=\"text-align: left\"><strong><span class=\"ne-text\">行为定制       </span></strong><span class=\"ne-text\">通过参数注入改变行为                      GUI 事件回调</span></p><p id=\"ue1d9cb85\" class=\"ne-p\" style=\"text-align: left\"><strong><span class=\"ne-text\">实现装饰器    </span></strong><span class=\"ne-text\">包装和增强函数功能                        </span><code class=\"ne-code\"><span class=\"ne-text\">@timer</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">@login_required</span></code></p><p id=\"u2e838148\" class=\"ne-p\"><strong><span class=\"ne-text\">在 CS61A 的语境下</span></strong><span class=\"ne-text\">，掌握高阶函数是你理解“抽象”和“计算过程”的关键一步。它直接引导你走向更强大的编程范式，比如：</span></p><ul class=\"ne-ul\"><li id=\"u18603dbc\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">数据抽象</span></strong><span class=\"ne-text\">：用函数来表示数据（这在课程后期的 Scheme 项目中会大量出现）。</span></li><li id=\"u17df63c7\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">解释器与求值模型</span></strong><span class=\"ne-text\">：理解环境模型中函数是如何被传递和求值的。</span></li><li id=\"u1943e1ba\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">递归和树形结构处理</span></strong><span class=\"ne-text\">：很多递归算法都可以用高阶函数优雅地表达。</span></li></ul><p id=\"ube289309\" class=\"ne-p\"><span class=\"ne-text\">因此，努力学习和使用高阶函数，不仅仅是学习一个语法特性，更是</span><strong><span class=\"ne-text\">在训练一种更强大、更优雅的编程思维方式</span></strong><span class=\"ne-text\">。</span></p></details>\n```python\nThis question demonstrates that it's possible to write recursive functions without \nassigning them a name in the global frame.\n\nThe recursive factorial function can be written as a single expression by using a \nconditional expression.\n\n>>> fact = lambda n: 1 if n == 1 else mul(n, fact(sub(n, 1)))\n>>> fact(5)\n120\n\nHowever, this implementation relies on the fact (no pun intended) that fact has a name, \nto which we refer in the body of fact. To write a recursive function, we have always \ngiven it a name using a def or assignment statement so that we can refer to the function \nwithin its own body. In this question, your job is to define fact recursively without \ngiving it a name!\n\nWrite an expression that computes n factorial using only call expressions, conditional \nexpressions, and lambda expressions (no assignment or def statements).\n\nNote: You are not allowed to use make_anonymous_factorial in your return expression.\n\nThe sub and mul functions from the operator module are the only built-in functions \nrequired to solve this problem.\n\nfrom operator import sub, mul\n\ndef make_anonymous_factorial():\n    \"\"\"Return the value of an expression that computes factorial.\n\n    >>> make_anonymous_factorial()(5)\n    120\n    >>> from construct_check import check\n    >>> # ban any assignments or recursion\n    >>> check(HW_SOURCE_FILE, 'make_anonymous_factorial',\n    ...    ['Assign', 'AnnAssign', 'AugAssign', 'NamedExpr', 'FunctionDef', 'Recursion'])\n    True\n    \"\"\"     \n```\n\n来自CS61A Homework3 Q6\n\n<details class=\"lake-collapse\"><summary id=\"u95c05e8f\"><span class=\"ne-text\">Q:如何提高自己的代码抽象能力？例如：（把题目扔过去）我不会写，忍不住看了答案（又把答案扔了过去）接下来我该怎么做提高我解决类似问题的能力？</span></summary><p id=\"uc9674e56\" class=\"ne-p\"><span class=\"ne-text\">提高代码抽象能力，特别是解决像匿名递归这样的问题，需要深入理解函数式编程的核心概念，如高阶函数、递归、闭包和Y组合子。以下是一些具体的建议和步骤，帮助你逐步提升能力：</span></p><h3 id=\"idXHR\"><span class=\"ne-text\">1. </span><strong><span class=\"ne-text\">夯实基础：掌握高阶函数和递归</span></strong></h3><ul class=\"ne-ul\"><li id=\"u36f4bd20\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">高阶函数</span></strong><span class=\"ne-text\">：确保你能熟练使用函数作为参数和返回值。练习使用</span><code class=\"ne-code\"><span class=\"ne-text\">map</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">filter</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">reduce</span></code><span class=\"ne-text\">等内置函数，并尝试自己实现类似的高阶函数（例如，自己写一个</span><code class=\"ne-code\"><span class=\"ne-text\">my_map</span></code><span class=\"ne-text\">函数）。</span></li><li id=\"u16d1d4fc\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">递归</span></strong><span class=\"ne-text\">：理解递归的基本原理（基本情况和递归情况）。多编写递归函数，如阶乘、斐波那契数列、列表求和等，直到你能直观地思考递归过程。</span></li></ul><h3 id=\"BRN9Z\"><span class=\"ne-text\">2. </span><strong><span class=\"ne-text\">理解匿名递归的原理</span></strong></h3><ul class=\"ne-ul\"><li id=\"u5040965a\" data-lake-index-type=\"0\"><span class=\"ne-text\">匿名递归的关键在于</span><strong><span class=\"ne-text\">将函数自身作为参数传递</span></strong><span class=\"ne-text\">，从而避免依赖函数名。这通常通过“自应用”（self-application）实现，类似于Y组合子的概念。</span></li><li id=\"uc7920f4b\" data-lake-index-type=\"0\"><span class=\"ne-text\">对于你提供的答案，分解理解：</span></li></ul><pre data-language=\"python\" id=\"wmU2N\" class=\"ne-codeblock language-python\"><code>return (lambda f: lambda k: f(f, k))(lambda f, k: k if k == 1 else mul(k, f(f, sub(k, 1))))</code></pre><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ua4e3f2d3\" data-lake-index-type=\"0\"><span class=\"ne-text\">最外层是一个立即执行的lambda：</span><code class=\"ne-code\"><span class=\"ne-text\">(lambda f: lambda k: f(f, k))(...)</span></code><span class=\"ne-text\">，它接受一个函数</span><code class=\"ne-code\"><span class=\"ne-text\">f</span></code><span class=\"ne-text\">，并返回一个函数</span><code class=\"ne-code\"><span class=\"ne-text\">lambda k: f(f, k)</span></code><span class=\"ne-text\">。</span></li><li id=\"uf5a19b99\" data-lake-index-type=\"0\"><span class=\"ne-text\">传入的函数是</span><code class=\"ne-code\"><span class=\"ne-text\">lambda f, k: ...</span></code><span class=\"ne-text\">，它接受两个参数：</span><code class=\"ne-code\"><span class=\"ne-text\">f</span></code><span class=\"ne-text\">（函数自身）和</span><code class=\"ne-code\"><span class=\"ne-text\">k</span></code><span class=\"ne-text\">（数值）。当</span><code class=\"ne-code\"><span class=\"ne-text\">k=1</span></code><span class=\"ne-text\">时返回1，否则返回</span><code class=\"ne-code\"><span class=\"ne-text\">k * f(f, k-1)</span></code><span class=\"ne-text\">。</span></li><li id=\"u24fc3e1c\" data-lake-index-type=\"0\"><span class=\"ne-text\">通过</span><code class=\"ne-code\"><span class=\"ne-text\">f(f, k)</span></code><span class=\"ne-text\">的形式，函数在递归时调用自身，而不需要全局名称。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"udd27ba1f\" data-lake-index-type=\"0\"><span class=\"ne-text\">尝试用小型输入（如</span><code class=\"ne-code\"><span class=\"ne-text\">n=3</span></code><span class=\"ne-text\">）手动模拟执行过程，跟踪每一步的函数调用，加深理解。</span></li></ul><h3 id=\"Pz7Po\"><span class=\"ne-text\">3. </span><strong><span class=\"ne-text\">学习Y组合子</span></strong></h3><ul class=\"ne-ul\"><li id=\"u014ff63f\" data-lake-index-type=\"0\"><span class=\"ne-text\">Y组合子是函数式编程中实现匿名递归的标准技术。虽然它看起来复杂，但理解其推导过程能极大提高抽象能力。</span></li><li id=\"ub2869bd5\" data-lake-index-type=\"0\"><span class=\"ne-text\">推荐资源：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uf6cbea3d\" data-lake-index-type=\"0\"><a href=\"https://mvanier.livejournal.com/2897.html\" data-href=\"https://mvanier.livejournal.com/2897.html\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Y组合子推导教程</span></a><span class=\"ne-text\">（英文，但详细）</span></li><li id=\"u4a4cbd2a\" data-lake-index-type=\"0\"><span class=\"ne-text\">《计算机程序的构造和解释》（SICP）第4章——CS61A的灵感来源，其中深入讨论了元循环求值器和Y组合子。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ufc2aa1be\" data-lake-index-type=\"0\"><span class=\"ne-text\">尝试自己推导Y组合子：从简单的递归函数开始，逐步抽象出递归部分，最终得到Y组合子。</span></li></ul><h3 id=\"JDJH6\"><span class=\"ne-text\">4. </span><strong><span class=\"ne-text\">练习类似问题</span></strong></h3><ul class=\"ne-ul\"><li id=\"ua1aee360\" data-lake-index-type=\"0\"><span class=\"ne-text\">一旦理解了匿名阶乘，尝试解决其他匿名递归问题，例如：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uf312b79d\" data-lake-index-type=\"0\"><span class=\"ne-text\">匿名斐波那契函数。</span></li><li id=\"ub893cbc5\" data-lake-index-type=\"0\"><span class=\"ne-text\">匿名列表长度计算。</span></li><li id=\"u21b68581\" data-lake-index-type=\"0\"><span class=\"ne-text\">匿名树遍历。</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"uf04aed68\" data-lake-index-type=\"0\"><span class=\"ne-text\">示例：匿名斐波那契函数</span></li></ul><pre data-language=\"python\" id=\"uxYrf\" class=\"ne-codeblock language-python\"><code># 目标：不使用赋值或def，计算斐波那契数\n# 提示：使用类似的结构，但需要处理两个递归调用\nreturn (lambda f: lambda n: f(f, n))(lambda f, n: n if n &lt;= 1 else add(f(f, sub(n, 1)), f(f, sub(n, 2))))</code></pre><ul class=\"ne-ul\"><li id=\"u90c0fd7d\" data-lake-index-type=\"0\"><span class=\"ne-text\">注意：这类问题通常需要多参数或柯里化来处理多个递归分支。</span></li></ul><h3 id=\"E7axc\"><span class=\"ne-text\">5. </span><strong><span class=\"ne-text\">阅读和分析代码</span></strong></h3><ul class=\"ne-ul\"><li id=\"u0824f07a\" data-lake-index-type=\"0\"><span class=\"ne-text\">多阅读函数式编程的代码示例，尤其是Scheme或Haskell中的递归实现（这些语言更常用高阶函数）。</span></li><li id=\"u11c8d3e9\" data-lake-index-type=\"0\"><span class=\"ne-text\">分析CS61A课程中的其他高阶函数问题，如</span><code class=\"ne-code\"><span class=\"ne-text\">make_adder</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">composer</span></code><span class=\"ne-text\">等，理解如何通过函数组合构建抽象。</span></li></ul><h3 id=\"yWgEd\"><span class=\"ne-text\">6. </span><strong><span class=\"ne-text\">强制无状态编程</span></strong></h3><ul class=\"ne-ul\"><li id=\"ub9266e55\" data-lake-index-type=\"0\"><span class=\"ne-text\">挑战自己：在不使用赋值语句（</span><code class=\"ne-code\"><span class=\"ne-text\">=</span></code><span class=\"ne-text\">）的情况下编写小型程序。这迫使你依赖函数参数和返回值来管理状态，从而提高抽象能力。</span></li><li id=\"ua0f45ea3\" data-lake-index-type=\"0\"><span class=\"ne-text\">例如，尝试用纯函数实现一个计算器，所有操作都通过函数组合完成。</span></li></ul><h3 id=\"dwy1k\"><span class=\"ne-text\">7. </span><strong><span class=\"ne-text\">参加编程社区和讨论</span></strong></h3><ul class=\"ne-ul\"><li id=\"ue9ff8997\" data-lake-index-type=\"0\"><span class=\"ne-text\">加入函数式编程社区（如Reddit的/r/functionalprogramming）、CS61A的学生论坛或Discord频道，与其他学习者交流。</span></li><li id=\"u46450190\" data-lake-index-type=\"0\"><span class=\"ne-text\">向他人解释代码：尝试将匿名递归的原理讲给别人听，这能巩固你的理解。</span></li></ul><h3 id=\"MxYBV\"><span class=\"ne-text\">8. </span><strong><span class=\"ne-text\">学习相关数学概念</span></strong></h3><ul class=\"ne-ul\"><li id=\"u810d1696\" data-lake-index-type=\"0\"><span class=\"ne-text\">λ演算（Lambda Calculus）是函数式编程的理论基础，了解其基本规则（如α转换、β规约）有助于理解函数抽象。</span></li><li id=\"ue54b5651\" data-lake-index-type=\"0\"><span class=\"ne-text\">推荐资源：</span><a href=\"https://www.inf.fu-berlin.de/lehre/WS03/alpi/lambda.pdf\" data-href=\"https://www.inf.fu-berlin.de/lehre/WS03/alpi/lambda.pdf\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">λ演算入门</span></a><span class=\"ne-text\">（英文）。</span></li></ul><h3 id=\"A4oUl\"><span class=\"ne-text\">9. </span><strong><span class=\"ne-text\">耐心和实践</span></strong></h3><ul class=\"ne-ul\"><li id=\"u8ecdb5c2\" data-lake-index-type=\"0\"><span class=\"ne-text\">抽象能力需要时间和练习来培养。不要指望一蹴而就——从简单的问题开始，逐步增加难度。</span></li><li id=\"u34dab9d7\" data-lake-index-type=\"0\"><span class=\"ne-text\">每次遇到难题时，先尝试自己解决，再对比答案，分析差距。</span></li></ul><p id=\"uf952b97d\" class=\"ne-p\"><span class=\"ne-text\">最后，记住CS61A的目标是教你“像计算机科学家一样思考”，而不仅仅是写代码。通过持续练习和反思，你会逐渐提高抽象能力，解决更复杂的问题。加油！</span></p></details>\n又让ds分析了一下答案的过程：\n\n<details class=\"lake-collapse\"><summary id=\"u152af1bf\"><span class=\"ne-text\">解释运行过程</span></summary><p id=\"u5ecfbdc6\" class=\"ne-p\"><span class=\"ne-text\">让我们一步步分解：</span></p><p id=\"uea2799ed\" class=\"ne-p\"><span class=\"ne-text\">定义：</span></p><p id=\"ued4550e4\" class=\"ne-p\"><span class=\"ne-text\">F = (lambda f: lambda k: f(f, k))</span></p><p id=\"uf0ce8174\" class=\"ne-p\"><span class=\"ne-text\">G = (lambda f, k: k if k == 1 else k * f(f, k-1))</span></p><p id=\"u0442a3bc\" class=\"ne-p\"><span class=\"ne-text\">那么整个表达式就是 F(G)(3)</span></p><p id=\"ucf631c3e\" class=\"ne-p\"><span class=\"ne-text\">现在展开F(G):</span></p><p id=\"u2ba2a2cc\" class=\"ne-p\"><span class=\"ne-text\">F(G) = lambda k: G(G, k)</span></p><p id=\"uf16d3d87\" class=\"ne-p\"><span class=\"ne-text\">所以，F(G)(3) = G(G, 3)</span></p><p id=\"u670bc4c5\" class=\"ne-p\"><span class=\"ne-text\">然后计算G(G, 3):</span></p><p id=\"u30f04e00\" class=\"ne-p\"><span class=\"ne-text\">根据G的定义，当k=3时，条件判断为false，所以执行 else 部分：3 * G(G, 2)</span></p><p id=\"uabb9144d\" class=\"ne-p\"><span class=\"ne-text\">接下来计算G(G, 2):</span></p><p id=\"uce3c8c6e\" class=\"ne-p\"><span class=\"ne-text\">2 * G(G, 1)</span></p><p id=\"u622b6f73\" class=\"ne-p\"><span class=\"ne-text\">然后计算G(G, 1):</span></p><p id=\"u1de3b0c0\" class=\"ne-p\"><span class=\"ne-text\">当k=1时，返回1。</span></p><p id=\"ub051da31\" class=\"ne-p\"><span class=\"ne-text\">所以，整个表达式计算过程为：</span></p><p id=\"u98b4ef9c\" class=\"ne-p\"><span class=\"ne-text\">G(G,3) = 3 * G(G,2)</span></p><p id=\"ub10ca627\" class=\"ne-p\"><span class=\"ne-text\">= 3 * (2 * G(G,1))</span></p><p id=\"uebaba019\" class=\"ne-p\"><span class=\"ne-text\">= 3 * (2 * 1)</span></p><p id=\"ucdae595b\" class=\"ne-p\"><span class=\"ne-text\">= 6</span></p></details>\n### 分支2.5：生成训练习题\n## 分支 6：Python 数据操作\n根据自己的学习进度长期更新\n\n",
        "simhash": 9401052593855677325
    },
    "237718231": {
        "id": 237718231,
        "type": "Doc",
        "slug": "ea59rizv4qfe7wfu",
        "title": "非纯技术类-冯晨曦",
        "description": "这个文档会讨论 Mission，子文档是百团，并且根据编辑时间由上至下更新一个疑惑——既然各组都已经在……组下面建立了子文档，还需要文档名字上再加上什么组吗个人小记是可以添加标签的，但这种公共空间的就不行2025.9.21.16.06",
        "cover": "",
        "user_id": 59388580,
        "book_id": 69189148,
        "last_editor_id": 59388580,
        "public": 2,
        "status": 1,
        "likes_count": 4,
        "read_count": 0,
        "comments_count": 3,
        "word_count": 96,
        "created_at": "2025-09-21T07:58:33.000Z",
        "updated_at": "2025-09-23T06:55:41.000Z",
        "content_updated_at": "2025-09-21T08:06:44.000Z",
        "published_at": "2025-09-21T08:06:44.000Z",
        "first_published_at": "2025-09-21T07:59:52.831Z",
        "user": {
            "id": 59388580,
            "type": "User",
            "login": "ninanxiaozi",
            "name": "冯晨曦",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59388580/1758172443035-avatar/3263a538-6b42-4717-a222-8f9e43c8e81e.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-05T11:31:45.000Z",
            "updated_at": "2025-09-23T12:43:58.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59388580,
            "type": "User",
            "login": "ninanxiaozi",
            "name": "冯晨曦",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59388580/1758172443035-avatar/3263a538-6b42-4717-a222-8f9e43c8e81e.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-05T11:31:45.000Z",
            "updated_at": "2025-09-23T12:43:58.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "> 这个文档会讨论 Mission，子文档是百团，并且根据编辑时间由上至下更新\n>\n\n+ 一个疑惑——既然各组都已经在……组下面建立了子文档，还需要文档名字上再加上什么组吗\n+ 个人小记是可以添加标签的，但这种公共空间的就不行\n\n:::tips\n2025.9.21.16.06\n\n:::\n\n",
        "simhash": 8683761359959883618
    },
    "237716585": {
        "id": 237716585,
        "type": "Doc",
        "slug": "etgnsg949a8mkvqh",
        "title": "非纯技术组-李妍",
        "description": "想半天，没搞明白自己想做什么。我决定留下两个问题nova想要我们做什么？我们想要通过nova做什么？成大事者必作于细，所以我只提出、思考，不指望自己给出明确答案。小事入手，我决定细究一下搭建c++环境中的各个环节，搞明白一下。选择这个的原因是联想起上次活动中的例子，某位同学把path删掉了一部...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/59892689/1758605483856-56b006a0-4c3d-4420-818f-e5dc60f83888.png",
        "user_id": 59892689,
        "book_id": 69189148,
        "last_editor_id": 59892689,
        "public": 2,
        "status": 1,
        "likes_count": 3,
        "read_count": 0,
        "comments_count": 6,
        "word_count": 562,
        "created_at": "2025-09-21T07:46:05.000Z",
        "updated_at": "2025-09-23T08:10:20.000Z",
        "content_updated_at": "2025-09-23T05:46:05.000Z",
        "published_at": "2025-09-23T05:46:05.000Z",
        "first_published_at": "2025-09-23T05:38:47.048Z",
        "user": {
            "id": 59892689,
            "type": "User",
            "login": "buzhi-gm3hz",
            "name": "李妍",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59892689/1756715363080-avatar/de508b1f-084b-4a7b-8e76-90dd2b0c3b57.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-20T03:11:44.000Z",
            "updated_at": "2025-09-23T11:21:06.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59892689,
            "type": "User",
            "login": "buzhi-gm3hz",
            "name": "李妍",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59892689/1756715363080-avatar/de508b1f-084b-4a7b-8e76-90dd2b0c3b57.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-20T03:11:44.000Z",
            "updated_at": "2025-09-23T11:21:06.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "想半天，没搞明白自己想做什么。我决定留下两个问题\n\n:::tips\nnova想要我们做什么？\n\n我们想要通过nova做什么？\n\n:::\n\n成大事者必作于细，所以我只提出、思考，不指望自己给出明确答案。小事入手，我决定细究一下搭建c++环境中的各个环节，搞明白一下。选择这个的原因是联想起上次活动中的例子，某位同学把path删掉了一部分造成比较大的麻烦后，”把path划成了禁区“。于是我忽然意识到，我自己呢，其实也并没有搞清楚\n\n- [ ] 为什么要在path中增添一行才能运行，\n- [ ] 环境变量又是什么？\n- [ ] vsc中的json文件代表着啥？\n- [ ] 复制粘贴的那段LLM给出的代码要用来干什么？\n- [ ] 在命令行进入xxx目录时，为什么\\不行，而换成\\\\就可以成功进入了？\n- [ ] Cygwin64是干啥的？mingw呢？\n\n![贴个图，再次重温一下当时看到黄色setup字样的喜悦](https://cdn.nlark.com/yuque/0/2025/png/59892689/1758605483856-56b006a0-4c3d-4420-818f-e5dc60f83888.png)![以及环境搭建成功时的喜悦](https://cdn.nlark.com/yuque/0/2025/png/59892689/1758605547942-4d208192-3f98-4cc4-aa66-26b98c38b054.png)\n\n知其然还要知其所以然，在现今时代是否需要对这句儿时的教导再次讨论可行性？正如今天化学课上赵老师所讲，“你可以接受买来砖头建房子，而不是非要从泥土起考虑如何变成砖头再拿来建房子”，不可计数的工具在供我们使用，如果个个从头探究，不现实。但如果这个答案是否定的，那么我上面罗列的问题是否还有探究的意义？\n\n\n\n\n\n\n\n\n\n马上去上课了还想唠叨两句，是否我们太执着于追求完美或已习惯了成为最优，是否在潜意识里是无法容忍比自己更优秀的存在，不论这个想法的外化形式是卷、酸还是嫉妒，正向或反向的都无所谓。？？？——看到同学吐槽一些人领跑的徒劳焦虑有感，因为显然这名同学在某些程度上也领跑了大环境中的其他人\n\n\n\n",
        "simhash": 6985265901188669403
    },
    "237714990": {
        "id": 237714990,
        "type": "Doc",
        "slug": "ap1anapou4glocxm",
        "title": "实践操作类-黄亮",
        "description": "",
        "cover": "",
        "user_id": 59457534,
        "book_id": 69189148,
        "last_editor_id": 59457534,
        "public": 2,
        "status": 1,
        "likes_count": 4,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 0,
        "created_at": "2025-09-21T07:33:00.000Z",
        "updated_at": "2025-09-23T02:18:11.000Z",
        "content_updated_at": "2025-09-21T07:42:22.000Z",
        "published_at": "2025-09-21T07:42:22.000Z",
        "first_published_at": "2025-09-21T07:34:04.014Z",
        "user": {
            "id": 59457534,
            "type": "User",
            "login": "yuqueyonghu9pq7xb",
            "name": "黄亮",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-07T10:09:30.000Z",
            "updated_at": "2025-09-06T09:15:21.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59457534,
            "type": "User",
            "login": "yuqueyonghu9pq7xb",
            "name": "黄亮",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-07T10:09:30.000Z",
            "updated_at": "2025-09-06T09:15:21.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "\n\n",
        "simhash": 0
    },
    "237710712": {
        "id": 237710712,
        "type": "Doc",
        "slug": "hqxe2tivsnx4vz9a",
        "title": "工具技巧类-陈湘宇",
        "description": "我检索到的工具（有什么想补充的可以自行展开，比如背景原因、如何检索到的工具）我准备学习的技巧（基于怎样的需求？想让技巧做到什么程度？能否实现？）技巧一技巧二技巧三我学习或使用的过程（描述开展过程，文字、链接、图片、录屏都可以的，也请在此部分写出遇到或主动提出的问题，展现思维，透露问题）技巧一技...",
        "cover": "",
        "user_id": 60269125,
        "book_id": 69189148,
        "last_editor_id": 60269125,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 173,
        "created_at": "2025-09-21T07:03:09.000Z",
        "updated_at": "2025-09-22T14:52:40.000Z",
        "content_updated_at": "2025-09-22T14:52:40.000Z",
        "published_at": "2025-09-22T14:52:40.000Z",
        "first_published_at": "2025-09-21T07:03:29.166Z",
        "user": {
            "id": 60269125,
            "type": "User",
            "login": "apparition",
            "name": "陈湘宇251870092",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60269125/1758257217657-avatar/a18f41da-0b4e-446a-bd75-4832590a7f5e.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-01T11:44:52.000Z",
            "updated_at": "2025-09-20T07:00:19.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60269125,
            "type": "User",
            "login": "apparition",
            "name": "陈湘宇251870092",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60269125/1758257217657-avatar/a18f41da-0b4e-446a-bd75-4832590a7f5e.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-01T11:44:52.000Z",
            "updated_at": "2025-09-20T07:00:19.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 我检索到的工具\n~~（有什么想补充的可以自行展开，比如背景原因、如何检索到的工具）~~\n\n## 我准备学习的技巧\n~~（基于怎样的需求？想让技巧做到什么程度？能否实现？）~~\n\n+ 技巧一\n+ 技巧二\n+ 技巧三\n\n## 我学习或使用的过程\n~~（描述开展过程，文字、链接、图片、录屏都可以的，也请在此部分写出遇到或主动提出的问题，展现思维，透露问题）~~\n\n+ 技巧一\n+ 技巧二\n+ 技巧三\n\n## 总结分享\n~~（自由发挥的空间，也可选择不发挥）~~\n\n",
        "simhash": 1731842225407163680
    },
    "237701907": {
        "id": 237701907,
        "type": "Doc",
        "slug": "frd9fg8vis8q5vbb",
        "title": "实践操作类-廖宇强",
        "description": "",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/60348708/1758633086041-429f87d0-5e71-4fe2-916d-7dc5dcbbbfd1.png",
        "user_id": 60348708,
        "book_id": 69189148,
        "last_editor_id": 60348708,
        "public": 1,
        "status": 1,
        "likes_count": 3,
        "read_count": 0,
        "comments_count": 2,
        "word_count": 1005,
        "created_at": "2025-09-21T05:53:27.000Z",
        "updated_at": "2025-09-23T14:11:10.000Z",
        "content_updated_at": "2025-09-23T14:11:10.000Z",
        "published_at": "2025-09-23T14:11:10.000Z",
        "first_published_at": "2025-09-21T05:53:42.904Z",
        "user": {
            "id": 60348708,
            "type": "User",
            "login": "suliuguang-mjuwp",
            "name": "廖宇强",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-03T13:07:09.000Z",
            "updated_at": "2025-09-18T09:23:38.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60348708,
            "type": "User",
            "login": "suliuguang-mjuwp",
            "name": "廖宇强",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-03T13:07:09.000Z",
            "updated_at": "2025-09-18T09:23:38.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "睡前看一眼发现大家都开始行动了，害怕\n\n### 意向任务：P7 试试用AI搭建一个好看的前端\n    碎碎念：曾经有过手搓前端的经验，但是我的审美不太行，搭上一个热爱UI设计的舍友也做得依托，所以想借此学学（\n\n    上周六的活动后深刻反思了一下，发现自己确实是根本不重视PBL的环节\n\n### 0 准备工作\n####     知识准备\n    网站需要一个服务器运行一些文件，比如.htm .css .js，之前我是用Python的Django框架+pythonanywhere的免费服务器一站式运行的，涵盖了前后端，不过这会应该只需要考虑前端页面，那就需要重新找框架了\n\n####     PBL历程\n1. 先假设我们已经有了一套完整的文件，那么我们要怎么让一个服务器ip解析他们，并且让其他人访问？\n    1. 这会不会有安全问题？\n    2. 除了上面提到的框架，有没有更简单的、在本地即可部署的框架？\n    3. 要怎么让服务器知道我要解析什么文件？加载什么css/js？\n2. 服务器有了，接下了就是网页设计的事情了\n    1. 已知我没有审美细胞，显然css相关的UI设计得找AI代劳了，用什么AI？\n        1. 有什么优雅的设计？\n    2. 需要用js加入一些平滑美妙的动画，上述的AI还能代劳吗？\n        1. 我们需要怎样的动画？总之肯定不是随便点哪个按钮都来一个全屏闪烁（\n    3. 上述内容会不会太过花哨导致网站速度变慢？这也是我们不想要的\n    4. 上述内容会不会太过朴素而导致没人想用？\n\n---\n\n### 1.好的，那么我们开始吧。直切正题，直接问ds老师\n#### 架构服务器并解析htm文件\n![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758633086041-429f87d0-5e71-4fe2-916d-7dc5dcbbbfd1.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758632447457-7981283f-c0bf-4214-88e9-13ea00d316b4.png)![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758632501637-d136cb4e-c84d-4af2-8c40-a41c3dc216eb.png)\n\n非常好，ds老师直接秒了（\n\n---\n\n现在新建一个文件夹看看\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758632811513-3f3187d7-03f2-4920-ac67-4db981852866.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758632957223-7d202bbe-ca32-435b-9264-42404352cbc4.png)![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758632995590-422f35b1-9314-446f-9523-1d79ec3ee031.png)![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758633141186-2db62a52-80e1-4177-a242-63c2a9a2726e.png)\n\n\n\n当时Serving完了好久没看到动静，于是直接莽进去了，没想到就是这样的（汗\n\n至于为什么404了我们先不管他，反正能看到内容力\n\n但是这个内容好像不太对，这是展示了我们的文件夹内容而不是文件（虽然是点击链接后就是htm本身了，不过这是不好的）\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758633161581-ee62d73d-02b3-4985-b85f-c91da9f793be.png)![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758633191398-4bb28fa6-8308-4657-8174-b9d8521fd784.png)\n\n呃啊，好吧，原来是命名规范的问题，改个名字看看\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758633245377-6c274ede-6d25-4115-b923-abb145e5d104.png)搞定！\n\n#### 关于安全问题，ds老师已经分析过了，现在我们上手机试试\n![](https://cdn.nlark.com/yuque/0/2025/jpeg/60348708/1758633632282-fe0ec5a3-a6f8-4091-9628-0b9153fb9158.jpeg)\n\n怎么直接开了？？感觉不太妙\n\n关WiFi试试\n\n![](https://cdn.nlark.com/yuque/0/2025/jpeg/60348708/1758634538920-c078b387-0a79-49cb-a03a-82f7fe3d1a20.jpeg)嗯，看起来直接限制了校园网才能访问，那就不必担心了hh\n\n###### 补充研究一点小问题，关于局域网等等\n关于上面的问题，我的直觉是因为校园网同属于一个局域网，而流量的ip跑出去了，所以不行\n\n所以，来找ds验证一下吧\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758634897632-8935a49f-0d76-4ac1-b260-f1cb0e314d0d.png)![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758634915499-2e26fcc1-c0c4-4187-a9ed-26ddc44f9c05.png)![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758634940569-6e079147-a5b5-4da6-a125-cfac99c581be.png)\n\n那可太好了！但是为什么我的网站直接暴露给校园网了呢？![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758635147185-9a4e7089-9c58-4f49-83d7-c72e47516943.png)\n\n好吧，第一次启动服务器的时候弹出了防火墙提示，我烧烤了两秒之后按下了允许\n\n不过ds提供了一些补救措施，好\n\n#### 现在让我们新建css和js文件，并加载他们吧\n![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758635441910-02e57657-8d1a-4ab4-a85d-d4073a10620c.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758635551950-602ca917-5048-453a-8c76-aadba5048e08.png)![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758635404677-bdb69726-b182-4e8b-80e2-8dfce3417be3.png)![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758635413240-4fe72d0e-e28a-49f9-8dc2-c0a1bac0174d.png)\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60348708/1758635560687-790f795d-985d-40a2-80d6-4fa3a942b6f7.png)\n\n搞定！\n\n现在我们有了一个白板和最基础的案例，接下了想必只要找一个AI就可以划水了（确信\n\n## 现已施工至完成PBL第一部分~\n看了一下张润程大佬的文档以及评论区，简单记一下可能的工具：\n\ncursor, node.js->Vue.js, 以及上次的前端网页\n\n",
        "simhash": 4396740960608234536
    },
    "237683788": {
        "id": 237683788,
        "type": "Doc",
        "slug": "adochxlngtglqh7u",
        "title": "信息检索类-蔡翊軒",
        "description": "1. 大学XX（数学）怎么学在B站找到一个视频【麻省理工学院—线性代数课（完整版72讲）通俗易懂，绝对是线性代数课程天花板！】https://www.bilibili.com/video/BV1rH4y1N7BW?p=3&amp;vd_source=e9756ae6520c967cb2a8ba2a7d...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/60717839/1758463119296-223ba548-07d9-4038-a8da-244368a3fff8.png",
        "user_id": 60717839,
        "book_id": 69189148,
        "last_editor_id": 60717839,
        "public": 2,
        "status": 1,
        "likes_count": 1,
        "read_count": 0,
        "comments_count": 1,
        "word_count": 256,
        "created_at": "2025-09-21T03:05:10.000Z",
        "updated_at": "2025-09-23T23:54:58.000Z",
        "content_updated_at": "2025-09-23T23:54:57.000Z",
        "published_at": "2025-09-23T23:54:57.000Z",
        "first_published_at": "2025-09-22T01:21:38.884Z",
        "user": {
            "id": 60717839,
            "type": "User",
            "login": "u59038380",
            "name": "蔡翊軒",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60717839/1758422294642-avatar/327c7c58-f38a-4597-9425-e3618dc33f94.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-14T15:35:31.000Z",
            "updated_at": "2025-09-23T14:43:11.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60717839,
            "type": "User",
            "login": "u59038380",
            "name": "蔡翊軒",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60717839/1758422294642-avatar/327c7c58-f38a-4597-9425-e3618dc33f94.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-14T15:35:31.000Z",
            "updated_at": "2025-09-23T14:43:11.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "#### 大学XX（数学）怎么学\n+ 在B站找到一个视频\n\n【麻省理工学院—线性代数课（完整版72讲）通俗易懂，绝对是线性代数课程天花板！】[https://www.bilibili.com/video/BV1rH4y1N7BW?p=3&vd_source=e9756ae6520c967cb2a8ba2a7d0fecd1](https://www.bilibili.com/video/BV1rH4y1N7BW?p=3&vd_source=e9756ae6520c967cb2a8ba2a7d0fecd1)\n\n\n\n+ 找到B站视频下载工具或者Python代码，将视频下载下来\n\n首先，在浏览器中打开链接，在开发者的“网络”中找到储存视频和音频的东东\n\n+ ![](https://cdn.nlark.com/yuque/0/2025/png/60717839/1758463119296-223ba548-07d9-4038-a8da-244368a3fff8.png)\n\n此处需要url，user agent，referer\n\n\n\n+ 找到从MP4中提取音频的工具或Python代码，将视频中的音轨提取出来\n\n\n\n其实不用，因为b站是视频和音频是分开来储存的\n\n\n\n+ 找到语音转文字的工具或Python代码，将视频转成文档\n\n\n\n[https://github.com/yeyupiaoling/VoiceprintRecognition-Pytorch?tab=readme-ov-file](https://github.com/yeyupiaoling/VoiceprintRecognition-Pytorch?tab=readme-ov-file)\n\n一种基于pytorch的声纹识别，我已经弄到数据训练阶段了，弄完在说\n\n\n\n\n\n+ 使用LLM总结文档\n\n这个暂时只能识别中文，所以这个环节跳过吧\n\n",
        "simhash": 4071482581419032416
    },
    "237683178": {
        "id": 237683178,
        "type": "Doc",
        "slug": "uxlm4mub7fmeuhbn",
        "title": "实践操作类-王恩成",
        "description": "笔者对P6比较感兴趣，于是尝试构建一个基于需求和问题反馈的工作流首先，笔者认为需求和问题本质上是一种东西，只不过需求是用户没体验之前的想象，用户用之后的的落差叫问题。这两种东西都需要经过P1给出的解决方案进行拆分转化为技术层面的工程目标，然后进入开发工作流笔者构建的开发工作流包含三个步骤：组织...",
        "cover": "",
        "user_id": 60016054,
        "book_id": 69189148,
        "last_editor_id": 60016054,
        "public": 2,
        "status": 1,
        "likes_count": 5,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 152,
        "created_at": "2025-09-21T02:55:49.000Z",
        "updated_at": "2025-09-24T02:45:25.000Z",
        "content_updated_at": "2025-09-24T02:45:24.000Z",
        "published_at": "2025-09-24T02:45:24.000Z",
        "first_published_at": "2025-09-21T02:56:13.524Z",
        "user": {
            "id": 60016054,
            "type": "User",
            "login": "u58356605",
            "name": "王恩成",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-24T12:31:08.000Z",
            "updated_at": "2025-09-19T03:47:55.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60016054,
            "type": "User",
            "login": "u58356605",
            "name": "王恩成",
            "avatar_url": "https://mdn.alipayobjects.com/huamei_0prmtq/afts/img/A*khrYRYi6VN0AAAAAAAAAAAAADvuFAQ/original",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-24T12:31:08.000Z",
            "updated_at": "2025-09-19T03:47:55.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "**笔者对P6比较感兴趣，于是尝试构建一个基于需求和问题反馈的工作流**\n\n---\n\n首先，笔者认为需求和问题本质上是一种东西，只不过需求是用户没体验之前的想象，用户用之后的的落差叫问题。这两种东西都需要经过P1给出的解决方案进行拆分转化为技术层面的工程目标，然后进入开发工作流\n\n笔者构建的开发工作流包含三个步骤：组织、实现、验收。\n\n",
        "simhash": 5784348433202553826
    },
    "237682173": {
        "id": 237682173,
        "type": "Doc",
        "slug": "rrrsciayocgqg0ig",
        "title": "信息检索类-伍曼灵",
        "description": "信息聚合平台1.南大网上办事平台https://ehall.nju.edu.cn/ywtb-portal/official/index.html#/hall2.本科生院https://jw.nju.edu.cn3.教务系统elite.nju.edu.cn/jiaowu/4.",
        "cover": "",
        "user_id": 60823232,
        "book_id": 69189148,
        "last_editor_id": 60823232,
        "public": 2,
        "status": 0,
        "likes_count": 2,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 29,
        "created_at": "2025-09-21T02:40:48.000Z",
        "updated_at": "2025-09-23T13:07:50.000Z",
        "content_updated_at": "2025-09-23T13:07:50.000Z",
        "published_at": "2025-09-22T09:00:57.000Z",
        "first_published_at": "2025-09-22T09:00:57.218Z",
        "user": {
            "id": 60823232,
            "type": "User",
            "login": "wumanling-xkqtt",
            "name": "伍曼灵",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60823232/1758080952677-avatar/1c044297-da89-4922-803d-314b0d7832ab.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-17T03:48:40.000Z",
            "updated_at": "2025-09-17T05:01:39.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60823232,
            "type": "User",
            "login": "wumanling-xkqtt",
            "name": "伍曼灵",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60823232/1758080952677-avatar/1c044297-da89-4922-803d-314b0d7832ab.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-17T03:48:40.000Z",
            "updated_at": "2025-09-17T05:01:39.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "信息聚合平台\n\n1.南大网上办事平台[https://ehall.nju.edu.cn/ywtb-portal/official/index.html#/hall](https://ehall.nju.edu.cn/ywtb-portal/official/index.html#/hall)\n\n2.本科生院[https://jw.nju.edu.cn](https://jw.nju.edu.cn)\n\n3.教务系统elite.nju.edu.cn/jiaowu/\n\n4.\n\n",
        "simhash": 10504166930523314924
    },
    "237679819": {
        "id": 237679819,
        "type": "Doc",
        "slug": "lybpq8ydy4ip1qm7",
        "title": "非纯技术类-余铭航",
        "description": "（最后编辑于25.9.23）概述写一写文档编辑细则。进度看上周实践组文档看上周新手组文档想要让llm看，但是中间花了两小时，这两个小时还不如直接看十几篇新手文档找问题……改表格效果编辑完d指导写的文档一二三四后面两章没看到什么作用，删了。添加教程有人能帮我改一下吗www想偷懒正文问了下ds老师...",
        "cover": "",
        "user_id": 60618521,
        "book_id": 69189148,
        "last_editor_id": 2520877,
        "public": 2,
        "status": 1,
        "likes_count": 6,
        "read_count": 0,
        "comments_count": 1,
        "word_count": 1183,
        "created_at": "2025-09-21T02:04:30.000Z",
        "updated_at": "2025-09-24T00:49:58.000Z",
        "content_updated_at": "2025-09-24T00:49:57.000Z",
        "published_at": "2025-09-24T00:49:57.000Z",
        "first_published_at": "2025-09-21T02:47:48.583Z",
        "user": {
            "id": 60618521,
            "type": "User",
            "login": "wurong-ybgf8",
            "name": "余铭航",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60618521/1757590363376-avatar/d566f7d8-301a-4f88-b454-e4b4843be9ad.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-11T11:26:38.000Z",
            "updated_at": "2025-09-20T09:35:07.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 2520877,
            "type": "User",
            "login": "bingbing-xz1ez",
            "name": "苏涵瑜",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/2520877/1755705916885-avatar/63136f6c-7355-4940-b3eb-b8803d51e511.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2020-09-09T20:27:49.000Z",
            "updated_at": "2025-09-02T10:59:03.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "（最后编辑于25.9.23）\n\n## 概述\n写一写文档编辑细则。\n\n## 进度\n- [x] 看上周实践组文档\n- [ ] 看上周新手组文档\n\n> 想要让llm看，但是中间花了两小时，这两个小时还不如直接看十几篇新手文档找问题……\n>\n\n- [ ] 改表格效果\n- [x] 编辑完d指导写的文档\n    - [x] 一\n    - [x] 二\n    - [ ] ~~三~~\n    - [ ] ~~四~~\n\n> 后面两章没看到什么作用，删了。\n>\n\n- [ ] 添加教程\n\n有人能帮我改一下吗www想偷懒\n\n## 正文\n问了下ds老师并且自己做了修改。实际上之前在[链接](https://nova.yuque.com/ph25ri/ua1c3q/dnd5xg3gv3c6pega)的评论下给出的四篇样文基本都遵循这些格式。\n\n### 一、 结构\n1. **使用恰当的标题层级** (`#`, `##`, `###`)\n+ **按顺序嵌套**：避免跳级，例如不要从 `##` 直接跳到 `####`。这就像一本书的章节结构。\n+ **示例**：\n\n```markdown\n# 项目主标题（H1）\n\n## 简介（H2）\n## 安装指南（H2）\n\n### 使用 Docker 安装（H3）\n### 使用源码安装（H3）\n\n## 使用方法（H2）\n## API 参考（H2）\n```\n\n2. **分节**\n\n不要让章节冗长。如果一个 H2 章节下的内容超过好几屏，考虑是否能用更多的子标题（H3-, H4）将其分解。\n\n### 二、格式\n#### 任务进度\n    - 开头使用任务列表表现进度。\n    - 例：\n\n<details class=\"lake-collapse\"><summary id=\"uca7a7c10\"><span class=\"ne-text\">任务样例</span></summary><ul class=\"ne-tl\"><li id=\"ufa9ed262\" data-lake-index-type=\"0\"><input type=\"checkbox\"><span class=\"ne-text\">1.克隆仓库</span></li><li id=\"u00fb7fc6\" data-lake-index-type=\"0\"><input type=\"checkbox\"><span class=\"ne-text\">2.安装依赖</span></li><li id=\"u29c69661\" data-lake-index-type=\"0\"><input type=\"checkbox\"><span class=\"ne-text\">3.启动服务器</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-tl\"><li id=\"u55d1a7fd\" data-lake-index-type=\"0\"><input type=\"checkbox\"><strong><span class=\"ne-text\">有序列表</span></strong><span class=\"ne-text\">：当步骤有严格的先后顺序时使用 (</span><code class=\"ne-code\"><span class=\"ne-text\">1., 2., 3.</span></code><span class=\"ne-text\">)。</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-tl\"><li id=\"u73297f82\" data-lake-index-type=\"0\"><input type=\"checkbox\"><strong><span class=\"ne-text\">无序列表</span></strong><span class=\"ne-text\">：用于表示一组并列的项 (</span><code class=\"ne-code\"><span class=\"ne-text\">-</span></code><span class=\"ne-text\"> 或 </span><code class=\"ne-code\"><span class=\"ne-text\">*</span></code><span class=\"ne-text\">)。</span></li></ul></ul></details>\n#### 代码\n1. 使用代码块整理代码以提高文档简洁性。\n2. 写标题，设置代码语言类型（这样语雀可以自动高亮，提高代码可读性）\n3. 适当分块，写注释\n\n此处以[谷老师的代码](https://nova.yuque.com/ph25ri/ua1c3q/ynl2ma8yc350o7x9)为例：\n\n> 在G学长的推荐下使用了playwright，实现了用爬虫访问语雀的动态页面。\n>\n\n```python\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=False)\n    context = browser.new_context()\n\n    for i in cookie_list:\n        context.add_cookies([{\"name\": i, \"value\": cookie_dict[i], \"domain\": \".yuque.com\", \"path\": \"/\"}])\n\n    page = context.new_page()\n    page.goto(\"https://nova.yuque.com/ph25ri/ua1c3q/ynl2ma8yc350o7x9\")\n```\n\n4. **行内代码**：用反引号 `` ` `` 包裹命令、文件名、参数等，与普通文本区分开。例如：运行 `npm install` 命令。\n\n#### 表格\n+ 使用表格工具整理，不要用分栏工具\n\n#### 粗体与斜体\n+ **加粗** (`**text**`): 用于引起注意，如**警告**、**重要提示**、段落中的关键术语。\n+ _斜体_ (`*text*`): 用于轻微强调或引用。\n\n#### 块引用\n+ 使用折叠块折叠各种原始信息（llm回答，~~peace老师的77000字引用~~等）\n+ 以[我的文档](https://nova.yuque.com/ph25ri/ua1c3q/udzp9664o6dbdviv)为例\n\n> + 如何设定这个时间上限？\n>\n\n<details class=\"lake-collapse\"><summary id=\"u5a78721f\"><span class=\"ne-text\">设定时间上限的方法可以参考以下步骤：</span></summary><ol class=\"ne-ol\"><li id=\"u6baf9521\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">任务评估</span></strong><span class=\"ne-text\">：首先，评估任务的复杂性和所需时间。考虑任务的各个环节和可能遇到的障碍。</span></li><li id=\"u9ed2c2b1\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">设定缓冲时间</span></strong><span class=\"ne-text\">：在估计完成时间的基础上，增加一些缓冲时间。通常可以增加20%-30%的时间，以应对不可预见的情况。</span></li><li id=\"u77b724bd\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">制定时间框架</span></strong><span class=\"ne-text\">：</span></li></ol><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u010d8310\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">短期任务</span></strong><span class=\"ne-text\">：可以设定几天到一周的上限。</span></li><li id=\"u44743261\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">长期任务</span></strong><span class=\"ne-text\">：可能需要设定几周到几个月的时间上限。</span></li></ul></ul><ol start=\"4\" class=\"ne-ol\"><li id=\"uc014a9ac\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">明确截止日期</span></strong><span class=\"ne-text\">：确保将时间上限合理具体化，例如“在9月30日前完成”。</span></li><li id=\"u566efc01\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">定期检查进度</span></strong><span class=\"ne-text\">：在进度中设定检查点，及时评估是否需要求助。比如，如果到了9月20日任务仍未完成50%，则考虑寻求帮助。</span></li><li id=\"u4febcfee\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">求助策略</span></strong><span class=\"ne-text\">：若在设定的时间内未能完成，可以明确谁是“求助对象”，提前联系他们，并准备相关信息以便快速沟通。</span></li></ol><p id=\"u57b6edd5\" class=\"ne-p\"><span class=\"ne-text\">通过上述步骤，可以有效设定任务的完成时间上限，并在必要时寻求他人的帮助。</span></p><p id=\"u25572714\" class=\"ne-p\"><br></p></details>\n+ 用链接注明来源。\n\n#### 引用格式\n引用效果可以用在两个位置：\n\n+ 引用外部文档（自己或他人）\n+ 表达自己的想法（在进度，正文等文字之间）\n\n## 修改情况\n| 修改类型 | 修改时间 | 修改内容 | 修改人 |\n| --- | --- | --- | --- |\n|  | 25.9.21 10:37 |  | 余铭航 |\n| 增进/改动 | 25.9.23 13:44 | 删除正文三，四部分；<br/>对第二部分做了修改；<br/>把“修改情况”改成了表格 | 余铭航 |\n\n\n（怎么改居中）\n\n\n\n\n\n",
        "simhash": 8647613682536065795
    },
    "237679557": {
        "id": 237679557,
        "type": "Doc",
        "slug": "nffy79c6ep9to1mp",
        "title": "实践操作类-汪翰元",
        "description": "选择的问题P5：文档存储P6：工作流搭建P7：用户对交互这件事是挑剔的P9.2：数据采集本周目标：补全基础知识学习实践通过 git 与 github 建立工作流规范程序结构变量命名了解目前整体项目中的相关名词根据张师兄的指导，我将新手组的信息采集、信息筛选任务并呈现至 web 上同时通过 gi...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/58812407/1758638503691-2fd1c9c9-6dac-43f9-8d7f-a66e8215030c.png",
        "user_id": 58812407,
        "book_id": 69189148,
        "last_editor_id": 58845698,
        "public": 2,
        "status": 0,
        "likes_count": 9,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 1022,
        "created_at": "2025-09-21T02:00:04.000Z",
        "updated_at": "2025-09-24T01:08:04.000Z",
        "content_updated_at": "2025-09-24T01:08:04.000Z",
        "published_at": "2025-09-23T15:39:42.000Z",
        "first_published_at": "2025-09-21T02:00:23.221Z",
        "user": {
            "id": 58812407,
            "type": "User",
            "login": "yuqueyonghupanro9",
            "name": "汪翰元",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/58812407/1755658771804-avatar/1bcb9e66-8bff-44ef-8424-16648de58eea.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-19T03:36:50.000Z",
            "updated_at": "2025-09-18T13:35:05.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 58845698,
            "type": "User",
            "login": "dubianxunqingye",
            "name": "邹少乾",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/58845698/1755660353505-avatar/a0258a6d-cf0b-4da6-935d-3f6e42b6d8c6.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-20T09:53:19.000Z",
            "updated_at": "2025-09-19T04:59:26.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 选择的问题\nP5：文档存储\n\nP6：工作流搭建\n\nP7：用户对交互这件事是挑剔的\n\nP9.2：数据采集\n\n### 本周目标：\n+ 补全基础知识\n+ 学习实践通过 git 与 github 建立工作流\n+ 规范程序结构变量命名\n+ 了解目前整体项目中的相关名词\n\n根据张师兄的指导，我将新手组的信息采集、信息筛选任务并呈现至 web 上同时通过 github 学习建立一个工作流这一个小项目作为本周探索的主线，探索之余再了解相关名词对整体项目框架有一个整体认知\n\n### 我的构想\n柏均学长那样使的\n\n### 具体步骤\n+ 获取各类信息源的信息（爬虫、RSS等）\n+ 筛选整理结构化信息\n+ 存储信息（SQlite）\n+ 制作前端部署实现设想\n\n第一步，先复刻一下柏均学长那样的语雀文档检索，但初步打算利用爬虫获取南大官网的通知，理由有二：一、是一个完整的小项目；二、有柏均学长的示范很安心\n\n第二步，在第一步完成后或者第一步中间，探索其他消息源的获取方式，例如公众号\n\n虽然都是前人实现过的，但是探索这个项目本身会让我收获颇丰\n\n## Step 1 爬虫获取南大官网的通知并存储\n像这种成熟的简单技术，我们完全可以使用 LLM 来加速我们的学习，通过 LLM 的代码和注释，快速理解其原理\n\n### Step 1.1 爬取通知\n然而发现万事开头难，一整晚南京大学本科生院 SSL 握手失败，折腾了一番只找到了退 urllib 版本这一个方式（似乎是因为呢喃用了过时的协议？但是我禁用其他协议后依然不行，没搞懂 cac 所说的呢喃封杀了啥）（真的燃尽了，如果有会的求教）\n\n~~然而退版本之后发现其他网页也能正常爬取，那就暂时不管了~~\n\n感谢 cac 感谢学长，原来是呢喃采取了一些反扒措施，使用 curl_cffi 这个库就行了\n\n```python\nfrom curl_cffi import requests\n\nresponse = requests.get(url, headers=headers,timeout=10,impersonate=\"chrome110\")\n```\n\n除此之外 Playwright 库区别于 requests 库可以直接模拟浏览器行为，有效避免动态渲染问题（虽然呢喃本科生院并没有这个问题）~~（那我研究这么久 urllib 退版本是神马鬼，Playwright 秒了）~~\n\n就在我翻阅后面几页的通知时发现，10 页后通知页的后缀变成了 .psp 不知是为何？\n\n### Step 1.2 处理通知数据并结构化\n对于本科生院的通知，我们存储：标题、日期、链接、标签\n\n使用 find 函数可以很好的定位数据位置\n\n```python\n for i in range(1,10):\n            url_=url+f\"list{i}.htm\"\n            page.goto(url_, wait_until=\"networkidle\")\n            html_content = page.content()\n            print(f\"网页 {i} 获取成功，正在解析内容...\")\n            soup = BeautifulSoup(html_content, 'html.parser')\n            notice_list_ul = soup.find('ul', class_='news_list list2')\n\n            if not notice_list_ul:\n                print(f\"未找到通知列表 {i}\")\n            else:\n                for li in notice_list_ul.find_all('li'):\n                    title = li.find('a').get_text(strip=True)\n                    date = li.find('span',class_=\"news_meta\").get_text(strip=True)\n                    herf = url_+li.find('a')['href']\n                    i = 0\n                    tags = []\n                    tag = li.find('span', class_ = f'n n{i}')\n                    while tag:\n                        tags.append(tag.get_text(strip=True))\n                        i += 1\n                        tag = li.find('span', class_ = f'n n{i}')\n                    notices.append({\"title\": title, \"date\": date, \"herf\": herf,\"tags\": \",\".join(tags)})\n```\n\n### Step 1.3 使用 SQLite 存储数据至 db 文件\n唤醒了高中信息课本的记忆\n\n直接将之前的字典 insert 进去\n\n![](https://cdn.nlark.com/yuque/0/2025/png/58812407/1758638503691-2fd1c9c9-6dac-43f9-8d7f-a66e8215030c.png)\n\n```python\nconn = sqlite3.connect('information.db')\n    cursor = conn.cursor()\n    cursor.execute('''\n        CREATE TABLE IF NOT EXISTS notices(\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            title TEXT,\n            date TEXT,\n            herf TEXT,\n            tags TEXT\n        )\n    ''')\n    cursor.executemany('''\n        INSERT INTO notices (title, date, herf, tags) \n        VALUES (:title, :date, :herf, :tags)\n    ''', notices)\n    conn.commit()\n```\n\n## Step 2 尝试利用 LLM 搞一个前端\n这步就是以前几乎没有涉足的领域了，~~感觉真就 vibecoding~~\n\n发现 LLM 的实力有点强大，稍微纠错就能用了，我尝试将所有详细需求告诉他，然后研究一下前端代码\n\n\n\n",
        "simhash": 12784883699552028449
    },
    "237678608": {
        "id": 237678608,
        "type": "Doc",
        "slug": "kyxxmmgssiz21g86",
        "title": "NOVA研究：反思、变革与重定向",
        "description": "“炮打司令部——我的一张大字报”（bushi在这篇文档的最开头，笔者先给出现阶段NOVA研究最基本的学科框架雏形，以期能为NOVA的各位同仁提供一个综观视野。在这篇文档剩余内容中，笔者将围绕着以下几个问题展开论述。1.NOVA目前面临着哪些问题？2.为什么笔者认为当下的NOVA迫切地需要一次“...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/60789490/1758419133351-627c54c7-d2ae-477f-9bc2-0b23e2be5f83.png",
        "user_id": 60789490,
        "book_id": 69189148,
        "last_editor_id": 60789490,
        "public": 2,
        "status": 1,
        "likes_count": 12,
        "read_count": 0,
        "comments_count": 1,
        "word_count": 262,
        "created_at": "2025-09-21T01:40:54.000Z",
        "updated_at": "2025-09-24T02:14:05.000Z",
        "content_updated_at": "2025-09-21T01:49:11.000Z",
        "published_at": "2025-09-21T13:42:12.000Z",
        "first_published_at": "2025-09-21T01:49:10.857Z",
        "user": {
            "id": 60789490,
            "type": "User",
            "login": "u59109965",
            "name": "卢星宇",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60789490/1758027935515-avatar/3b36cd8a-dc09-4711-9eb1-7213b4b97820.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-16T13:03:57.000Z",
            "updated_at": "2025-09-22T09:40:29.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60789490,
            "type": "User",
            "login": "u59109965",
            "name": "卢星宇",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60789490/1758027935515-avatar/3b36cd8a-dc09-4711-9eb1-7213b4b97820.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-16T13:03:57.000Z",
            "updated_at": "2025-09-22T09:40:29.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "> “炮打司令部——我的一张大字报”（bushi\n>\n\n\n\n<font style=\"color:#000000;\">在这篇文档的最开头，笔者先给出现阶段NOVA研究最基本的学科框架雏形，以期能为NOVA的各位同仁提供一个综观视野。</font>\n\n![](https://cdn.nlark.com/yuque/0/2025/png/60789490/1758419133351-627c54c7-d2ae-477f-9bc2-0b23e2be5f83.png)\n\n在这篇文档剩余内容中，笔者将围绕着以下几个问题展开论述。\n\n+ 1.NOVA目前面临着哪些问题？  \n\n+ 2.为什么笔者认为当下的NOVA迫切地需要一次“大讨论”与“大变革”？  \n\n+ 3.NOVA过去是什么，现在是什么，以及未来将会是什么？  \n\n+ 4.NOVA研究（“NOVA学”）是什么，有着什么样的价值和意义？  \n\n+ 5.NOVA研究（“NOVA学”）如何发展，以及NOVA研究的发展需要些什么？\n\n<font style=\"color:#000000;\"></font>\n\n<font style=\"color:#000000;\">以上五个问题构成了全篇核心的五大</font>**<font style=\"color:#000000;\">问题意识</font>**<font style=\"color:#000000;\">。</font>\n\n### 一、反思与变革  \n\n### 二、回顾与展望  \n\n### 三、学科框架  \n\n### 四、研究范式  \n\n \n\n<font style=\"color:#000000;\"></font>\n\n",
        "simhash": 4072688886394113829
    },
    "237677810": {
        "id": 237677810,
        "type": "Doc",
        "slug": "sehe5gdshkri3z9i",
        "title": "实践操作类-倪睿萱",
        "description": "前言事已至此先补课吧。由于缺乏基本常识，很难做到自上而下。给自己一周+部分国庆的时间，先把数据获取与处理吃透。我不行了概念一串接一串，先学，空了再整理完善语雀信息获取一、JSON数据处理(一) 语法规则（能读懂）JSON语法与理解数据在名称/值对中数据由逗号 , 分隔使用斜杆 \\ 来转义字符大...",
        "cover": "",
        "user_id": 59160948,
        "book_id": 69189148,
        "last_editor_id": 59160948,
        "public": 2,
        "status": 0,
        "likes_count": 9,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 539,
        "created_at": "2025-09-21T01:23:49.000Z",
        "updated_at": "2025-09-24T02:28:14.000Z",
        "content_updated_at": "2025-09-24T02:28:14.000Z",
        "published_at": "2025-09-22T09:31:06.000Z",
        "first_published_at": "2025-09-22T09:31:06.130Z",
        "user": {
            "id": 59160948,
            "type": "User",
            "login": "shixubushixie",
            "name": "倪睿萱",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59160948/1755659125138-avatar/c96fd534-af48-4504-ae56-56bf82b47ea1.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-29T01:43:04.000Z",
            "updated_at": "2025-09-21T10:21:35.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59160948,
            "type": "User",
            "login": "shixubushixie",
            "name": "倪睿萱",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59160948/1755659125138-avatar/c96fd534-af48-4504-ae56-56bf82b47ea1.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-29T01:43:04.000Z",
            "updated_at": "2025-09-21T10:21:35.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "### 前言\n<font style=\"color:#74B602;\">事已至此先补课吧。</font>\n\n由于缺乏基本常识，很难做到自上而下。给自己一周+部分国庆的时间，先把数据获取与处理吃透。\n\n\n\n<font style=\"color:#74B602;\">我不行了概念一串接一串，先学，空了再整理</font>\n\n\n\n\n\n### 完善语雀信息获取\n#### JSON数据处理\n##### 语法规则（能读懂）\n<details class=\"lake-collapse\"><summary id=\"ud0ce1b61\"><span class=\"ne-text\">JSON语法与理解</span></summary><ul class=\"ne-ul\"><li id=\"u132423f6\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">数据在</span><strong><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(236, 234, 230); font-size: 14px\">名称/值</span></strong><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">对中</span></li><li id=\"u8d00cb0d\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">数据由逗号</span><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\"> </span><strong><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(236, 234, 230); font-size: 14px\">,</span></strong><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\"> </span><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">分隔</span></li><li id=\"u3cea5502\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">使用斜杆</span><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\"> </span><strong><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(236, 234, 230); font-size: 14px\">\\</span></strong><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\"> </span><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">来转义字符</span></li><li id=\"u49930040\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">大括号</span><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\"> </span><strong><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(236, 234, 230); font-size: 14px\">{}</span></strong><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\"> </span><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">保存对象</span></li><li id=\"u1500fe8b\" data-lake-index-type=\"0\"><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">中括号 </span><strong><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(236, 234, 230); font-size: 14px\">[]</span></strong><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\"> 保存数组，数组可以包含多个对象</span></li></ul><p id=\"u60488697\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">JSON 中数组值必须是合法的 JSON 数据类型（字符串, 数字, 对象, 数组, 布尔值或 null）。</span></p><p id=\"u141ce026\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">对象-字典   数组-列表</span></p><p id=\"u90386081\" class=\"ne-p\"><strong><span class=\"ne-text\">用对象来描述事物的结构，用数组来处理这个结构中“一对多”的列表部分</span></strong><span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(250, 252, 253); font-size: 14px\">。  </span></p></details>\n##### 处理语法和工具\n###### \n\n\n\n\n\n\n### 从呢喃公众号上获取信息并清洗\n\n\n### 其他\n#### 前端开发必用工具\n在前端开发中，这三者的分工非常明确，再次用我们之前“房子”的比喻：\n\n+ **HTML (标记语言)**\n    - **角色**：房子的**骨架/结构** (The Nouns)。\n    - **作用**：定义页面的内容和结构。这是什么？——这是一个段落 (`<p>`)，那是一个图片 (`<img>`)，这是一个一级标题 (`<h1>`)。\n+ **CSS (样式表语言)**\n    - **角色**：房子的**装修/外观** (The Adjectives)。\n    - **作用**：描述页面的样式。这个段落是什么样的？——字体是黑体，颜色是灰色。这个标题是什么样的？——字号是24像素，居中显示。\n+ **JavaScript (编程语言)**\n    - **角色**：房子的**功能/交互** (The Verbs)。\n    - **作用**：控制页面的行为和逻辑。当用户**点击**这个按钮时，**会发生**什么？当页面**滚动**到最底部时，**去加载**更多内容。\n\n",
        "simhash": 8656250742648638665
    },
    "237677450": {
        "id": 237677450,
        "type": "Doc",
        "slug": "bm7eauq09m5gb1fb",
        "title": "实践操作类-梁建輝",
        "description": "AI方向任务1：数据价值自动筛选前言我觉得我我只是略懂python的一些基础语法(从print(\"hello world\")~后面的dict),还是对于一些第三方库没有太大的了解(可以看Python学习的那边的文档去进一步补充基础),最集中于就是尝试过使用机器学习去预测房屋价格(但是这是很基础...",
        "cover": "",
        "user_id": 59523533,
        "book_id": 69189148,
        "last_editor_id": 59523533,
        "public": 2,
        "status": 1,
        "likes_count": 8,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 656,
        "created_at": "2025-09-21T01:14:32.000Z",
        "updated_at": "2025-09-23T06:55:15.000Z",
        "content_updated_at": "2025-09-22T14:14:22.000Z",
        "published_at": "2025-09-22T14:14:22.000Z",
        "first_published_at": "2025-09-21T01:15:26.723Z",
        "user": {
            "id": 59523533,
            "type": "User",
            "login": "u57864098",
            "name": "梁建辉",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59523533/1755658657436-avatar/ecbbd303-986f-4a98-8ce4-0b9d52a694ab.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-09T06:33:59.000Z",
            "updated_at": "2025-09-21T03:52:59.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59523533,
            "type": "User",
            "login": "u57864098",
            "name": "梁建辉",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59523533/1755658657436-avatar/ecbbd303-986f-4a98-8ce4-0b9d52a694ab.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-09T06:33:59.000Z",
            "updated_at": "2025-09-21T03:52:59.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "# AI方向\n## 任务1：数据价值自动筛选\n### 前言\n我觉得我我只是略懂python的一些基础语法(从print(\"hello world\")~后面的dict),还是对于一些第三方库没有太大的了解(可以看Python学习的那边的文档去进一步补充基础),最集中于就是尝试过使用机器学习去预测房屋价格(但是这是很基础的),所以这次任务中我选择了一个相对比较简单的任务,我觉得他的应用方面还有他的学习方面是比较好的\n\n### 配置环境（ AI的力量）\n##### 先使用Anaconda prompt 创造一个全新的虚拟环境，IDE是clion\n```bash\nconda create -n dl-clion python=3.10 -y\nconda activate dl-clion\n\n# 建议先启用 strict channel priority 并加 conda-forge，这个是应该想的我也不知道为什么\nconda config --env --add channels conda-forge\nconda config --env --set channel_priority strict\n```\n\n#####  GPU / 基础加速库:\n```bash\nconda install -c conda-forge cudatoolkit=11.8 cudnn -y\n```\n\n#####  深度学习框架（主流：PyTorch / TensorFlow）  ,TensorFlow主要是拿来看看以前的项目是怎么做的,主要主流还是PyTorch:\n```bash\n# 示例（CUDA 11.8），命令以 PyTorch 官方 Get Started 页面为准\nconda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia -y\n# 简单方式（conda-forge）,这个好像有机会出错\nconda install -c conda-forge tensorflow -y\n#试一下,如果不行你记得清一下,然后再用下面这个(cpu)\nconda remove tensorflow tensorflow-base -y\npip install \"tensorflow==2.10.*\"\n```\n\n#### 视觉（人脸识别）相关模块\n##### OpenCV（图像处理、摄像头、视频接口):\n```bash\nconda install -c conda-forge opencv -y\n```\n\n#####  dlib（人脸关键点、很多 face-recognition 库依赖它）：  \n```bash\nconda install -c conda-forge dlib -y\n```\n\n##### face_recognition（Python 高层封装，基于 dlib）这个包常用 pip安装（conda 上不一定有最新版），并且依赖已安装的 dlib：  \n```bash\n# 在激活的 conda 环境里\npip install face_recognition\n```\n\n#####  InsightFace（更先进的人脸嵌入/识别工具；也可通过 conda-forge 获得）：\n```bash\nconda install -c conda-forge insightface -y\n```\n\n####  语音 / 音频（语音识别与处理 \n#####  librosa（音频特征、STFT、MFCC 等）\n```bash\nconda install -c conda-forge librosa -y\n```\n\n#####  torchaudio（如果用 PyTorch 生态） ，温馨提示我没有运行\n```bash\n# 已包含在 PyTorch 安装示例里（若未包含，可单独安装）\nconda install -c pytorch torchaudio -y\n```\n\n####  常用 Python 科学/工具包（一次性装好减少后续冲突）\n##### Python 科学/工具包\n```bash\nconda install -c conda-forge numpy scipy pandas scikit-learn matplotlib jupyterlab notebook -y\n```\n\n###   在思考如何获取数据😰\n\n\n  \n\n",
        "simhash": 10061195856839335379
    },
    "237677332": {
        "id": 237677332,
        "type": "Doc",
        "slug": "twn2vk5k63gpkfdg",
        "title": "实践操作类-张润程",
        "description": "项目协作的设想我在GitHub项目协作的不完全指南中已经对通过GitHub合作的方式进行了详细的说明。不过，陈柏均学长提出使用https://git.nju.edu.cn,优点在于网络环境更加友善，并且此站点基于的GitLab提供的团队账号方案更加合理，所以我们暂时没有完全确定合作形式。我从情...",
        "cover": "",
        "user_id": 59052738,
        "book_id": 69189148,
        "last_editor_id": 59052738,
        "public": 2,
        "status": 1,
        "likes_count": 16,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 6567,
        "created_at": "2025-09-21T01:11:27.000Z",
        "updated_at": "2025-09-23T14:06:47.000Z",
        "content_updated_at": "2025-09-22T08:29:31.000Z",
        "published_at": "2025-09-22T08:29:31.000Z",
        "first_published_at": "2025-09-21T01:11:47.463Z",
        "user": {
            "id": 59052738,
            "type": "User",
            "login": "runnel",
            "name": "张润程",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59052738/1757857361924-avatar/29e94643-3411-4c55-8eb9-3bb2cb2d3669.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-26T04:41:47.000Z",
            "updated_at": "2025-09-17T10:24:16.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59052738,
            "type": "User",
            "login": "runnel",
            "name": "张润程",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59052738/1757857361924-avatar/29e94643-3411-4c55-8eb9-3bb2cb2d3669.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-26T04:41:47.000Z",
            "updated_at": "2025-09-17T10:24:16.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 项目协作的设想\n我在**GitHub项目协作的不完全指南**中已经对通过GitHub合作的方式进行了详细的说明。不过，陈柏均学长提出使用[https://git.nju.edu.cn](https://git.nju.edu.cn),优点在于网络环境更加友善，并且此站点基于的GitLab提供的团队账号方案更加合理，所以我们暂时没有完全确定合作形式。我从情感上自然希望通过GitHub进行合作，但我觉得这个问题需要参考大家的实际情况。\n\n[GitHub项目协作的不完全指南](https://nova.yuque.com/ph25ri/ua1c3q/btag7pk04rf77y94)\n\n## 对项目要求的初步分析\n我先对cac老师在[实践操作类](https://nova.yuque.com/ph25ri/ua1c3q/sgktml44pkt9leye)中提出的需求进行一个初步的分析吧，因为还没有更深入地去检索和了解，可能有不合理的地方，请多多包涵。\n\n> 我们简单复盘过需求，所以项目可以近似认为是一种信息流\n>\n> + 获取数据/信息的技术\n>     - 从语雀获取\n>\n\n这个不用说了，我们实践组在上一次已经完成了这个任务。但有一个问题，正如cac老师所言，信息的迭代仍然是一个问题。当我们不去转化成知识库时，这个问题好办，只需要让新获得的文本覆盖掉旧文本就可以了；但如果是知识库呢？我们真的能准确定位需要修改的部分把它替换掉吗？更高级一点的情况，也许信息的迭代根本不是通过“旧文档”——>“新文档”的方式，而是在别的形式的信息里完成了信息更新，我们又真的能准确定位修改吗？把这种任务在任何程度上交给LLM都是风险很高的事。这是一个需要细细思考的问题。\n\n> + 从QQ获取\n> + 从微信获取\n>\n\n目前监听QQ已经很成熟了，监听微信自然有类似的手段，但共同点在于容易出现账号被风控的问题。我觉得采用逆向聊天记录的存储是一种更安全的方法。这里有一个完整封装的轮子：[sjzar/chatlog](https://github.com/sjzar/chatlog)。但是一方面，它的很多功能对这个项目是没有必要的；另一方面，这是通过Go实现的，而我们更希望通过Python实现全流程。如何仅仅提取其中获取微信和QQ信息的逻辑并改用Python进行实现，这也是一项需要的工作。\n\n> + 从公众号、网页、视频站点获取\n>\n\n这个某种意义上不算难；公众号大概率可以通过RSS等手段进行推送，我们可以据此实时获取；网页可以通过爬虫手段。视频站点的视频内容可能是一个问题，比较大众的平台一般会有民间的工具对视频内容进行总结，小众的平台恐怕不好办。我不认为下载到本地再通过某些模型进行处理是非常聪明的手段，何况涉及到视频的问题会对视频的大小、格式等等有很大限制，并且会消耗巨量token。这个可能需要再考虑。\n\n> + 预处理/加工信息的技术\n>     - 数据价值筛选/分类\n>\n\n首先，我们需要明确什么是“有价值”的文本数据。可以通过基本的匹配去除大量常见的无用信息。比如：去除完全无关的文本（如广告、模板内容、乱码）； 过滤极短或极长的文档（根据场景设定阈值）；识别并删除重复或近乎重复的内容（使用MinHash或SimHash算法）。判断我们定义的价值也许还需要我们自己搜集和整理一部分“高价值”和“低价值”的数据然后进行初步的训练，或者甚至需要对时效性、深刻性等等进行评分。这样的处理太耗时间了，我觉得只能作为备用。\n\n> + 数据标签\n> + 分词器\n>\n\n怎么说呢，我觉得Python里一个名叫`jieba`的库通过最方便的形式已经实现这一点了；我在我家bot项目中的`tangut`插件中使用了此类功能。当然实现更智能的标签提取还需要细化，比如手搓一小段代码注明数据来源作为标签的一部分，也可以通过数据来源来判断数据的可信度，而关键词标签的提取可以通过向量式的方法判断，比如Word2Vec + 聚类。还有时间戳等等，这些各种各样的标签可以存储在`json`文件里便于调用。这个实际上也很值得优化，以及思考需要提取哪些信息作为标签。\n\n当然，有一个开源的机器学习库也许可以实现以上全部内容：[Apache OpenNLP](https://opennlp.apache.org)\n\n（使用LLM确实方便强大，但是可能有点大材小用，而且很可能出现幻觉，对需要准确性的信息整理还是需要警惕的）\n\n> + 特殊类型数据处理（图片、表格、公式、表情包maybe）\n> + LLM处理工作流/智能体\n>\n\n特殊类型数据处理我觉得可以去看看我的另一个项目[ChouYuanjue/PDF_Summary_Tool](https://github.com/ChouYuanjue/PDF_Summary_Tool)，我在这个项目的思路就是自动将整页文本切块成图片/文本/表格/行间公式/行内公式等等，分别送给不同的模型（比如文本就送给OCR，图片就送给VLM）或者构建不同的提示词。当然在这里我们可能没必要引入一个切块的小模型，但是分类型送给不同模型的思路是可以借鉴的。至于LLM处理工作流/智能体相关的实现也是我比较好奇的问题，我觉得如果智能体有能力调用用户自定义的“函数”将会是很令人兴奋的进步，不过似乎和这个项目关系不大。我听闻学长说训练达到这样的目的需要强化学习，在这里对我们太超纲了，还是以如何寻找现有接口/工具达到目的为导向吧。\n\n> + 信息输出的技术\n>     - Webhook、Rss、Mail等传统技术\n>\n\n有很成熟的技术了。我在RSSHub上找到了关于语雀文档的RSS推送，一个问题是他没解决需要token的情况，另一个问题是语雀的自动更新可能会导致大量无用推送（关于这个，我突然发现可以只查看发布的版本，那自动更新的问题也许可以解决）。实际上就算没有自动更新也肯定有大量无用推送，比如我自己就经常为了一两个字母的大小写去修改一遍文档。如何判断推送的时机？比对修改前后的向量是否是一个更好的方案呢？向量过大怎么办？这些方案可能都还不够鲁棒。\n\n至于Webhook，同样有仓库针对语雀进行了构建（[SenLief/yuque-webhook](https://github.com/SenLief/yuque-webhook)），~~同样没有解决token问题。~~我发现语雀官方提供了Webhook接口，所以完全不需要参考这个轮子；这个轮子实际上是在通过语雀提供的Webhook让其成为后端编辑器，和我们目前的需求没什么关系。Mail方式虽然是最常用的（实际上前面的几种实现现在已经用的不多了），但我觉得不算太好；大家不一定希望邮箱被推送信息堆满，反而导致忽视了重要邮件。\n\n当然上面说的token问题不一定非要解决。我们最终目的是推送一个整合各平台信息的版本，又不是说非得通过语雀。如果我们在别的地方进行此类信息的存储，什么时候推送其实也可以由人工控制，比如文档作者在完成编写后自己判断是否有为了此修改进行全局推送的必要\n\n> + QQbot\n>\n\n这个不用多说了。完全可以当成另一种意义上的前端。\n\n> + 前端页面交互\n>\n\n我觉得我在上一个项目做的问答式交互前端是可以接受的；当然离我们的目标还差的很远。由于我完全没有前端开发经验，这个任务我是没法做了。\n\n## 一些指导\n今天和cac老师进行了一些交流，重新界定了我们这个项目的目的。实现最终的全流程并不是非常重要的部分，我们主要希望通过这个项目实现这样的结果：\n\n+ 通过完成任务，让更多组员熟悉使用Python的开发，初步对齐大家的实践操作能力和相关知识。\n+ 培养大家对于项目的拆解和思考能力。比如cac老师希望我分享的一些问题：怎么找轮子、在哪里找、找什么样的轮子？什么时候需要改轮子？什么时候手搓轮子其实更好？\n+ 构建一个未来协作开发的框架（我目前的主要任务）\n\n我会对构建项目的重要思考方法进行一个完全个人性质的总结，也就是说这些思路不一定是非常正确的，仅仅可以作为参考：\n\n1. **知识体系构建**：你需要了解以现有的技术哪些功能是可以实现的、哪些功能是已经实现的、哪些功能实现非常困难，以及实现可能需要什么工具。这可能是一个需要经验才能拥有的能力，但不需要什么编程水平。善用各种信息搜索途径，多去了解各种各样项目的实现原理，这些原理可能会自然而然出现在你后续的项目构建思路中。\n2. **需求拆解**：对项目的需求进行细化非常重要，你需要根据自己的知识存储把需要拆解成你确定可以自己实现或者已知别人已经有过类似实现的若干小部分。有的需求可能超纲了，你可能需要和对方协调或者设想一些奇招淫巧去“表面地”实现这些问题。\n3. **搜集和阅读文档**：直接阅读官方文档非常重要。很多平台提供了面向开发者的工具，完全没必要自己去瞎撞。比如语雀就提供了官方的Webhook推送。在后期我们可能会遇到需要为了节约经济成本去自己封装一些api的情况（比如gemini api实在太贵了，我们根据免费的网页端去封装一个便于开发调用的api），但这些不是最紧要的问题。\n4. **轮子的搜集和使用**：虽然我一直声称我这种喜欢从轮子出发构建项目的思路是错误的，并且这种形式确实有上限，但这并不意味着轮子真的有这么不堪。大家不要对轮子很反感，它们对初学者非常重要。轮子并不是想象中有人完成了就可以拿过来直接用的东西，实际上Python中每个库都是一个轮子，像NumPy,PyTorch，但实际使用的难度大家应该很清楚。和需求直接对应的轮子只是最基本的对轮子的认知，我们还应当学会从一些看似八竿子打不着的项目的实现逻辑中提取一些我们可以借鉴复用的部分。另一个方面，有的复杂但是成熟的轮子确实没有去手搓的必要，而且大概率我们也没有手搓的水平。像QQbot框架这种需要长期和tx斗智斗勇的项目是好几批开发者共同努力的结果，我们作为初学者希望从头手搓基本上是天方夜谭。（当然QQbot开源框架的鼻祖mirai的开发者在项目完成时也不过是一个高中生，他确实做到了从0开始手搓，并且mirai框架至今影响深远。这种怪物级别的大佬我们确实没法碰瓷）。使用轮子——>修改轮子——>手搓轮子，这是所有人都要经历的流程，也是开源社区的意义所在。一些找轮子的方向：\n    1. **Python第三方库**：最基本也是最容易被忽略的部分。Python有很多非常好用的库，但你可能都没有听说过。\n    2. **开源社区**：GitHub上面的东西多的超乎你想象。\n    3. **HuggingFace**：你不知道人类在各种模型的开发上已经做到了多么可怕的一个地步。\n    4. **网络API**：为什么我们要把所有工作都交给本地呢？\n5. **中间层思想**：某位计算机学者说过（名字忘了）,**任何问题都可以通过增加一个中间层解决；如果没有解决，证明你加的中间层不够多。**我在另一个试图训练融合emoji的AI项目中通过这个思想找到了很完美的解决方案。中间层和一开始我们进行的拆解不同之处在于，这个中间层的构造经常非常取巧、不常规，而且不是在整体规划中产生，通常是在开发期落实某些细节时或者进行优化时才会去有意构建的。\n\n## 任务分组与实现指南\n按照cac老师的要求，我根据我上方说过的初步思路对任务进行了拆解和分组，也在LLM帮助下补充了一些可能有用的工具和学习内容，供大家参考。也欢迎修改完善。\n\n### 新手组\n边做边学是很好的策略，以下都是一些可以即学即用的技术：\n\n#### 任务1: 从语雀获取数据(虽然我们上周做了，但还不完善)\n**实现思路**:\n\n+ 使用语雀官方API，通过定期轮询方式获取文档内容（或许结合Webhook获取更新）\n+ 处理API认证(token)和请求频率限制\n+ 将获取的内容存储为本地markdown文件或结构化JSON格式\n\n**可能需要学习**:\n\n+ Python requests库的基本使用\n+ HTTP协议和RESTful API概念\n+ JSON数据处理\n+ API认证机制(OAuth/token)\n\n**可能有用的工具**:\n\n+ 语雀官方API文档\n+ Postman(用于API测试)\n+ Python虚拟环境管理工具\n\n#### 任务2: 从公众号和网页获取数据\n**实现思路**:\n\n+ 公众号通过RSS订阅源(如RSSHub)获取更新\n+ 如果公众号没有RSS订阅源，考虑使用其他方法(如采用爬虫手段或者Playwright模拟点击)\n+ 网页内容使用爬虫工具提取文本信息\n\n**可能需要学习**:\n\n+ RSS格式解析\n+ 网络爬虫基础原理\n+ HTML结构解析\n+ 基本的反爬虫策略\n\n**可能有用的工具**:\n\n+ Feedparser(RSS解析库)\n+ BeautifulSoup(HTML解析)\n+ Scrapy框架(高级爬虫需求)\n+ Selenium或者Playwright(动态网页交互)\n\n#### 任务3: 基础数据预处理\n**实现思路**:\n\n+ 使用正则表达式识别和去除广告、模板内容\n+ 设置文本长度阈值过滤无效内容\n+ 实现SimHash算法识别和删除重复内容\n\n**可能需要学习**:\n\n+ 正则表达式语法\n+ SimHash算法原理\n+ 基本文本清洗技术\n\n**可能有用的工具**:\n\n+ Python re模块(正则)\n+ SimHash Python实现库\n\n---\n\n### 进阶组\n#### SE方向\nSE（软件工程）方向关注系统集成、工程优化和前端开发。\n\n###### 任务1: 微信/QQ聊天记录获取(Python实现)\n**实现思路**:\n\n+ 分析sjzar/chatlog项目的Go实现逻辑\n+ 提取核心的聊天记录解析算法\n+ 用Python重新实现数据提取模块\n+ 设计统一的数据输出格式\n\n**可能需要学习**:\n\n+ Go语言基础(用于理解原项目)\n+ Python与系统级API交互\n+ 数据库解析技术(SQLite等)\n+ 跨语言项目迁移策略\n\n**可能有用的工具**:\n\n+ PyO3(Python与Rust/Go交互)\n+ SQLite(好用且常用的数据库引擎)\n+ Wireshark(网络流量分析)\n\n###### 任务2: 信息推送系统集成\n**实现思路**:\n\n+ 实现Webhook接收和发送机制\n+ 或者集成RSS生成和推送功能\n+ 设计邮件推送模板系统\n+ 开发统一的消息推送API\n\n**可能需要学习**:\n\n+ Webhook原理和实现\n+ RSS协议规范\n+ 邮件发送协议(SMTP等等)\n+ API设计原则\n\n**可能有用的工具**:\n\n+ Flask/Django(Web框架)\n+ Feedgen(RSS生成库)\n+ SendGrid/Mailgun(邮件服务API)\n+ Python的smtplib库(发送邮件)\n\n###### 任务3: 前端交互界面开发\n**实现思路**:\n\n+ 可基于我的问答式前端进行扩展\n+ 实现信息流展示界面\n+ 添加过滤和搜索功能\n+ 设计响应式布局\n\n**可能需要学习**:\n\n+ HTML/CSS/JavaScript基础\n+ 前端框架(React/Vue)\n+ RESTful API调用\n+ 响应式设计原则\n\n**可能有用的工具**:\n\n+ React/Vue框架\n+ Bootstrap/Tailwind CSS\n+ Axios(HTTP客户端)\n+ Streamlit(快速开发Web应用，就是我上次用的)\n\n#### AI方向\nAI（人工智能）方向关注数据处理、模型训练和智能应用。\n\n###### 任务1: 数据价值自动筛选\n**实现思路**:\n\n+ 收集和标注训练数据(高价值/低价值文本)\n+ 训练文本分类模型(BERT等)\n+ 集成时效性评估模块\n+ 开发内容质量评分系统\n\n**可能需要学习**:\n\n+ 机器学习基础\n+ 文本分类算法\n+ 模型训练和评估\n+ 特征工程\n\n**可能有用的工具**:\n\n+ Scikit-learn\n+ Hugging Face Transformers\n+ TensorFlow/PyTorch\n\n###### 任务2: 智能标签提取系统\n**实现思路**:\n\n+ 实现基于规则的基础标签提取\n+ 开发关键词提取算法(TF-IDF/TextRank)\n+ 集成语义标签提取(Word2Vec+聚类)\n+ 设计标签管理和存储方案\n\n**可能需要学习**:\n\n+ 自然语言处理基础\n+ 关键词提取算法\n+ 词向量技术\n+ 聚类算法\n\n**可能有用的工具**:\n\n+ Jieba分词\n+ Gensim(Word2Vec实现)\n+ SpaCy(NLP库)\n\n###### 任务3: 多模态数据处理\n**实现思路**:\n\n+ 对数据进行切块分类（图片/文本/公式，如果给你一份扫描版的pdf文件，先分块再识别有利于提高准确度）\n+ 开发图片内容识别和描述模块\n+ 实现表格数据提取和结构化\n+ 设计公式识别和处理流程\n+ 集成表情包分类和识别\n\n**可能需要学习**:\n\n+ 计算机视觉基础\n+ OCR技术\n+ 多模态机器学习\n+ 图像处理技术\n\n**可能有用的工具**:\n\n+ Google Cloud Vision API(OCR)\n+ Gemini(多模态模型，用于图片内容识别和描述)\n+ OpenCV(图像处理)\n+ Python的Pillow库(处理图片)\n\n---\n\n### 挑战组\n包含（我觉得）目前不太容易实现的问题，需要深入研究或创新解决方案\n\n#### 任务1: 知识库动态更新机制\n**实现思路**:\n\n+ 研究向量数据库在知识更新中的应用\n+ 开发内容变更检测和差异分析算法\n+ 设计知识库版本管理方案\n+ 实现语义级内容更新而非简单覆盖\n\n**可能需要学习**:\n\n+ 向量数据库原理\n+ 差异算法研究\n+ 版本控制系统原理\n+ 语义相似度计算\n\n**可能有用的工具**:\n\n+ ChromaDB/FAISS/milvus/...(向量数据库)\n+ Git内部原理(可以作为版本控制的参考)\n+ Embedding模型（用于文本向量化）\n\n#### 任务2: 跨平台信息关联与去重\n**实现思路**:\n\n+ 开发跨平台内容相似度检测\n+ 设计统一的信息标识符系统\n+ 实现基于语义的内容去重\n+ 构建信息溯源和关联网络\n\n**可能需要学习**:\n\n+ 图数据库技术\n+ 高级相似度算法\n+ 信息理论\n+ 知识图谱构建\n\n**可能有用的工具**:\n\n+ Neo4j(图数据库)\n+ NetworkX(图计算)\n+ Dedupe库(去重算法)\n\n#### 任务3: 视频内容自动摘要\n**实现思路**:\n\n+ 集成视频语音识别(STT)技术\n+ 开发关键帧提取和分析模块\n+ 实现多模态内容摘要生成\n+ 设计高效的视频处理流水线\n\n**可能需要学习**:\n\n+ 语音识别技术\n+ 视频处理基础\n+ 多模态融合技术\n+ 分布式处理\n\n**可能有用的工具**:\n\n+ Whisper(语音识别)\n+ FFmpeg(视频处理)\n+ MoviePy(视频编辑)\n\n#### 任务4: 智能更新推送决策系统\n**实现思路**:\n\n+ 开发内容变更重要性评估模型\n+ 设计个性化推送策略\n+ 实现推送时机智能决策\n+ 构建用户反馈学习机制\n\n**可能需要学习**:\n\n+ 推荐系统原理\n+ 强化学习基础\n+ 用户行为分析\n+ A/B测试方法\n\n**可能有用的工具**:\n\n+ Redis(实时数据处理)\n+ Kubernetes(部署复杂系统)\n+ MLflow(机器学习工作流管理)\n\n#### 任务5: 智能体自定义函数调用\n我个人对这个最感兴趣，所以稍微写得详细了一点。\n\n**实现思路**:\n\n+ 研究现有LLM函数调用机制(如OpenAI的function calling还有cursor的AI agent)\n+ 设计统一函数描述规范(名称、参数、返回值、描述)\n+ 开发函数注册与管理系统，允许动态添加用户自定义函数（通过自然语言描述生成）\n+ 实现LLM与函数调用的安全交互机制\n+ 构建函数调用结果处理和错误恢复流程\n+ 开发函数调用历史记录和调试界面\n\n**技术路线**:\n\n1. **基础框架搭建**:\n    - 使用LangChain或自定义框架作为基础\n    - 实现函数描述符标准化(JSON Schema)\n    - 开发函数注册表，支持动态加载\n2. **LLM集成**:\n    - 适配主流LLM的函数调用能力\n    - 设计提示工程模板，让LLM理解可用函数\n    - 实现多函数调用和复杂参数解析\n3. **安全沙箱**:\n    - 自动在docker容器中执行（是否需要每个任务独立开一个docker?）\n    - 实现权限控制和资源限制(根据以前经验，用docker也可能被恶意rm -rf)\n    - 开发输入输出验证机制\n4. **高级功能**:\n    - 实现函数组合和流水线执行\n    - 开发函数学习机制，让LLM能够建议新函数\n    - 构建可视化函数编辑和调试工具\n\n**可能需要学习**:\n\n+ LLM function calling原理和实现机制\n+ 沙箱技术和安全执行环境构建\n+ 提示工程高级技巧\n+ API设计和规范化方法\n+ 异步编程和并发控制\n+ 解释器原理和动态代码执行\n\n**可能有用的工具**:\n\n+ LangChain/LlamaIndex(LLM集成框架)\n+ OpenAI function calling API\n+ Docker/Firecracker(沙箱环境)\n+ Jupyter Kernel Gateway(代码执行)\n+ AST模块(Python语法分析)\n+ Cerberus/JSON Schema(数据验证)\n\n**挑战点**:\n\n1. **安全性**: 防止恶意代码执行和系统资源滥用\n2. **可靠性**: 处理LLM可能生成的错误函数调用\n3. **可解释性**: 提供清晰的函数调用过程和结果反馈\n\n### 牛马组\n非常伟大但是可能没人想干的活。但是真的需要人去做这些工作。。。\n\n+ 创建并管理GitHub仓库\n+ 审核pull request\n+ 协调其他各组的进度，做好衔接工作\n+ 指导Git和GitHub的正确使用\n+ 撰写大量文档\n+ 制定代码质量标准和审查流程\n+ 实施持续集成和持续部署流程(CI/CD)\n+ 制定详细的开发路线图，划分里程碑和版本计划\n+ 定期评审和调整项目方向，确保与目标一致\n+ 将最终各组的项目整合成一个pipeline，尽可能实现开箱即用\n+ ......\n\n---\n\n### 通用建议\n1. **项目协作**:\n    - 使用Git进行版本控制\n    - 建立清晰的文档规范\n    - 定期进行代码审查\n2. **开发环境**:\n    - 统一Python环境管理(conda/venv/uv)\n    - 使用Docker容器化部署\n3. **数据安全**:\n    - 注意敏感信息处理（放在.env里，记得添加到.gitignore，不要提交到公开仓库）\n    - 遵守平台API使用条款\n    - 实施适当的数据加密\n4. **性能考虑**:\n    - 设计合理的缓存策略\n    - 实现异步处理机制\n    - 监控系统资源使用\n\n\n\n",
        "simhash": 4072555704767733600
    },
    "237677112": {
        "id": 237677112,
        "type": "Doc",
        "slug": "dh8s3q1mvz1f6k5y",
        "title": "实践操作类-卢星宇",
        "description": "目前有意愿的任务方向：p9.2 数据采集原因：1.目前而言，及时有效、准确高质的数据采集与信息聚合是刚需2.笔者在爬虫方面勉强算是有点基础（曾经做过几个小项目，接过几个小圈子内的单子）3.最近一段时间事情实在是有点多，时间不大够用，可能没有多的精力在新领域探索本周计划：1.程序设计与数据爬虫方...",
        "cover": "",
        "user_id": 60789490,
        "book_id": 69189148,
        "last_editor_id": 60789490,
        "public": 2,
        "status": 1,
        "likes_count": 9,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 265,
        "created_at": "2025-09-21T01:05:17.000Z",
        "updated_at": "2025-09-22T14:11:56.000Z",
        "content_updated_at": "2025-09-22T04:54:15.000Z",
        "published_at": "2025-09-22T04:54:15.000Z",
        "first_published_at": "2025-09-21T01:06:00.872Z",
        "user": {
            "id": 60789490,
            "type": "User",
            "login": "u59109965",
            "name": "卢星宇",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60789490/1758027935515-avatar/3b36cd8a-dc09-4711-9eb1-7213b4b97820.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-16T13:03:57.000Z",
            "updated_at": "2025-09-22T09:40:29.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60789490,
            "type": "User",
            "login": "u59109965",
            "name": "卢星宇",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60789490/1758027935515-avatar/3b36cd8a-dc09-4711-9eb1-7213b4b97820.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-16T13:03:57.000Z",
            "updated_at": "2025-09-22T09:40:29.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "目前有意愿的任务方向：p9.2 数据采集\n\n\n\n原因：\n\n1.目前而言，及时有效、准确高质的数据采集与信息聚合是刚需\n\n2.笔者在爬虫方面勉强算是有点基础（曾经做过几个小项目，接过几个小圈子内的单子）\n\n3.最近一段时间事情实在是有点多，时间不大够用，可能没有多的精力在新领域探索\n\n\n\n本周计划：\n\n1.程序设计与数据爬虫方面“知识复健”（都是初中的时候自学的，高中“用进废退”，基本快忘完了）\n\n2.尽量与实践组其他团队成员保持步调统一；了解技术团队项目协作相关技巧与规范\n\n3.尝试设计数据采集与信息聚合项目的工作任务流\n\n0.完成笔者在非纯技术组创建的《Nova研究：反思、变革与重定向》文档\n\n[NOVA研究：反思、变革与重定向](https://nova.yuque.com/ph25ri/ua1c3q/kyxxmmgssiz21g86)\n\n\n\n",
        "simhash": 12027111090248721038
    },
    "237676556": {
        "id": 237676556,
        "type": "Doc",
        "slug": "icnvsdl9eem8af4x",
        "title": "Python学习类-单嵩然",
        "description": "行前有所思由于之前没有把学python当作一个主要任务，我采取的基本上就是这种学习方式。一开始是b站上看过视频之后自己敲下来，有问题就问ai。后来发现单用ai就够了。于是看见什么地方没见过都问ai，结果ai又给我介绍了一大堆之前没见过的概念。用来用去，了解了很多但也很杂的东西，但是缺少实践，不...",
        "cover": "",
        "user_id": 60203511,
        "book_id": 69189148,
        "last_editor_id": 60203511,
        "public": 2,
        "status": 1,
        "likes_count": 2,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 850,
        "created_at": "2025-09-21T00:48:30.000Z",
        "updated_at": "2025-09-23T12:32:54.000Z",
        "content_updated_at": "2025-09-23T12:32:54.000Z",
        "published_at": "2025-09-23T12:32:54.000Z",
        "first_published_at": "2025-09-21T00:48:37.964Z",
        "user": {
            "id": 60203511,
            "type": "User",
            "login": "yuqueyonghuvw4emq",
            "name": "单嵩然",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60203511/1756530832209-avatar/863969d9-ec7d-4f09-a8ce-f8b98a801c3a.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-30T05:13:14.000Z",
            "updated_at": "2025-09-15T12:01:53.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60203511,
            "type": "User",
            "login": "yuqueyonghuvw4emq",
            "name": "单嵩然",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60203511/1756530832209-avatar/863969d9-ec7d-4f09-a8ce-f8b98a801c3a.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-30T05:13:14.000Z",
            "updated_at": "2025-09-15T12:01:53.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "\n\n<font style=\"color:#000000;\"></font>\n\n**<font style=\"color:rgb(38, 38, 38);\">行前有所思</font>**~~<font style=\"color:rgb(38, 38, 38);\"></font>~~\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">由于之前没有把学python当作一个主要任务，我采取的基本上就是这种学习方式。</font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">一开始是b站上看过视频之后自己敲下来，有问题就问ai。后来发现单用ai就够了。</font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">于是看见什么地方没见过都问ai，结果ai又给我介绍了一大堆之前没见过的概念。用来用去，了解了很多但也很杂的东西，但是缺少实践，不上手。。。最后还是不咋会。。。</font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">我意识到1.如果不提出整理体系的要求，ai不会主动帮你整理的。llm可以当作高级搜题软件来用，但不能单把llm当作搜题软件来用。</font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">2.ai不能只应用于答疑这个阶段，它的辅助要深入学习活动的各个层面。 带着这些想法，我往下翻阅社团活动文档，然后看见了分支2. </font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">就你了。</font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\"> 正好也借着写语雀的机会，来整理一下思路，摸索一下更合理的学习方式。 </font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">分支2：探索在AI的辅助下学习Python的可行性 要灵活地理解可行性。</font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">当然不止理解成能不能，更理解成好不好，快不快。 如前言所言，把ai当成代码搜题的软件也算是辅助学习的一种方式。但是效率很不够看。 那么，有没有更高效，更可行的方式？</font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\"> 提问阶段，什么叫高效？问题具体？有概括性？ 从输出端，需要什么样的输出？用概念回答概念吗？显然不合适。回答要符合用户的知识水平。而且要有层次，能融进用户搭建的体系和框架。</font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\"> 那怎么得到这样的解答？</font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">设计和调整prompt。得到体系化的输出。以及为llm补充资料，调整回答风格，使之用户友好。 </font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">归根结底，是需要一个好的prompt。 </font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">另外，可以把PBL的精神引入llm应用实践。善用分组和重命名，在每个对话中只询问特定的相关问题。每次解决一个局部的问题，最后解决的就是全局的问题。</font>\n\n**<font style=\"color:rgb(38, 38, 38);\">关于python，我在尝试</font>**\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">现在开始实践一下。目标是，用llm辅助理解爬虫，把爬虫纳入我差不多够用的知识体系，并且会用简单的爬虫。 这个过程中llm会在学习的全过程中忠实地辅助我。</font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\"> 使用的ai工具：智谱清言，适合中国宝宝体质。Kimi学术搜索。用的不多。 具体需求，如上</font>\n\n<font style=\"color:rgb(26, 32, 41);background-color:rgba(74, 90, 112, 0.06);\">尝试了两个小时，现在基本能看懂爬虫了。（9.22.10pm）</font>\n\n**<font style=\"color:rgb(38, 38, 38);\">我提出或遇到的问题</font>**~~<font style=\"color:rgb(38, 38, 38);\">（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）</font>~~\n\n**<font style=\"color:rgb(38, 38, 38);\">一些总结又或许感悟</font>**~~<font style=\"color:rgb(38, 38, 38);\">（比较自由，也可以是你想与大家分享的内容）</font>~~\n\n<font style=\"color:#000000;\">  \n</font><font style=\"color:#000000;\"> </font>\n\n",
        "simhash": 1717604777717435177
    },
    "237675978": {
        "id": 237675978,
        "type": "Doc",
        "slug": "ovhdy3ztp7bgp09e",
        "title": "实践操作类-邹少乾",
        "description": "0 前言只能说各位效率还是太高了😭本文在思路上部分参考了洪翌铭的文档。写得很好，看完很有启发，推荐大家看看。此处为语雀内容卡片，点击链接查看：https://nova.yuque.com/ph25ri/ua1c3q/zwxgygxx9noyw9y01 任务选择任务2: 从公众号和网页获取数据...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/58845698/1758586798262-6c21a138-17e5-4536-b1b0-7a8308962bbf.png",
        "user_id": 58845698,
        "book_id": 69189148,
        "last_editor_id": 58845698,
        "public": 2,
        "status": 0,
        "likes_count": 9,
        "read_count": 0,
        "comments_count": 1,
        "word_count": 5424,
        "created_at": "2025-09-21T00:20:03.000Z",
        "updated_at": "2025-09-24T03:14:49.000Z",
        "content_updated_at": "2025-09-24T03:14:49.000Z",
        "published_at": "2025-09-23T12:33:48.000Z",
        "first_published_at": "2025-09-22T06:34:42.534Z",
        "user": {
            "id": 58845698,
            "type": "User",
            "login": "dubianxunqingye",
            "name": "邹少乾",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/58845698/1755660353505-avatar/a0258a6d-cf0b-4da6-935d-3f6e42b6d8c6.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-20T09:53:19.000Z",
            "updated_at": "2025-09-19T04:59:26.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 58845698,
            "type": "User",
            "login": "dubianxunqingye",
            "name": "邹少乾",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/58845698/1755660353505-avatar/a0258a6d-cf0b-4da6-935d-3f6e42b6d8c6.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-20T09:53:19.000Z",
            "updated_at": "2025-09-19T04:59:26.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "# 0 前言\n只能说各位效率还是太高了😭\n\n本文在思路上部分参考了洪翌铭的文档。写得很好，看完很有启发，推荐大家看看。\n\n[实践操作类-洪翌铭](https://nova.yuque.com/ph25ri/ua1c3q/zwxgygxx9noyw9y0)\n\n# 1 任务选择\n> #### 任务2: 从公众号和网页获取数据\n> **实现思路**:\n>\n> + 公众号通过RSS订阅源(如RSSHub)获取更新\n> + 如果公众号没有RSS订阅源，考虑使用其他方法(如采用爬虫手段或者Playwright模拟点击)\n> + 网页内容使用爬虫工具提取文本信息\n>\n> **可能需要学习**:\n>\n> + RSS格式解析\n> + 网络爬虫基础原理\n> + HTML结构解析\n> + 基本的反爬虫策略\n>\n> **可能有用的工具**:\n>\n> + Feedparser(RSS解析库)\n> + BeautifulSoup(HTML解析)\n> + Scrapy框架(高级爬虫需求)\n> + Selenium或者Playwright(动态网页交互)\n>\n\n选择这个任务的原因有两点：一是因为我本身十分需要一个RSS阅读器，可以借此机会深化对RSS的理解（之前选择的Folo时不时抽风，后来弃用了），二是因为我对爬虫这项技术比较感兴趣。\n\n\n\n当然，如果想要把这个任务做好，把完成度做高，那么我还需要考虑任务三的一些问题，作为参考。\n\n> #### 任务3: 基础数据预处理\n> **实现思路**:\n>\n> + 使用正则表达式识别和去除广告、模板内容\n> + 设置文本长度阈值过滤无效内容\n> + 实现SimHash算法识别和删除重复内容\n>\n> **可能需要学习**:\n>\n> + 正则表达式语法\n> + SimHash算法原理\n> + 基本文本清洗技术\n>\n> **可能有用的工具**:\n>\n> + Python re模块(正则)\n> + SimHash Python实现库\n>\n\n\n\n# 2 任务实践\n## 2.1 提出问题与分析问题\n### 2.1.1 实践思路分析 & 提出问题\n> + 公众号通过RSS订阅源(如RSSHub)获取更新\n> + 如果公众号没有RSS订阅源，考虑使用其他方法(如采用爬虫手段或者Playwright模拟点击)\n> + 网页内容使用爬虫工具提取文本信息\n>\n\n1. 我需要从哪些网站获取数据？\n2. 我需要获取哪些数据?如何让用户自定义获取哪些数据？（分类+权重？）\n3. 我可以通过什么方式获取这些数据？\n    1. 如果用RSS的话，可以用什么工具？\n    2. 如果用爬虫的话，可以用什么工具？\n4. 我可以从哪里学习相关知识？\n5. 如果数据获取成功了，我需要进行哪些预处理？\n6. 如果数据获取成功了，我可以如何设计，以方便后续接入其他人的Part？\n7. 获取到的数据如何推送？\n\n\n\n### 2.1.2 尝试回答问题 & 执行框架构建\n#### 2.1.2.1 数据来源分析\n##### 2.1.2.1.1 QQ/微信\n信息聚落类型：\n\n| 信息聚落 | 描述 | 信息分类 | 重要性 |\n| --- | --- | --- | --- |\n| 水群 | 非官方性质的群聊，如AMA、开甲闲聊公社等、转群。 |  | 有效信息密度较低，但可能包含意外的高价值信息 |\n| 课程群或社团群 | 主要围绕特定课程或学习主题建立的群聊，如AIA。 | Q&A、通知公告、课程资源文件 | 中等至较高，尤其是通知公告和课程资源文件 |\n| 事务群 | 包括但不限于书院群（书院群也蛮水的）、班级群、团队工作群等。官方性质较强。 | Q&A、通知公告、官方文件 | 参差不齐，但通常较高 |\n| 公众号 | 主要是南哪相关公众号。个性化需求的公众号应该可以通过一种模式添加进来。<br/>同时考虑到服务号如”南京大学信息门户“”腾讯企业邮箱“”南哪小帮手“不同于公众号的推送机制，这部分需要特殊考虑。 | 通知公告、指南、消息提醒 | 较为重要 |\n\n\n\n\n##### 2.1.2.1.2 网页\n最开始主要关注南哪官方网站。之后或许可以考虑一种各网站通用的信息收集功能。\n\n##### 2.1.2.1.3 语雀\n主要关注：\n\n+ 信息收集类：文档的更新、新评论。\n+ 信息处理类：AI总结、发散\n+ 信息推送类：？\n+ 个性化：信息权重分配。比如文档重要性、特别关注等等。\n\n##### 2.1.2.1.4 其他\n或许还可以扩展以下，让手机上的验证码短信在电脑上接收？\n\n**All in one 是可以实现的吗？**\n\n\n\n##### 2.1.2.1.# 总结\n首先应该在上周项目的基础上，逐步添加功能。\n\n但最后或许还是应该设计一个模式化的信息源添加功能，毕竟不同人对不同消息的价值判断差异会比较大，而且信息来源的面向和广度也不同。这样才能让项目更加实用。 \n\n\n\n\n\n#### 2.1.2.2 数据获取与处理分析\n数据获取前还需要考虑去重，否则就会像我上一个项目一样，重复推送相似的内容，导致程序一次运行十分缓慢。\n\n##### 2.1.2.2.1 QQ/微信\n微信：首先我阅读了微信官方的开发者文档，但是其中的API是专门为微信内容开发者服务的，而不适用于普通读者。于是我转而寻求他路，在github上搜索一番后，发现github上已经有很多相关项目。因此我只需要从众多项目中选择其一，理解其代码逻辑，然后调用其API接口至未来的信息聚合平台上就好。\n\n目前我选择的项目是这个：[WeRSS - 微信公众号订阅助手](https://github.com/rachelos/we-mp-rss)。选择的理由是，一方面此项目正在不断更新，因此对当前高版本的微信适配性理应较强，另一方面，issue中呈现出的问题较少（不过这也可能是由于项目太过年轻，我看到的几个老项目在issue中全都有~~悬而未决~~的问题），同时该项目有较为详细的二次开发指南。当使用这个项目到无法进行下去时，再考虑参考其他项目，否则一次输入的信息太多我难以处理。\n\nQQ：同样是在Github上查找，找到了一个看起来不错的项目。[转发侦听插件 (TurnRig)](https://github.com/IGCrystal-NEO/astrbot_plugin_turnrig)‘\n\n##### 2.1.2.2.2 网页\n对这一块没有什么了解，先把与Gemini的对话贴在这里：\n\n###### Gemini对话\n> <font style=\"color:rgb(27, 28, 29);\">Prompt:如果我需要爬取南京大学官网上的特定信息，我需要怎么做？给我大致行动框架，并对涉及到的知识点、工具进行介绍与扩展延伸</font>\n>\n\n> <font style=\"color:rgb(27, 28, 29);\">如果你想爬取南京大学官网上的特定信息，这实际上是一个非常好的实践项目。基于你之前分享的文档内容，这个任务完美契合你的项目目标，即“信息流”的“获取数据”阶段。</font>\n>\n> <font style=\"color:rgb(27, 28, 29);\">下面，我将为你提供一个大致的行动框架，并详细介绍所涉及的知识点和工具。</font>\n>\n> ### <font style=\"color:rgb(27, 28, 29);\">1. 明确爬取目标（认知输入）</font>\n> <font style=\"color:rgb(27, 28, 29);\">在动手之前，你需要像项目策划者一样，先明确你的目标：</font>\n>\n> + **<font style=\"color:rgb(27, 28, 29);\">你要爬取什么？</font>**<font style=\"color:rgb(27, 28, 29);\"> 是新闻公告、某个学院的招生信息、还是导师介绍？</font>\n> + **<font style=\"color:rgb(27, 28, 29);\">这些信息在哪个页面？</font>**<font style=\"color:rgb(27, 28, 29);\"> URL 是什么？</font>\n> + **<font style=\"color:rgb(27, 28, 29);\">这些信息的结构是怎样的？</font>**<font style=\"color:rgb(27, 28, 29);\"> 是表格、列表还是散布在正文里？</font>\n>\n> <font style=\"color:rgb(27, 28, 29);\">这个阶段就像你在《实践操作类》文档中提到的“细分任务”，你需要将一个大任务拆解成可执行的小任务。</font>\n>\n\n> ### <font style=\"color:rgb(27, 28, 29);\">2. 分析页面类型与选择工具（流程规划）</font>\n> <font style=\"color:rgb(27, 28, 29);\">在这一步，你需要判断南京大学官网的页面属于哪一类，并据此选择合适的工具。</font>\n>\n> + **<font style=\"color:rgb(27, 28, 29);\">如果页面是静态的</font>**<font style=\"color:rgb(27, 28, 29);\">：</font>\n>     - **<font style=\"color:rgb(27, 28, 29);\">判断方法</font>**<font style=\"color:rgb(27, 28, 29);\">：在网页上点击鼠标右键，选择“查看网页源代码”。如果新闻标题、内容等信息直接显示在源代码中，那么它就是静态页面。</font>\n>     - **<font style=\"color:rgb(27, 28, 29);\">所需工具</font>**<font style=\"color:rgb(27, 28, 29);\">：</font>\n>         * `**<font style=\"color:rgb(87, 91, 95);\">requests</font>**`<font style=\"color:rgb(27, 28, 29);\">：一个用于发送 HTTP 请求的 Python 库，用于获取网页的 HTML 源代码。</font>\n>         * `**<font style=\"color:rgb(87, 91, 95);\">BeautifulSoup</font>**`<font style=\"color:rgb(27, 28, 29);\">：一个强大的 HTML 解析库。它能帮你从杂乱的 HTML 代码中，像使用 CSS 选择器一样，轻松提取你想要的数据。</font>\n>     - **<font style=\"color:rgb(27, 28, 29);\">行动</font>**<font style=\"color:rgb(27, 28, 29);\">：使用 </font>`<font style=\"color:rgb(87, 91, 95);\">requests</font>`<font style=\"color:rgb(27, 28, 29);\"> 获取页面，然后用 </font>`<font style=\"color:rgb(87, 91, 95);\">BeautifulSoup</font>`<font style=\"color:rgb(27, 28, 29);\"> 解析并提取信息。</font>\n> + **<font style=\"color:rgb(27, 28, 29);\">如果页面是动态的</font>**<font style=\"color:rgb(27, 28, 29);\">：</font>\n>     - **<font style=\"color:rgb(27, 28, 29);\">判断方法</font>**<font style=\"color:rgb(27, 28, 29);\">：如果网页源代码中看不到你想要的内容，或者需要你点击某个按钮、滚动页面后内容才出现，那么它很可能是一个动态页面。这通常是因为内容是通过 JavaScript 异步加载的。</font>\n>     - **<font style=\"color:rgb(27, 28, 29);\">所需工具</font>**<font style=\"color:rgb(27, 28, 29);\">：</font>\n>         * `**<font style=\"color:rgb(87, 91, 95);\">Selenium</font>**`<font style=\"color:rgb(27, 28, 29);\"> 或 </font>`**<font style=\"color:rgb(87, 91, 95);\">Playwright</font>**`<font style=\"color:rgb(27, 28, 29);\">：这些是浏览器自动化测试工具，但非常适合处理动态加载的网页。它们可以模拟真实用户的行为，比如点击、滚动、等待内容加载等。</font>\n>     - **<font style=\"color:rgb(27, 28, 29);\">行动</font>**<font style=\"color:rgb(27, 28, 29);\">：使用这些工具启动一个“虚拟浏览器”，让它访问网页，等待内容加载，然后你再像处理静态页面一样，提取其 HTML 内容。</font>\n>\n\n> ### <font style=\"color:rgb(27, 28, 29);\">3. 构建爬虫框架与实施（任务分派）</font>\n> + **<font style=\"color:rgb(27, 28, 29);\">小型任务</font>**<font style=\"color:rgb(27, 28, 29);\">：如果只是爬取一两个页面，你可以写一个简单的脚本。</font>\n> + **<font style=\"color:rgb(27, 28, 29);\">复杂或大规模任务</font>**<font style=\"color:rgb(27, 28, 29);\">：如果需要爬取整个网站，或者需要处理登录、反爬虫等问题，那么你应该使用一个专业的爬虫框架，比如 </font>`**<font style=\"color:rgb(87, 91, 95);\">Scrapy</font>**`<font style=\"color:rgb(27, 28, 29);\">。</font>\n>     - `**<font style=\"color:rgb(87, 91, 95);\">Scrapy</font>**`<font style=\"color:rgb(27, 28, 29);\">：这个框架提供了完整的爬虫解决方案，包括请求调度、并发处理、数据存储等，能让你的项目更有组织性和可扩展性。正如你在文档中提到的，这是一个“更专业的选择”。</font>\n>\n> ### <font style=\"color:rgb(27, 28, 29);\">4. 数据处理与后续思考（知识延伸）</font>\n> <font style=\"color:rgb(27, 28, 29);\">一旦你成功爬取了数据，工作才刚刚开始。</font>\n>\n> + **<font style=\"color:rgb(27, 28, 29);\">结构化数据</font>**<font style=\"color:rgb(27, 28, 29);\">：你需要将爬取到的信息整理成结构化的数据，比如 CSV、JSON 或存入数据库。</font>\n> + **<font style=\"color:rgb(27, 28, 29);\">数据去重</font>**<font style=\"color:rgb(27, 28, 29);\">：如果你从南京大学官网的多个页面（如新闻首页和新闻详情页）获取了相同的信息，或者未来要和从其他渠道获取的信息进行对比，就需要用到 </font>**<font style=\"color:rgb(27, 28, 29);\">SimHash</font>**<font style=\"color:rgb(27, 28, 29);\"> 或 </font>**<font style=\"color:rgb(27, 28, 29);\">MinHash</font>**<font style=\"color:rgb(27, 28, 29);\"> 这类算法来高效地进行去重。</font>\n> + **<font style=\"color:rgb(27, 28, 29);\">知识库构建</font>**<font style=\"color:rgb(27, 28, 29);\">：爬取到的数据是原始的，为了更好地利用它们，你可以将这些数据存入一个</font>**<font style=\"color:rgb(27, 28, 29);\">向量数据库</font>**<font style=\"color:rgb(27, 28, 29);\">，用于语义搜索或智能问答。例如，你可以让用户搜索“南京大学计算机系今年招生政策”时，能够直接返回相关的官网内容。</font>\n>\n\n> ### <font style=\"color:rgb(27, 28, 29);\">知识点与工具的扩展延伸</font>\n> + **<font style=\"color:rgb(27, 28, 29);\">反爬虫</font>**<font style=\"color:rgb(27, 28, 29);\">：在实际操作中，你很可能会遇到网站的</font>**<font style=\"color:rgb(27, 28, 29);\">反爬虫机制</font>**<font style=\"color:rgb(27, 28, 29);\">。这包括但不限于：检查请求头（User-Agent）、IP 限制、验证码、动态参数等。你需要学习如何模拟浏览器请求头、使用代理 IP 池等技术来应对。</font>\n> + **<font style=\"color:rgb(27, 28, 29);\">网络协议</font>**<font style=\"color:rgb(27, 28, 29);\">：理解 </font>**<font style=\"color:rgb(27, 28, 29);\">HTTP/HTTPS</font>**<font style=\"color:rgb(27, 28, 29);\"> 协议是爬虫的基石。你需要知道 HTTP 请求的方法（GET/POST）、状态码（200、404等）、请求头和响应体。</font>\n> + **<font style=\"color:rgb(27, 28, 29);\">伦理与法律</font>**<font style=\"color:rgb(27, 28, 29);\">：爬虫是一种强大的技术，但必须遵守道德和法律规范。</font>\n>     - `**<font style=\"color:rgb(87, 91, 95);\">robots.txt</font>**`<font style=\"color:rgb(27, 28, 29);\">：在爬取网站前，先检查其 </font>`<font style=\"color:rgb(87, 91, 95);\">robots.txt</font>`<font style=\"color:rgb(27, 28, 29);\"> 文件，它通常位于网站根目录（如 </font>`<font style=\"color:rgb(87, 91, 95);\">https://www.nju.edu.cn/robots.txt</font>`<font style=\"color:rgb(27, 28, 29);\">），会告诉爬虫哪些页面可以访问，哪些不可以。</font>\n>     - **<font style=\"color:rgb(27, 28, 29);\">爬取频率</font>**<font style=\"color:rgb(27, 28, 29);\">：不要对网站服务器造成过大压力，设置合理的请求间隔。</font>\n>     - **<font style=\"color:rgb(27, 28, 29);\">隐私保护</font>**<font style=\"color:rgb(27, 28, 29);\">：不要爬取和存储个人隐私信息。</font>\n>\n> <font style=\"color:rgb(27, 28, 29);\">通过这个项目，你不仅能掌握技术，还能深入理解从数据获取、预处理到知识库构建的完整“信息流”流程，这与你的项目初衷和学习理念完全契合。</font>\n>\n\n\n\n###### 规划\n首先，我需要爬取什么？\n\n其次，页面是动态还是静态的？\n\n最后，我如何构建爬虫框架？\n\n##### 2.1.2.2.3 语雀\n循上次的方法就可以了。\n\n##### 2.1.2.2.4 其他\n我还希望能集成手机短信的推送（至电脑端），不过这一点暂时不考虑。\n\n#### 2.1.2.3 数据推送分析\n由于目前尚未研究我选择的插件，我无法对数据推送的具体方法进行分析。\n\n##### 2.1.2.3.1 参考他人文档\n以下引用部分来自洪翌铭：\n\n> ## AI分析部分\n> 我们认为信息可以归类为两类，一类是代办类信息，一般格式为在什么时间点需要去做一些什么事情，另一类是知识类的信息，例如语雀知识库里头大家的文档\n>\n> 我们希望一个信息能够具备以下的一些内容  \n1.\t信息主体  \n2.\t信息标签，例如[活动通知][python学习]等  \n3.\t信息来源  \n4.\t信息时间  \n5.\t信息概要\n>\n> 目标：\n>\n> + 语雀：能够统计每个人的任务完成情况，统计每个人选择的分支，在同分支下生成所有文档的总结\n> + 微信，QQ群：能够以时间段为顺序，将临近时间主题相近的讨论收录为话题，按照话题整理出相应的聊天内容。能从聊天记录中识别出重要通知\n> + 教务网站：能够精准地提取通知中重要的信息，如果可以的话自动生成代办事项\n>\n> 可能设计的技术：AI的api调用\n>\n> ### 展望\n> 也许我们可以尝试建立一个比较接近通用Agent的玩意，我们先预存一些常用指令供用户选择，其余的一些其他需求我们可以让用户直接输入自然语言指令来从知识库中查找对应内容或是完成任务，如果自然语言识别有障碍，也可以采用某些有限制的语法来实现\n>\n\n其中**对信息进行分类（代办类和知识类）**、**最终建立通用Agent**的想法是我没有想到的。值得参考。\n\n##### 2.1.2.3.2 自己的想法\n1. 我希望能将一条信息的内容划分为多个面向，将与这多个面向的相关性为用户可以自定义的参数，从而实现用户的个性化信息获取。相关性应当通过context来判断，这种功能可能需要通过调用AI。对于其他方面的个性化需求满足同理。\n\n![](https://cdn.nlark.com/yuque/0/2025/png/58845698/1758586798262-6c21a138-17e5-4536-b1b0-7a8308962bbf.png)\n\n以以上信息为例，如果我们将一条信息的内容划分为【理财、金钱】与【其他】，假设自定义参数的范围为0~10（从完全不接收到全部接收），那么如果我将前一个面向的参数设置为9，由于检测到“红包”的关键词，根据上下文，AI能够判断这条消息与【理财、金钱】有较高相关性，从而选择对这条信息进行处理。理想的情况是提取上下文，然后围绕该关键词进行总结。\n\n2. 我个人想到的信息分类方法是以信息发布者的视角来看的，根据具体内容划分。比如分为班级事务、课程事务、资源等。而洪翌铭的分类方法，在我看来，更多是从信息接收者的角度来看的。当然两种视角可能会有重合。我可以结合这两种分类方法。\n3. Tag的实现？\n\n#### 2.1.2.4 任务拆解\n总目标：理解代码，增强掌控感，让代码不再只是**一次性的**；锻炼Python编程能力；深化对API的理解。\n\n1. 对上周项目代码进行修改与优化。必要时可以推翻重来。——我还是打算直接推翻重来了，毕竟上次的项目做到后面已经摆烂了，直接复制粘贴Gemini的代码而不试图去理解代码逻辑。不过上次的流程还是可以借鉴的。\n2. 对各个信息来源逐个击破。过程中需要注意代码的可持续性，便于后续功能添加与团队合作。\n3. 汇总各个功能于一个界面。\n4. 再远一些，就是考虑GUI了。\n\n\n\n## 2.2 尝试解决问题\n### 2.2.1 第一步：重构上次项目的代码，这个切入口相对平缓。\n#### 2.2.1.0 起步\n[对话记录1](https://gemini.google.com/app/bff9c4b36cca52de)\n\n> Prompt:这些是搜集语雀内容时可能用到的文件。我现在打算把先前vibe coding的代码全部推翻，从零开始。请你用一种引导式的回复，帮助我构建这样一个程序： \n>\n> 首先，我需要的工具应该能够提示： \n>\n> 所有文档的更改。但是由于语雀的自动保存机制，如果真的传输每一条更新消息，那么消息量可能非常巨大。 因此在处理文档更新前，我需要判断1.更新差异是否显著2.更新后的文档内容是否与其他文档高度同质化。并依据判断结果决定是否处理 \n>\n> 总结文档的内容。如果要求更高一点，如果文档内容更改不大，就不应该有消息提示。 \n>\n> 对我文档的点赞、评论。如果直接从语雀获取比较困难，或许可以从邮箱那里借道。邮箱的开放性（我想）总该是比语雀高的。 \n>\n> 给出灵感或建议。这个要求是比较高的，我希望LLM能够根据对我的评论，结合上下文，告诉我对方可能表达的含义；或根据他人文档的更新，指出其中可以深入发掘的点子。总之就是结合上下文进行发散思维。（但这一点就算我人工给Gemini投喂上下文也很难做到让人满意） \n>\n> 其次，我需要将这份构思交给Gemini，让他为我规划一条可行的路径。（毕竟我连有什么工具可用都不知道）在一步一步跟着实践的基础上，我需要生枝，比如在学会一个工具的基础上，继续询问是否有相似的工具，或是否有互补的工具。\n>\n\n个人感觉\"引导式的回复\"这个提示词十分好用。强烈推荐！\n\n#### 2.2.1.1 代码重构\n今天白天主要在对上次项目的代码进行重构，因为上次我并没有彻底理解那些代码。这次我让Gemini从头开始引导我，而我基本上是对着Gemini的代码慢慢敲完的主程序。这样虽然耗时更长，但是允许我更精细地对代码进行提问，从而获得对代码更深入的理解以及掌控感。~~我感觉自己现在强的可怕！~~\n\n[yuque_fetcher.py](https://nova.yuque.com/attachments/yuque/0/2025/py/58845698/1758626209483-b3723d0b-84c5-44c8-9d4d-502b97bead6e.py)[yuque_summarizer.py](https://nova.yuque.com/attachments/yuque/0/2025/py/58845698/1758626209208-2dfe1c0b-e395-4cce-aa50-2187379c20d1.py)\n\n#### 2.2.1.2 SimHash的初筛\n这一部分中，我跟着Gemini写了一个运用SimHash的筛选工具。大致思路如下：\n\n首先从英文入手（因为对中文实现token的划分与提取并不简单），from simhash import Simhash，构建雏形。\n\n然后通过import jieba，实现对中文token的划分和提取。\n\n\n\n[simhash_utils.py](https://nova.yuque.com/attachments/yuque/0/2025/py/58845698/1758627691713-da84d5c9-cec2-4518-a622-3f285e917356.py)\n\n但是Gemini的代码并没有给出关于Simhash() and hash.distance() 的注释，就那样轻描淡写地过去了。因此我先找了一个解释Simhash和Minhash的知乎高赞回答。看到一半，回答里出现了很多hashlib库的知识，没办法，回到菜鸟教程和Hello algo去补课。\n\n\n\n追着Gemini问了好久的哈希表，终于懂了QAQ。[对话记录2](https://gemini.google.com/app/4afc881bb9cb0390)\n\n### 2.2.2 对各个信息来源逐个击破\n\n\n### 2.2.3 信息的集成与汇总\n\n\n### 2.2.4 GUI的考虑\n",
        "simhash": 8107087031942030223
    },
    "237675976": {
        "id": 237675976,
        "type": "Doc",
        "slug": "pclq36e5dpggu2l2",
        "title": "工具技巧类-董益成",
        "description": "背景：大到书院官群、课程群，小到宿舍楼栋群、民间群，大学生活中很大一部分信息来源来自这些QQ群聊。与群聊相生相伴的，还有那些热爱水群的可爱同学（）。水群，是一种同学们在学习生活之余表达观点、释放压力、丰富社交的行为，我并非在此批判水群者（叠甲）。但不得不承认，充满水分的QQ群让那些关键的信息被...",
        "cover": "",
        "user_id": 59026642,
        "book_id": 69189148,
        "last_editor_id": 59026642,
        "public": 2,
        "status": 1,
        "likes_count": 4,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 1900,
        "created_at": "2025-09-21T00:19:57.000Z",
        "updated_at": "2025-09-23T12:25:39.000Z",
        "content_updated_at": "2025-09-23T12:25:38.000Z",
        "published_at": "2025-09-23T12:25:38.000Z",
        "first_published_at": "2025-09-21T03:29:52.020Z",
        "user": {
            "id": 59026642,
            "type": "User",
            "login": "u57377100",
            "name": "董益成",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59026642/1755671506038-avatar/ec0609fc-baa5-4ec6-8390-260114fc9255.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-25T08:53:08.000Z",
            "updated_at": "2025-09-23T12:27:46.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59026642,
            "type": "User",
            "login": "u57377100",
            "name": "董益成",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59026642/1755671506038-avatar/ec0609fc-baa5-4ec6-8390-260114fc9255.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-25T08:53:08.000Z",
            "updated_at": "2025-09-23T12:27:46.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "# 背景：\n大到书院官群、课程群，小到宿舍楼栋群、民间群，大学生活中很大一部分信息来源来自这些QQ群聊。与群聊相生相伴的，还有那些热爱水群的可爱同学（）。\n\n水群，是一种同学们在学习生活之余表达观点、释放压力、丰富社交的行为，我并非在此批判水群者（叠甲）。但不得不承认，充满水分的QQ群让那些关键的信息被瞬间冲刷干净，导致时常发生“我没看到消息啊”之类的悲剧发生。\n\n既然无法阻挡水群，那我们就要完成“大海淘沙”的任务，从繁杂的信息中精准筛选出关键的人发送的关键信息，并且把这条信息及时推送到便于我们查看的平台。\n\n思路：\n\n QQ 群消息 → Lagrange.Core.OneBot → Python → PushPlus → 微信  \n\n# 介绍\n## 一、QQ 群消息 → Lagrange.Core.OneBot\n### 什么是Lagrange.Core.OneBot？\n#### Lagrange.Core\n+ 它是一个 **QQ 协议实现**，也就是一个“机器人内核”。\n+ 简单来说，它能让你不用打开真正的 QQ 客户端，也能用程序控制 QQ，比如收消息、发消息、改群公告等。\n+ 就像是一个“假装成 QQ 客户端的小机器人”。\n\n#### OneBot\n+ **OneBot** 是一种统一的机器人接口标准。\n+ 因为不同的 QQ 机器人框架长得不一样，操作方法也不同，用起来很乱。\n+ OneBot 就像“翻译官”：规定了一套 **通用的接口**（比如“send_message”“get_friend_list”），不同平台的机器人只要实现了 OneBot，就能用同一套指令去操作。\n\n#### Lagrange.Core.OneBot\n+ 它就是 **在 Lagrange.Core 里实现 OneBot 协议的插件/模块**。\n+ 意思是：  \n你用 Lagrange.Core 登录 QQ，然后通过 OneBot 协议，就能用 **统一的 API**（比如 HTTP 或 WebSocket）和你的 QQ 号交互。\n\n###  从而我们实现以下效果：\n有人给你 QQ 发消息 → Lagrange.Core 接收到 → 转换成 OneBot 格式 → 通过 WebSocket 推给你写的程序。 \n\n## 二、 Lagrange.Core.OneBot → Python → PushPlus\nPython 接收 OneBot 消息 = 写一个小型 HTTP 服务\n\n+ 用 **FastAPI** 启动一个本地接口，监听 `http://127.0.0.1:5701/`。\n+ **Lagrange.Core** 配置里写上 `PostUrls`，就会把 QQ 群消息自动 **POST** 到这个接口。\n+ Python 收到消息后，从 JSON 里取出：\n    - 群号 (`group_id`)\n    - 发送者 QQ (`user_id`)\n    - 消息内容 (`message`)\n+ 根据你设定的规则（群号 + 成员），决定是否处理。\n+ 如果符合条件，就调用 **PushPlus**，把消息推送到微信。\n\n 从而实现以下效果：\n\nLagrange.Core 把 QQ 消息发到 Python，Python 收到后做筛选，判断这一条是不是有用信息\n\n## 三、Python → PushPlus → 微信\n+ 在 **PushPlus 官网** 获取一个 `token`，并绑定你的微信（关注公众号）。\n+ Python 调用 PushPlus 提供的 **HTTP API**，把消息内容发过去。\n+ PushPlus 收到后，会通过公众号，把这条消息直接推送到你的微信里\n\n实现效果：\n\nPython程序筛选出有用信息后，借助PushPlus推送到你的微信上，从而简洁高效地阅读关键信息\n\n# 实操\n## 一、电脑环境\n### 系统需求\n+ Windows / Linux / macOS 都行\n+ 已安装 .NET 7 Runtime\n+ 已安装 Python ≥ 3.8\n\n###  Python 依赖  \n```python\npip install requests fastapi uvicorn\n```\n\n二、 配置 Lagrange.Core  \n\n+ 去 [Lagrange.Core Releases](https://github.com/LagrangeDev/Lagrange.Core/releases) 下载对应平台版本（解压即可用）。\n+ 编辑解压目录下的 `**appsettings.json**`，示例配置如下：\n\n```python\n{\n  \"Account\": {\n    \"Uin\": 你的QQ号,\n    \"Password\": \"你的密码\",    // 或留空，首次扫码登录\n    \"Protocol\": \"AndroidPhone\"\n  },\n  \"Message\": {\n    \"Post\": [\n      {\n        \"Url\": \"http://127.0.0.1:5701/\",  // Python 接收服务地址\n        \"Secret\": \"\"\n      }\n    ]\n  },\n  \"Log\": {\n    \"Level\": \"Info\"\n  }\n}\n\n```\n\n说明：\n\n+ `Uin`：你的 QQ 号\n+ `Password`：如果留空，第一次运行时会提示扫码登录\n+ `Protocol`：推荐 `\"AndroidPhone\"`（最稳定）\n+ `Url`：Python 接收服务的地址\n\n运行：\n\n```python\ndotnet Lagrange.Core.dll\n```\n\n成功后会登录 QQ，并开始把消息转发到 Python 服务。\n\n## 二、Python：PushPlus 推送函数\n新建 `pushplus.py`：\n\n```python\nimport requests\n\nPUSHPLUS_API = \"http://www.pushplus.plus/send\"\nPUSHPLUS_TOKEN = \"你的token\"  # 在 PushPlus 用户中心复制\n\ndef send_pushplus(title: str, content: str):\n    \"\"\"\n    推送消息到 PushPlus\n    \"\"\"\n    data = {\n        \"token\": PUSHPLUS_TOKEN,\n        \"title\": title,\n        \"content\": content\n    }\n    try:\n        res = requests.post(PUSHPLUS_API, json=data, timeout=5)\n        print(\"PushPlus 返回：\", res.text)\n    except Exception as e:\n        print(\"推送失败：\", e)\n```\n\n## 三、Python：接收 QQ 群消息并调用 PushPlus\n新建 `qq_listener.py`：\n\n```python\nfrom fastapi import FastAPI, Request\nimport uvicorn\nfrom pushplus import send_pushplus\n\napp = FastAPI()\n\n# 关键词列表（需要保留的关键信息）\nKEYWORDS = [\"考试\", \"作业\", \"会议\", \"报名\"]\n\n@app.post(\"/\")\nasync def receive_msg(request: Request):\n    data = await request.json()\n    print(\"收到消息:\", data)\n\n    # 只处理群消息\n    if data.get(\"type\") == \"GroupMessage\":\n        group_id = data[\"groupId\"]\n        user_id = data[\"sender\"][\"uin\"]\n        msg = \"\".join([e[\"text\"] for e in data[\"elements\"] if e[\"type\"] == \"Text\"])\n\n        # 关键词过滤\n        if any(kw in msg for kw in KEYWORDS):\n            text = f\"【QQ群:{group_id}】用户{user_id} 提到：{msg}\"\n            send_pushplus(\"QQ群关键信息提醒\", text)\n\n    return {\"status\": \"ok\"}\n\nif __name__ == \"__main__\":\n    uvicorn.run(app, host=\"0.0.0.0\", port=5701)\n```\n\n运行：\n\n```plain\npython qq_listener.py\n```\n\n## 四、测试效果\n1. 启动 `qq_listener.py`\n2. 启动 `Lagrange.Core` 并登录 QQ\n3. 在 QQ 群里发一条消息，比如：\n\n```plain\n大家记得周五上午9点考试！\n```\n\n4. 你会在 Python 控制台看到：\n\n```plain\n【QQ群:123456789】用户987654321 提到：大家记得周五上午9点考试！\n```\n\n5. 同时在 **PushPlus 微信公众号** 收到消息提醒。\n\n# 写在最后\n作为一个代码小白，这些代码显然都归功于gpt老师（doge）；想要做这个选题实则也是因为周六cac提过一嘴从水群里提取关键信息；本人的贡献可能就是在不断优化问AI的方式并且在一些非常弱智的问题中慢慢丰富自己的知识库（虽然整套流程跑下来，提升最大的是使用AI的熟练度）\n\n其实这个项目做到一半我才意识到，辅导员或者任课老师发布的重要信息都会@所有人，这意味着只要打开消息免打扰，重要信息就会自动推送到通知页面，直接平替了上述所有工作（省流：白做了）\n\n截至这一版文档完稿，我自己都没有成功打通所有通路，卡在了最后发送消息到我的微信这一步，好丢人（）\n\n不过不要紧啦，整个项目从构思到查询再到实操，花费了我近10h时间（达到要求），我也从中收获了非常多；这也是我入社成为新手以来正儿八经完成的第一篇有内容的文档，称得上是一次突破吧。也许今天的我不具有像各位大佬一样过硬的代码本领，我也曾怀疑过自己适不适合这个团队。但我坚信只要肯思考，肯学习，在一个优秀的集体中向身边优秀的人学习，一个人的思想和能力一定会有提高，这也是我当初加入NOVA的初衷。\n\n我会努力找到自己存在于这里的意义和价值。\n\n2025.9.23晚\n\n于南园二舍\n\n---\n\n",
        "simhash": 12710670886625003361
    },
    "237675973": {
        "id": 237675973,
        "type": "Doc",
        "slug": "ngzzm3hbb1xtbcf0",
        "title": "Python学习类-黄思睿",
        "description": "行前有所思 作为曾学过C++的学生，学Python我会这样想： 先对比差异，立刻梳理Python的动态类型、缩进语法和GC机制，明确与C++静态类型、内存管理的核心区别，避免惯性写法。 利用优势转化，直接跳过基础算法练习。 直击实用场景：尝试爬虫、自动化脚本等，用实际需求驱动学习，避免陷入语法...",
        "cover": "",
        "user_id": 60716702,
        "book_id": 69189148,
        "last_editor_id": 60716702,
        "public": 2,
        "status": 1,
        "likes_count": 4,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 836,
        "created_at": "2025-09-21T00:19:48.000Z",
        "updated_at": "2025-09-23T02:19:49.000Z",
        "content_updated_at": "2025-09-22T13:42:54.000Z",
        "published_at": "2025-09-22T13:42:54.000Z",
        "first_published_at": "2025-09-21T02:06:11.120Z",
        "user": {
            "id": 60716702,
            "type": "User",
            "login": "lyfwmcn",
            "name": "黄思睿",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60716702/1757857052954-avatar/1082f1a5-4388-407e-b932-3f53bdd6d92f.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-14T13:01:39.000Z",
            "updated_at": "2025-09-16T08:09:13.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60716702,
            "type": "User",
            "login": "lyfwmcn",
            "name": "黄思睿",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/60716702/1757857052954-avatar/1082f1a5-4388-407e-b932-3f53bdd6d92f.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-14T13:01:39.000Z",
            "updated_at": "2025-09-16T08:09:13.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## **行前有所思**\n       作为曾学过C++的学生，学Python我会这样想：\n\n       先对比差异，立刻梳理Python的动态类型、缩进语法和GC机制，明确与C++静态类型、内存管理的核心区别，避免惯性写法。\n\n       利用优势转化，直接跳过基础算法练习。\n\n       直击实用场景：尝试爬虫、自动化脚本等，用实际需求驱动学习，避免陷入语法细节。\n\n       警惕“C++后遗症”：刻意练习Pythonic写法（比如用上下文管理器替代RAII），强制自己写简洁的代码，不追求C++级别的性能控制。\n\n## **关于python，我在尝试分支1**\n作为一个曾学习过一些基础 C++ 的学生，我认为构建学习 Python 的框架需要我反思过去自学 C++ 的经验，并借鉴一些ds老师的建议。以下是我的初步规划：\n\n\n\n**阶段一：基础语法与基础数据结构学习（1天）**\n\n       在这一阶段中，我会先适应 Python 中的语法，在写代码的过程中学习 PEP-8 。例如，它不用分号来分隔语句，变量不需事先声明，循环和判断语句中不使用括号，代码块不用大括号而是采用缩进等；再学习 Python 中的基础数据类型，例如 str, int, float, bool 等，以及了解一些高级数据结构，例如 list, dict, tuple, set 等。\n\n       我也计划将自己写过的一些简单 C++ 程序用 Python 再写一遍，以增加熟练度。\n\n\n\n**阶段二：深入核心数据结构与函数（1天）**\n\n       学习 Python 中的函数定义方法，及 Python 常用内置函数和 list, tuple, dict, set, str 的常用成员函数，以及一些基础的文件操作。\n\n\n\n**阶段三：面向对象（3天）**\n\n**       **学习如何定义类，如何编写构造函数、继承子类、成员函数等，重点适应与 C++ 中类的区别。\n\n       在这一阶段，我会用 Python 重新编写一些我曾用 C++ 写的比较复杂、用到类的程序，以快速适应 Python 编程。\n\n\n\n**阶段四：高级特性（2天）**\n\n       深入了解 Python 中的模块、包，学会如何将自己的代码组织到多个文件，学会使用 try 语句来进行异常处理。\n\n\n\n**阶段五：学习爬虫技术（个人兴趣）（5天）**\n\n**       **深入学习 Requests, BeautifulSoup, Scrapy，研究一些大佬的代码，并做一个小项目。\n\n\n\n       在学习 Python 时，我会使用教材和 AI 辅助，主要采用 PBL 的方法，在动手实践的过程中发现问题，并在解决问题的过程中学习到新知识。\n\n## **我提出或遇到的问题**\n~~（包括描述、记录、尝试解决的过程，不用担心，大家都从一无所知走来，可以大胆记录）~~\n\n## **一些总结又或许感悟**\n~~（比较自由，也可以是你想与大家分享的内容）~~\n\n",
        "simhash": 17538000778411087189
    },
    "237675813": {
        "id": 237675813,
        "type": "Doc",
        "slug": "xpe9gmaacfr7mi44",
        "title": "工具技巧类-邓鸿瑞",
        "description": "1. 悦读课程《变革的力量》电子书获取1.1. 发现问题：悦读课要求阅读却在网站上找不到下载渠道1.2. 尝试利用简单工具解决1.2.1. 南大图书馆并无科特版《变革的力量》原著，似乎内容也不一样。图书馆还是有原著的，但希望碎片化时间阅读并且方便随地大小看还是不行的1.2.2. 鸠摩搜书（ht...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/59757345/1758422410788-f6faa544-01ab-4ffd-a142-aea5bd7060ac.png",
        "user_id": 59757345,
        "book_id": 69189148,
        "last_editor_id": 59757345,
        "public": 2,
        "status": 1,
        "likes_count": 3,
        "read_count": 0,
        "comments_count": 3,
        "word_count": 246,
        "created_at": "2025-09-21T00:11:34.000Z",
        "updated_at": "2025-09-24T02:04:13.000Z",
        "content_updated_at": "2025-09-23T03:19:26.000Z",
        "published_at": "2025-09-23T03:19:26.000Z",
        "first_published_at": "2025-09-21T02:54:24.730Z",
        "user": {
            "id": 59757345,
            "type": "User",
            "login": "u58097884",
            "name": "邓鸿瑞",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59757345/1755758610189-avatar/491a3a92-d401-4579-b501-40cbd987d2d8.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-16T13:57:56.000Z",
            "updated_at": "2025-09-19T10:00:57.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59757345,
            "type": "User",
            "login": "u58097884",
            "name": "邓鸿瑞",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59757345/1755758610189-avatar/491a3a92-d401-4579-b501-40cbd987d2d8.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-16T13:57:56.000Z",
            "updated_at": "2025-09-19T10:00:57.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "### 悦读课程《变革的力量》电子书获取\n![](https://cdn.nlark.com/yuque/0/2025/png/59757345/1758422410788-f6faa544-01ab-4ffd-a142-aea5bd7060ac.png)\n\n#### 发现问题：\n悦读课要求阅读却在网站上找不到下载渠道\n\n#### 尝试利用简单工具解决\n##### 南大图书馆\n![](https://cdn.nlark.com/yuque/0/2025/png/59757345/1758422679476-dcc7af5b-41d5-46af-9c7b-4f58349c4da0.png)\n\n并无科特版《变革的力量》原著，似乎内容也不一样。\n\n图书馆还是有原著的，但希望碎片化时间阅读并且方便随地大小看还是不行的\n\n##### 鸠摩搜书（[https://www.jiumodiary.com/](https://www.jiumodiary.com/)）\n这是一款教材搜索书，不少教材上面都能搜到\n\n![](https://cdn.nlark.com/yuque/0/2025/png/59757345/1758423120909-0381d9cf-0e17-466c-8ec2-a3340a9d889a.png)\n\n第一个检索结果看似找到了，实则不然![](https://cdn.nlark.com/yuque/0/2025/png/59757345/1758423168259-8afdb29e-f09e-417e-af91-1f78025b7494.png)\n\n第二个检索结果是txt感觉不如pdf方便，而且不能保证其内容无误\n\n##### 通过浏览器插件解决\n我使用的浏览器是edge（也是chrome内核）不知道有没有更方便的插件\n\n我尝试了\n\n\n\n\n\n碎片化时间先利用到这里～～～\n\n",
        "simhash": 4189966797304949321
    },
    "237675348": {
        "id": 237675348,
        "type": "Doc",
        "slug": "dwpgu44c1avxx3pt",
        "title": "Python学习类-蔡兴艺",
        "description": "行前有所思关于python的学习，我一直有点顾虑，因为最近还在学习c语言，怕同时学习导致概念的混淆，但想到两者的侧重点并不太相同，同时学习能在思维上互补，而且自己也选择了python的选修课，还是决定借着nova的活动来认真学习一下。关于python，我在尝试xxxxxcac发布的几个分支中我...",
        "cover": "",
        "user_id": 60106520,
        "book_id": 69189148,
        "last_editor_id": 60106520,
        "public": 2,
        "status": 1,
        "likes_count": 4,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 259,
        "created_at": "2025-09-20T23:29:52.000Z",
        "updated_at": "2025-09-23T12:34:54.000Z",
        "content_updated_at": "2025-09-23T12:34:54.000Z",
        "published_at": "2025-09-23T12:34:54.000Z",
        "first_published_at": "2025-09-20T23:30:18.108Z",
        "user": {
            "id": 60106520,
            "type": "User",
            "login": "caixingyi-ua5ys",
            "name": "蔡兴艺",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60106520/1757333919526-avatar/a4c6ea85-a7cb-4946-9dad-a5cb94ee7255.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-27T08:46:59.000Z",
            "updated_at": "2025-09-22T11:18:32.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60106520,
            "type": "User",
            "login": "caixingyi-ua5ys",
            "name": "蔡兴艺",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60106520/1757333919526-avatar/a4c6ea85-a7cb-4946-9dad-a5cb94ee7255.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-27T08:46:59.000Z",
            "updated_at": "2025-09-22T11:18:32.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 行前有所思\n关于python的学习，我一直有点顾虑，因为最近还在学习c语言，怕同时学习导致概念的混淆，但想到两者的侧重点并不太相同，同时学习能在思维上互补，而且自己也选择了python的选修课，还是决定借着nova的活动来认真学习一下。\n\n## 关于python，我在尝试xxxxx\ncac发布的几个分支中我对2，4，5这几个分支比较感兴趣，最后决定以分支2为主线，使用ai解读上星期实践组作业，尽量利用ai写出一份实践组作业，4的话vscode上课要用到，5是我的python的学习框架中的要求。\n\n我使用的是ai是Copilot，因为这是vscode的内置ai，使用起来比较方便且也比较专业。、\n\n\n\n\n\n\n\n\n\n~~~~\n\n## 我提出或遇到的问题\n\n\n~~~~\n\n## 一些总结又或许感悟\n~~~~\n\n\n\n",
        "simhash": 79675943765287313
    },
    "237675239": {
        "id": 237675239,
        "type": "Doc",
        "slug": "riafmo8xomdl0q7y",
        "title": "实践操作类-颜振宇",
        "description": "1. 确定目标每天平均四小时多的手机屏幕使用时间，一半以上在微信，很多时间包括走路、吃饭、工作都习惯性打开微信获取信息，但是每次打开某个群聊又发现几百+的新消息，少量多次反复翻看微信聊天记录，时间被极致碎片化，导致大量精力、时间被消耗。于是想着做一个微信聊天记录获取→有价值内容提取→主动/被动...",
        "cover": "",
        "user_id": 59982048,
        "book_id": 69189148,
        "last_editor_id": 59982048,
        "public": 2,
        "status": 1,
        "likes_count": 12,
        "read_count": 0,
        "comments_count": 1,
        "word_count": 2633,
        "created_at": "2025-09-20T23:14:19.000Z",
        "updated_at": "2025-09-24T00:18:20.000Z",
        "content_updated_at": "2025-09-23T05:24:44.000Z",
        "published_at": "2025-09-23T05:24:44.000Z",
        "first_published_at": "2025-09-20T23:14:48.768Z",
        "user": {
            "id": 59982048,
            "type": "User",
            "login": "yuqueyonghuaryx9k",
            "name": "颜振宇",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59982048/1755918703421-avatar/9433c1ef-6694-436f-a210-31b478608221.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-23T03:10:36.000Z",
            "updated_at": "2025-08-23T03:14:06.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59982048,
            "type": "User",
            "login": "yuqueyonghuaryx9k",
            "name": "颜振宇",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59982048/1755918703421-avatar/9433c1ef-6694-436f-a210-31b478608221.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-23T03:10:36.000Z",
            "updated_at": "2025-08-23T03:14:06.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "## 确定目标\n每天平均四小时多的手机屏幕使用时间，一半以上在微信，很多时间包括走路、吃饭、工作都习惯性打开微信获取信息，但是每次打开某个群聊又发现几百+的新消息，少量多次反复翻看微信聊天记录，时间被极致碎片化，导致大量精力、时间被消耗。\n\n于是想着做一个**微信聊天记录获取→有价值内容提取→主动/被动获取已过滤信息。**\n\n希望通过这种方式减少看微信的频率，提高使用社交媒体的效率。当然QQ也有这样的问题，但是微信还是占据我更多数时间，想先做这个。\n\n当然做项目也不是最终目标，现在实践跟学习五五开吧。\n\n## 目标解析\n### 确定方向\n该项目本质上是对大量信息进行筛选优化，社交平台上有些信息的价值是“静态”的，在某一段较长时间中对个人有实际意义；但我感觉更多的是“动态”的价值，或是即时聊天的情绪情感交互、即时的高频思想碰撞与创意产生。~~很多新鲜饭菜放着一会不吃就凉了，但是一直吃总是没时间或者总会撑的，可怜的大学生只能在有空的时候自己找预制菜吃。~~\n\n所以这个任务希望达到的效果就是我不需要频繁获取信息，可以一次性获取近期的有效消息，或是信息的自动分类结果。\n\n以第一性原理分析，信息传递原理是**信息源→传播途径→接收端**\n\n**信息源：**从信息源上解决问题其实是最本质的方法，最方便的就是建立一个“重要通知群”/全员禁言，他好我也好。但是并不是所有群都会搞一个重要通知群，而且有的水群（哈哈哈）也没人帮你收拾重要通知。这是由一个人的成本获得全员提效的全局优化方案。但是你不能强迫别人付出成本便利自己。\n\n**传播途径：**从传播途径上，例如QQ、微信、各种平台，或许改造平台的信息传递就可以解决这个问题，在接收信息后平台自动处理，给用户想要的信息。但是你不能强迫软件公司魔改自己的产品。（魔改微信合法吗）\n\n**接收端：**接收端大概也就是用户端了，我们目前只能对接收端的信息下手。我们需要处理我们拿到的信息。\n\n### 提出问题\n基于我 **“微信聊天记录获取→有价值/自动分类 内容筛选→主动/被动获取已优化信息” **的设想\n\n#### 获取聊天记录\n获取聊天记录本质上就是信息的获取。从原理上看我可能从信息的**动态传输/静态储存**中来获取我所需的数据，设想可能是服务器发送数据给我，我直接获取记录，或者数据在我本地存储之后我再获取出来。\n\n##### 数据形式是什么类型？\n##### 传输方式是怎样的？\n##### 存储方式是怎样的？\n##### 我怎么把信息拿到本地？\n##### 我在哪个环节获取信息性价比更高，有无合规问题？\n##### 有没有地方去借鉴前人的智慧、有没有现成的教程？\n#### 处理信息\n现在有两个思路，一种是判定几乎没用的消息cut掉，可以部分减少消息量，然后回归人工读消息；另一种是信息分类之后让用户端自选话题获取其中信息。我偏向后者。当然很大概率使用LLM来帮我分了，这一块暂时没想好。;w;\n\n#### 信息推送\n最终拿到优化信息，从大学生需求上，一般没有什么特别急的消息，一般都是一次性把未来几天的通知看了，那么我们信息推送就不用很高频，可以选择一种主动获取的方法。\n\n##### 信息推送的方式有哪些？\n##### 我优化完的信息要以什么形式拿给用户？\n##### 有没有地方去借鉴前人的智慧、有没有现成的教程？\n## 知识整合\n### 微信信息的数据\n概览：客户端临时/本地存储 → 客户端加密与打包 → 通过网络传输到腾讯服务器（可能经过额外业务层加密/协议）→ 服务器处理/存储/分发（媒体常放CDN/对象存储）→ 服务器下发并在接收端本地保存/同步。  \n\n#### 储存形式\n        * **主存放位置**：桌面/系统用户文档下的 `WeChat Files`（通常 `C:\\Users\\<你>\\Documents\\WeChat Files\\`），每个微信账号会有一个以 `wxid_...` 或昵称命名的子文件夹。\n        * **聊天记录数据库**：在每个账号目录的 `Msg\\Multi\\`（或者直接 `Msg\\`）里会有 `MSG.db` / `MSG0.db`、`MSG1.db`（超过 ~240MB 会滚动生成）以及类似 `MicroMsg.db`、`MediaMsg.db` 等用于联系人、媒体索引、语音等的 SQLite 文件。这些就是你要解析的核心数据源。\n        * **媒体与附件**：图片、视频、语音通常以单独文件存放（图片 jpg/png、视频 mp4、语音常见 silk/pcm），另有 FileStorage / Image / Video 子目录保存原始文件与缓存。\n        * **索引和 WAL / FTS**：SQLite 的 WAL 文件、全文索引（FTS）文件也可能存在，需要一并考虑。\n\n#### 获取方式\n 在“传输过程中截获”的思路更多是安全研究、逆向、取证领域的做法，对个人项目来说过于复杂、收益不大。  \n\n目前主要是本地获取。\n\n#### 解密方式\n**PC 端（Windows）情形**：Windows 客户端保存的 `.db` 文件也有加密/混淆（不同版本差异较大）。\n\n**常见实务手段**是：在登录状态下从运行中的 WeChat 进程内/内存转储中提取解密密钥，然后用该 key 解密本地 DB；\n\n另一种是使用微信官方提供的“备份到电脑”并用客户端导出的备份（这些备份本身也可能被加密）。关于用内存取 key 的方法有公开技术博客与工具说明。\n\n#### 常见表结构\n虽然不同版本列名会略有差别，但核心字段一般都存在，便于做时间线/会话归并：\n\n            + `talker`（对话方 id / 群 id）\n            + `createTime` / `msgCreateTime`（时间戳）\n            + `type`（消息类型：文本、图片、语音、视频、红包、转账等）\n            + `content`（文本内容或用于引用附件的路径/标识）\n            + `isSend` / `status` / `msgId`（发送/接收/ID/状态）  \n这些可以直接导出到 CSV/JSON 做后续分析。\n\n#### 前人智慧\n[windows取证之导出微信&QQ聊天记录 - yanq的个人博客](https://saucer-man.com/information_security/1038.html?utm_source=chatgpt.com)\n\n        1. **wechat-text-backup（zhaofeng-shu33/wechat-text-backup）** — 专注 Windows 客户端的备份/解密/导出工具，README 里直接说明了“从内存拿 32 字节密码 → 用工具 decrypt → extract.py 导出”的流程，最适合直接尝试你当前目标（Windows `.db`）。优点：针对 Windows，步骤明确；缺点：可能只支持某些历史版本，最新客户端可能需要调整。[GitHub](https://github.com/zhaofeng-shu33/wechat-text-backup?utm_source=chatgpt.com)\n        2. **PyWxDump（xaoyaoo / Aeron1-bit 的 fork）** — 一个功能齐全的 Python 工具，定位为“读取并导出 PC WeChat 数据、支持多版本、导出 CSV/HTML”。适合你把导出与后处理（CSV/JSON）自动化的场景；很多人把它当作“解析 + 导出”框架来用。优点：Python，易改造；缺点：解密/密钥提取在不同版本可能要额外处理。[GitHub+1](https://github.com/xaoyaoo/PyWxDump?utm_source=chatgpt.com)\n        3. **ppwwyyxx/wechat-dump** — 安卓端的经典工具，能解密 `EnMicroMsg.db` 并渲染为 HTML，思路清晰（sqlcipher 解密参数、媒体恢复等）。虽然主要面向 Android，但它的解密与 sqlcipher 用法、消息解析思路非常值得借鉴。[GitHub](https://github.com/ppwwyyxx/wechat-dump?utm_source=chatgpt.com)\n        4. **decrypt-wechat-db（4ft35t/decrypt-wechat-db）** — 专注调用 `sqlcipher` 去解 `EnMicroMsg.db` 的脚本 / docker 化示例。若你遇到 SQLCipher 加密（常见于移动端），这个仓库是实用脚手架。[GitHub](https://github.com/4ft35t/decrypt-wechat-db?utm_source=chatgpt.com)\n        5. **逆向 / 运行时密钥提取教程（Nisos 博客）** — 一篇很实用的文章，讲如何在没有手机的情况下，从登录的 Windows Workstation 把 WeChat 进程内存 dump 出来、定位密钥、解密 `.db` 的高级流程（适合你在“直接拷库+解密失败”时做深度挖掘）。注意：涉及内存取证，需要小心操作与合规。[Nisos](https://nisos.com/blog/decrypting-wechat-messages/?utm_source=chatgpt.com)\n        6. **实操博文 / 中文教程（示例）** — 有一些中文博主/技术博客给出“复制 `%USERPROFILE%\\Documents\\WeChat Files\\<id>\\Msg` → 在登录状态下抓内存拿 key → 用脚本解密”的逐步演示（可作为实操参照）。这些博文帮助你把抽象步骤变成可复现的命令序列。[毅种循环+1](https://s4u2self.cc/dao-chu-he-n-you-de-wei-xin-liao-tian-ji-lu--wo-yong-ci-yun-fen-xi-le-wo-men-zai-shuo-xie-shen-me-md?locale=en&utm_source=chatgpt.com)\n        7. **安卓 / iOS 相关仓库（补充学习）** — 如果你未来想覆盖手机端：`ppwwyyxx/wechat-dump`、`AndroidWechatSQLiteDecrypt` 等仓库讲解了如何在安卓上拿 key（root / Xposed / logcat）并调用 sqlcipher 解密。对理解整体生态很有帮助。[GitHub+1](https://github.com/ppwwyyxx/wechat-dump?utm_source=chatgpt.com)\n        8. **通用工具**：`sqlite3` / `sqlcipher` (命令行或 Python bindings)、`volatility` / 内存分析工具、`Process Hacker` / `x64dbg`（调试/内存抓取），以及 Python 库 `sqlite3`, `pandas`, `pycryptodome` 等。\n\n## 零散实践\n## 最终实现\n",
        "simhash": 11250486767091894265
    },
    "237675094": {
        "id": 237675094,
        "type": "Doc",
        "slug": "nuhfxrmli9q1tk4q",
        "title": "工具技巧类-陈仁杰",
        "description": "(将书籍/论文中的公式快速准确地识别并转换为LaTeX代码社团要求践行PBL，那么制作思维导图就是常见需求，有什么好的工具或者软件检索物理力学自学方法和避坑指南找到前辈们学习大学课程的各种经验)",
        "cover": "",
        "user_id": 59585537,
        "book_id": 69189148,
        "last_editor_id": 59585537,
        "public": 2,
        "status": 1,
        "likes_count": 3,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 91,
        "created_at": "2025-09-20T22:45:58.000Z",
        "updated_at": "2025-09-22T08:40:57.000Z",
        "content_updated_at": "2025-09-22T08:40:57.000Z",
        "published_at": "2025-09-22T08:40:57.000Z",
        "first_published_at": "2025-09-21T03:25:32.096Z",
        "user": {
            "id": 59585537,
            "type": "User",
            "login": "25xiaoming",
            "name": "陈仁杰",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59585537/1755769679573-avatar/d72d7a02-3390-4d94-b9d6-83cdc84c5a7e.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-11T07:42:26.000Z",
            "updated_at": "2025-09-03T00:13:23.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59585537,
            "type": "User",
            "login": "25xiaoming",
            "name": "陈仁杰",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/59585537/1755769679573-avatar/d72d7a02-3390-4d94-b9d6-83cdc84c5a7e.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-08-11T07:42:26.000Z",
            "updated_at": "2025-09-03T00:13:23.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "(将书籍/论文中的公式快速准确地识别并转换为LaTeX代码社团要求践行PBL，那么制作思维导图就是常见需求，有什么好的工具或者软件\n\n检索物理力学**自学**方法和避坑指南\n\n找到前辈们学习大学课程的各种经验)\n\n\n\n",
        "simhash": 5308094160455751829
    },
    "237646894": {
        "id": 237646894,
        "type": "Doc",
        "slug": "ynl2ma8yc350o7x9",
        "title": "实践操作类-谷和平",
        "description": "选择问题P4：我想知道谁读过我的文档基于语雀官方提供的Token，可以实现的功能有限，比如查看谁读过文档这件事，就不能通过Token获得那么问题来了，如何利用爬虫技术，稳定获取这类数据信息更进一步的思考，如果掌握了爬虫技术（能搞定语雀站点就行），我们还可以做什么？分析问题选择原因选择这个问题的...",
        "cover": "https://cdn.nlark.com/yuque/0/2025/png/22463641/1758527954572-0ed143d6-accb-41d7-8481-4ce952799f2a.png",
        "user_id": 22463641,
        "book_id": 69189148,
        "last_editor_id": 58845698,
        "public": 2,
        "status": 0,
        "likes_count": 16,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 1767,
        "created_at": "2025-09-20T16:02:23.000Z",
        "updated_at": "2025-09-24T02:23:10.000Z",
        "content_updated_at": "2025-09-24T02:23:09.000Z",
        "published_at": "2025-09-23T15:11:49.000Z",
        "first_published_at": "2025-09-20T16:02:36.487Z",
        "user": {
            "id": 22463641,
            "type": "User",
            "login": "heping-qcbue",
            "name": "谷和平",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/22463641/1757471835315-avatar/685cbb7a-b2da-4d2f-8ca2-561b2a56ea2c.jpeg",
            "followers_count": 0,
            "following_count": 1,
            "public": 1,
            "description": "",
            "created_at": "2021-08-21T02:01:41.000Z",
            "updated_at": "2025-09-22T02:22:06.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 58845698,
            "type": "User",
            "login": "dubianxunqingye",
            "name": "邹少乾",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/png/58845698/1755660353505-avatar/a0258a6d-cf0b-4da6-935d-3f6e42b6d8c6.png",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-20T09:53:19.000Z",
            "updated_at": "2025-09-19T04:59:26.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "# 选择问题\n**P4：我想知道谁读过我的文档**\n\n> 基于语雀官方提供的Token，可以实现的功能有限，比如查看谁读过文档这件事，就不能通过Token获得\n>\n> 那么问题来了，如何利用爬虫技术，稳定获取这类数据信息\n>\n> 更进一步的思考，如果掌握了爬虫技术（能搞定语雀站点就行），我们还可以做什么？\n>\n\n# 分析问题\n## 选择原因\n选择这个问题的原因是在第一周我刚通过Token获取了语雀的文档，基本可以和上手爬虫很好的衔接。\n\n另外我也想针对性的获取一些新手团队之外的文档来了解一些自己感兴趣的东西。\n\n## 问题根本\n就是一个爬虫问题。\n\n## 问题拆解\n1. 用爬虫访问语雀\n2. 定位访问信息的下载地址并下载\n3. 分析访问信息，得出谁读过自己的文档\n4. 实现批量获取、统计信息\n\n# 解决问题\n## 用爬虫访问语雀\n### 进一步细化并分析问题\n+ **<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">发送 HTTP 请求</font>**<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">：爬虫通过 HTTP 请求从目标网站获取 HTML 页面，常用的库包括 </font>`[<font style=\"color:rgb(0, 102, 0);background-color:rgb(250, 252, 253);\">requests</font>](https://www.runoob.com/python3/python-requests.html)`<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">。</font>\n+ **<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">解析 HTML 内容</font>**<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">：获取 HTML 页面后，爬虫需要解析内容并提取数据，常用的库有</font><font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\"> </font>`<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">BeautifulSoup</font>`<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">、</font>`<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">lxml</font>`<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">、</font>`<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">Scrapy</font>`<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\"> </font><font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">等。</font>\n+ **<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">提取数据</font>**<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">：通过定位 HTML 元素（如标签、属性、类名等）来提取所需的数据。</font>\n+ **<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">存储数据</font>**<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">：将提取的数据存储到数据库、CSV 文件、JSON 文件等格式中，以便后续使用或分析。</font>\n\n> 摘自菜鸟教程\n>\n\n### 逐步解决问题\n#### **<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">发送 HTTP 请求</font>**\nrequests库在上周已经装过了。\n\n```python\nimport requests\n\n# 访问团队页面\ntest1 = requests.get('https://nova.yuque.com/rhg37y')\nprint(test1.status_code)\n```\n\n返回200，似乎没有什么问题。\n\n然后试了访问一下具体的知识库的内容。\n\n```python\n# 访问知识库内容\ntest2 = requests.get('https://nova.yuque.com/rhg37y/feedback')\nwith open('./content.html', 'w', encoding='utf-8') as f:\n    f.write(test2.content.decode(\"utf-8\"))\n```\n\n得到了一个html文件，简单观察了一下好像是nova空间的登录界面，而不是知识库。\n\n一个自然的问题是如何在发送请求时实现登录。\n\n请求头补充完cookie和user-agent后，自然显示的是登录后的界面了。\n\n```python\nheaders = {\n    'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',\n    'Cookie' : 'your_cookie'\n}\n\n# 访问团队内容\ngroup = requests.get('https://nova.yuque.com/rhg37y', headers=headers)\nwith open('./content.html', 'w', encoding='utf-8') as f:\n    f.write(group.content.decode(\"utf-8\"))\n```\n\n放一个获取的数据的截图。\n\n![](https://cdn.nlark.com/yuque/0/2025/png/22463641/1758527954572-0ed143d6-accb-41d7-8481-4ce952799f2a.png)\n\n#### 解析HTML内容\n安装了beautifulsoup和lxml后，开始尝试获取从访问团队获得的数据中获得各知识库的内容。\n\n先从简单的开始，获取标题。\n\n```python\nfrom bs4 import BeautifulSoup\n\n# 使用beautifulsoup解析网页内容\nurl = 'https://nova.yuque.com/rhg37y'\nresponse = requests.get(url, headers=headers)\nresponse.encoding = 'utf-8'  # 中文编码\n# 确保请求成功\nif response.status_code == 200:\n    # 使用BeautifulSoup解析网页内容\n    soup = BeautifulSoup(response.text, 'lxml')\n   \n    # 查找<title>标签\n    title_tag = soup.find('title')\n   \n    # 打印标题文本\n    if title_tag:\n        print(title_tag.get_text())\n    else:\n        print(\"未找到<title>标签\")\nelse:\n    print(\"请求失败，状态码：\", response.status_code)\n```\n\n接下来要寻找哪里存放了团队内的各知识库。\n\n在HTML文件里直接搜知识库的名称是没有结果的，搜点开知识库地址栏内的一串字符也找不到，然后我尝试搜索id，发现了可疑的东西。\n\n```html\n<script nonce=yg7tPgYjrW9du6W4eaeF>\n  (function() {\n    window.appData = JSON.parse(decodeURIComponent(\"%7B%22me%22%3A%7B%22PERMISSION%22%3A%7B%22create_member%22%3Atrue%2C%22create_book%22%3Atrue%2C%22create_book_collaborator%22%3Afalse%2C%22modify_book_setting%22%3Afalse%2C%22share_book%22%3Atrue%2C%22export_book%22%3Atrue%2C%22share_doc%22%3Atrue%2C%22export_doc%22%3Atrue%2C%22force_delete_doc%22%3Afalse%7D%2C%22organization_login%22%3A0%2C%22user_id%22%3A22463641%2C%22isInCurrentOrg%22%3Atrue%2C%22publicName%22%3A%22%E5%92%8C%E5%B9%B3%22%2C%22publicAvatar%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fjpeg%2F22463641%2F1754670370818-avatar%2Fd9c7c6bc-da88-4082-bd0b-344904d0ece8.jpeg%22%2C%22login%22%3A%22heping-qcbue%22%2C%22description%22%3A%22%22%2C%22work_id%22%3A%22%22%2C%22email%22%3A%22%22%2C%22mobile%22%3A%22153******86%22%2C%22member_level%22%3A1%2C%22isPermanentPunished%22%3Afalse%2C%22avatar_url%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fjpeg%2F22463641%2F1757471835315-avatar%2F685cbb7a-b2da-4d2f-8ca2-561b2a56ea2c.jpeg%22%2C%22isActive%22%3Atrue%2C%22isInactive%22%3Afalse%2C%22isDeactivated%22%3Afalse%2C%22isTerminated%22%3Afalse%2C%22isBanned%22%3Afalse%2C%22isBlocked%22%3Afalse%2C%22isExtcontact%22%3Afalse%2C%22isPaid%22%3Atrue%2C%22hasMemberLevel%22%3Atrue%2C%22memberLevelName%22%3A%22%E4%B8%93%E4%B8%9A%E4%BC%9A%E5%91%98%22%2C%22isTopLevel%22%3Afalse%2C%22isNewbie%22%3Afalse%2C%22isWillExpire%22%3Afalse%2C%22isWiki%22%3Afalse%2C%22isPublicPage%22%3Afalse%2C%22isWorker%22%3Afalse%2C%22account%22%3A%7B%22id%22%3A22039741%2C%22name%22%3A%22%E5%92%8C%E5%B9%B3%22%2C%22username%22%3A%22c5259e1c-216c-4785-859c-c8ea01661859%22%2C%22mobile%22%3A%22153******86%22%2C%22email%22%3A%22%22%2C%22_serializer%22%3A%22web.account%22%7D%2C%22corpAccounts%22%3A%7B%7D%2C%22assistant%22%3A%7B%7D%2C%22id%22%3A22463641%2C%22created_at%22%3A%222021-08-21T02%3A01%3A41.000Z%22%2C%22updated_at%22%3A%222025-09-22T02%3A22%3A06.000Z%22%2C%22space_id%22%3A0%2C%22type%22%3A%22User%22%2C%22name%22%3A%22%E8%B0%B7%E5%92%8C%E5%B9%B3%22%2C%22avatar%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fjpeg%2F22463641%2F1757471835315-avatar%2F685cbb7a-b2da-4d2f-8ca2-561b2a56ea2c.jpeg%22%2C%22owner_id%22%3Anull%2C%22topics_count%22%3A0%2C%22public_topics_count%22%3A0%2C%22members_count%22%3A0%2C%22books_count%22%3A12%2C%22public_books_count%22%3A0%2C%22followers_count%22%3A0%2C%22following_count%22%3A1%2C%22account_id%22%3A22039741%2C%22role%22%3A1%2C%22status%22%3A1%2C%22public%22%3A1%2C%22wants_email%22%3Atrue%2C%22wants_marketing_email%22%3Atrue%2C%22topic_updated_at_ms%22%3A0%2C%22deleted_slug%22%3Anull%2C%22language%22%3A%22zh-cn%22%2C%22organization_id%22%3A0%2C%22zone_id%22%3A0%2C%22emp_type%22%3Anull%2C%22group_department_updated_at%22%3Anull%2C%22expired_at%22%3A%222026-09-04T15%3A59%3A59.000Z%22%2C%22scene%22%3Anull%2C%22source%22%3A%22root%22%2C%22max_member%22%3Anull%2C%22last_logined_at%22%3A%222025-09-22T02%3A22%3A06.000Z%22%2C%22deleted_at%22%3Anull%2C%22grains_sum%22%3A138%2C%22punish_expired_at%22%3Anull%2C%22extend_private%22%3A0%2C%22hasPassword%22%3Atrue%2C%22isTrial%22%3Afalse%2C%22canCreateOrg%22%3Atrue%2C%22hasNewEvent%22%3Afalse%2C%22is_admin%22%3Afalse%2C%22is_uirobot%22%3Afalse%2C%22theme%22%3A%22default%22%7D%2C%22notification%22%3A%7B%22notifyCount%22%3A0%2C%22showDot%22%3Afalse%7D%2C%22settings%22%3A%7B%22allowed_link_schema%22%3A%5B%22dingtalk%3A%22%5D%2C%22login_wechat_platform_type%22%3A%22wechat%22%2C%22enable_link_interception%22%3Atrue%2C%22enable_new_user_public_ability_forbid%22%3Atrue%2C%22user_registry_forbidden_level%22%3A%22%22%2C%22watermark_enable%22%3A%22%22%2C%22public_space_doc_search_enable%22%3Atrue%2C%22lake_enabled_groups%22%3A%22*%22%2C%22image_proxy_root%22%3A%22%22%2C%22max_import_task_count%22%3A1%2C%22enable_search%22%3Atrue%2C%22enable_serviceworker%22%3Atrue%2C%22enable_lazyload_card%22%3A%22codeblock%22%2C%22editor_canary%22%3A%7B%22card_lazy_init%22%3A100%2C%22retryOriginImage%22%3A100%7D%2C%22enable_attachment_multipart%22%3Atrue%2C%22enable_custom_video_player%22%3Atrue%2C%22conference_gift_num%22%3A0%2C%22intranet_safe_tip%22%3A%5B%22open%22%5D%2C%22publication_enable_whitelist%22%3A%5B%5D%2C%22foreign_phone_registry_enabled_organization_whitelistdisable_comment_socket%22%3Atrue%2C%22disabled_login_modal_pop_default%22%3Atrue%2C%22enable_open_in_mobile_app%22%3Atrue%2C%22enable_wechat_guide_qrcode%22%3Atrue%2C%22enable_blank_page_detect%22%3Atrue%2C%22zone_ant_auth_keepalive_enabled_domains%22%3A%5B%5D%2C%22enable_new_group_page_whitelist%22%3A%5B%5D%2C%22enable_web_ocr%22%3A%7B%22enable%22%3Atrue%2C%22disableBrowsersUpVersion%22%3A%7B%22mac%22%3A%7B%22chrome%22%3A%22128%22%7D%7D%2C%22enableBrowsers%22%3A%5B%22chrome%22%5D%2C%22_users%22%3A%5B106822%5D%2C%22percent%22%3A100%7D%2C%22customer_staff_dingtalk_id%22%3A%22%22%2C%22enable_desktop_force_local%22%3Atrue%2C%22side_third_app_config%22%3A%7B%7D%2C%22desktop_check_network_status_interval%22%3A30%2C%22debug_assistant_provider_url%22%3A%22%22%2C%22enable_ai_audio%22%3Atrue%2C%22codefuse_assistant_provider_url%22%3A%22%22%2C%22opsgpt_assistant_provider_url%22%3A%22%22%2C%22enable_links%22%3A%22true%22%2C%22enable_yuque_ai_sidebar%22%3Atrue%2C%22user_certifications_share_whitelist%22%3A%5B%22352135%22%2C%2239191355%22%2C%2295294%22%2C%2213012852%22%2C%2239187844%22%2C%2239195365%22%2C%2222303185%22%2C%2239199571%22%2C%2239200198%22%5D%2C%22user_certifications_share_scale%22%3A10%2C%22app_trusted_url_patterns%22%3A%5B%22%5Ehttps%3F%3A%5C%5C%2F%5C%5C%2F%5Ba-zA-Z0-9.-%5D%2B%5C%5C.yuque%5C%5C.com%22%2C%22%5Ehttps%3F%3A%5C%5C%2F%5C%5C%2F%5Ba-zA-Z0-9.-%5D%2B%5C%5C.nlark%5C%5C.com%22%2C%22%5Ealipays%3F%3A%5C%5C%2F%5C%5C%2F%22%5D%2C%22enable_mobile_appeal%22%3Atrue%2C%22member_buy_ad%22%3A%7B%7D%2C%22success_buy_ad%22%3A%7B%7D%2C%22doc_generator_type_blacklist%22%3A%5B%5D%2C%22ai_infer_daily_max_call%22%3A100%2C%22text_correction_config%22%3A%7B%7D%2C%22doc_arrangement_config%22%3Anull%2C%22enable_ai_writing_in_dashboard%22%3Atrue%2C%22enable_public_search%22%3A%7B%7D%2C%22site_beian_config%22%3A%7B%22nlark%22%3A%7B%22icp%22%3A%22%E5%90%88%E5%AD%97B2-20200098%22%2C%22icpBeian%22%3A%22%E6%B5%99ICP%E5%A4%8714032978%E5%8F%B7-12%22%2C%22policeBeian%22%3A%22%E6%B5%99%E5%85%AC%E7%BD%91%E5%AE%89%E5%A4%8733010602013485%22%7D%2C%22yuque%22%3A%7B%22icp%22%3A%22%E5%90%88%E5%AD%97B2-20200098%22%2C%22icpBeian%22%3A%22%E6%B5%99ICP%E5%A4%8714032978%E5%8F%B7-13%22%2C%22policeBeian%22%3A%22%E6%B5%99%E5%85%AC%E7%BD%91%E5%AE%89%E5%A4%8733010602012110%22%7D%7D%2C%22gray_scale%22%3A%7B%22editorAudioPlugin%22%3Afalse%2C%22agiImage%22%3Afalse%2C%22docReferenceRag%22%3Afalse%7D%2C%22enable_book_doc_pin%22%3Atrue%2C%22threadCommentReplyUseRichText%22%3Atrue%2C%22all_default_captcha_enable%22%3Atrue%2C%22allow_import_from_confluence%22%3Afalse%2C%22is_via_custom_domain%22%3Afalse%2C%22enable_custom_domain%22%3Afalse%2C%22is_trusted_organization%22%3Afalse%2C%22custom_passport_white_list%22%3Afalse%2C%22test_started_org_id%22%3A%2220002002%22%2C%22support_extension_download_url%22%3Atrue%2C%22support_extension_download_assembly%22%3Atrue%2C%22user_communication_group_qrcode%22%3A%22https%3A%2F%2Fmdn.alipayobjects.com%2Fhuamei_0prmtq%2Fafts%2Fimg%2FA*5CiSRraBRL0AAAAAAAAAAAAADvuFAQ%2Foriginal%22%2C%22disableDocumentCopy%22%3Afalse%7D%2C%22cloudSettings%22%3A%7B%22disable_client_download%22%3Afalse%2C%22disable_issue%22%3Afalse%2C%22disable_office_preview%22%3Afalse%2C%22disable_site_tip%22%3Afalse%2C%22disable_super_assistant%22%3Afalse%2C%22disable_ai_doc_generator%22%3Afalse%2C%22disable_ai_doc_writer%22%3Afalse%2C%22disable_ai_doc_reader%22%3Afalse%7D%2C%22env%22%3A%22prod%22%2C%22space%22%3A%7B%22id%22%3A0%2C%22login%22%3A%22%22%2C%22name%22%3A%22%E8%AF%AD%E9%9B%80%22%2C%22short_name%22%3Anull%2C%22status%22%3A0%2C%22account_id%22%3A0%2C%22logo%22%3Anull%2C%22description%22%3A%22%22%2C%22created_at%22%3Anull%2C%22updated_at%22%3Anull%2C%22host%22%3A%22https%3A%2F%2Fwww.yuque.com%22%2C%22displayName%22%3A%22%E8%AF%AD%E9%9B%80%22%2C%22logo_url%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F303152%2F1665994257081-avatar%2Fdcb74862-1409-4691-b9ce-8173b4f6e037.png%22%2C%22enable_password%22%3Atrue%2C%22enable_watermark%22%3Afalse%2C%22_serializer%22%3A%22web.space%22%7D%2C%22organization%22%3A%7B%22id%22%3A4522%2C%22login%22%3A%22nova%22%2C%22name%22%3A%22NOVA%22%2C%22status%22%3A0%2C%22public%22%3A2%2C%22user_id%22%3A294617%2C%22description%22%3A%22%E5%8D%97%E4%BA%AC%E5%A4%A7%E5%AD%A6%E6%99%BA%E8%83%BD%E6%95%B0%E6%8D%AE%E5%86%B3%E7%AD%96%E5%B7%A5%E4%BD%9C%E5%AE%A4%22%2C%22logo%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F294617%2F1567646355691-avatar%2Fff2f6133-4491-4a50-8fad-cfb98b73219f.png%22%2C%22allow_ips%22%3Anull%2C%22allow_dingtalk_app_enable%22%3A0%2C%22external_enable%22%3A0%2C%22watermark_enable%22%3A1%2C%22password_enable%22%3A1%2C%22corp_sync_name_enable%22%3A1%2C%22document_copy_enable%22%3A1%2C%22share_to_outside_enable%22%3A1%2C%22export_content_enable%22%3A1%2C%22content_security_warning_enable%22%3A0%2C%22security_warning_channel%22%3Anull%2C%22warning_keywords%22%3Anull%2C%22trialStatus%22%3A0%2C%22canTrial%22%3Afalse%2C%22isLimited%22%3Afalse%2C%22payment_status%22%3A0%2C%22size%22%3A%2210-50%22%2C%22created_at%22%3A%222019-09-05T01%3A19%3A58.000Z%22%2C%22updated_at%22%3A%222025-09-22T10%3A19%3A45.000Z%22%2C%22expired_at%22%3A%222025-12-04T15%3A59%3A59.000Z%22%2C%22will_delete_at%22%3Anull%2C%22abilities%22%3A%7B%22read%22%3Atrue%2C%22update%22%3Afalse%2C%22destroy%22%3Afalse%2C%22read_home%22%3Atrue%2C%22read_member%22%3Atrue%2C%22update_member%22%3Afalse%2C%22destroy_member%22%3Afalse%2C%22create_group%22%3Atrue%2C%22read_wiki%22%3Atrue%7D%2C%22max_member%22%3A500%2C%22maxMember%22%3A500%2C%22payment_type%22%3A1%2C%22isPremium%22%3Atrue%2C%22isWillExpired%22%3Afalse%2C%22pay_package%22%3A0%2C%22grains_sum%22%3A40220%2C%22desktop_enable%22%3A1%2C%22host%22%3A%22https%3A%2F%2Fnova.yuque.com%22%2C%22address_book_type%22%3A%22yuque%22%2C%22leaving_info_enable%22%3A0%2C%22org_wiki_homepage_enable%22%3A0%2C%22certification_type%22%3A2%2C%22isNewOrg%22%3Afalse%2C%22memberPrice%22%3A0%2C%22canEditBasicProfile%22%3Atrue%2C%22org_wiki_show_books%22%3A1%2C%22_serializer%22%3A%22web.organization%22%7D%2C%22isYuque%22%3Atrue%2C%22isPublicCloud%22%3Atrue%2C%22isEnterprise%22%3Afalse%2C%22isUseAntLogin%22%3Afalse%2C%22defaultSpaceHost%22%3A%22https%3A%2F%2Fwww.yuque.com%22%2C%22timestamp%22%3A1758536833453%2C%22traceId%22%3A%220a223c8317585368332431847658%22%2C%22siteName%22%3A%22NOVA%22%2C%22siteTip%22%3Anull%2C%22activityTip%22%3Anull%2C%22topTip%22%3Anull%2C%22readTip%22%3A%7B%22global%22%3A22199018%2C%22desktop_public_popup%22%3A48451579%2C%22knowledge_pie_ai_doc_create%22%3A1%2C%22knowledge_pie_ai_write%22%3A1%2C%22desktop_online_book_entry_tip%22%3A1%2C%22desktop_online_book_entry_tip_isCollapsed%22%3A1%2C%22desktop_online_book_feature_tip%22%3A1%2C%22owner_help_introduce_tip_22463641%22%3A1%2C%22public_popup%22%3A55244693%2C%22feature_org_wiki_introduce_4522%22%3A1%2C%22feature_garden_introduce_22463641%22%3A1%7D%2C%22questionRecommend%22%3A%7B%22id%22%3A36035491%2C%22created_at%22%3A%222023-06-14T06%3A27%3A57.297Z%22%2C%22updated_at%22%3A%222023-06-14T06%3A27%3A57.297Z%22%2C%22content%22%3A%22%7B%5C%22image%5C%22%3A%5C%22https%3A%2F%2Fmdn.alipayobjects.com%2Fhuamei_0prmtq%2Fafts%2Fimg%2FA*WfjHQYkHAykAAAAAAAAAAAAADvuFAQ%2Foriginal%5C%22%2C%5C%22url%5C%22%3A%5C%22https%3A%2F%2Fsurvey.alipay.com%2Fapps%2Fzhiliao%2FKIo2JqMv0%5C%22%2C%5C%22openType%5C%22%3A%5C%22open%5C%22%7D%22%2C%22type%22%3A%22yuque_org_question_recommend%22%2C%22is_activity_live%22%3Afalse%2C%22is_bulletin_board%22%3Afalse%7D%2C%22dashboardBannerRecommend%22%3Anull%2C%22imageServiceDomains%22%3A%5B%22cdn.yuque.com%22%2C%22cdn.nlark.com%22%2C%22img.shields.io%22%2C%22travis-ci.org%22%2C%22api.travis-ci.org%22%2C%22npm.packagequality.com%22%2C%22snyk.io%22%2C%22coveralls.io%22%2C%22badgen.now.sh%22%2C%22badgen.net%22%2C%22packagephobia.now.sh%22%2C%22duing.alibaba-inc.com%22%2C%22npm.alibaba-inc.com%22%2C%22web.npm.alibaba-inc.com%22%2C%22npmjs.com%22%2C%22npmjs.org%22%2C%22npg.dockerlab.alipay.net%22%2C%22private-alipayobjects.alipay.com%22%2C%22googleusercontent.com%22%2C%22blogspot.com%22%2C%22cdn.hk01.com%22%2C%22camo.githubusercontent.com%22%2C%22gw.daily.taobaocdn.net%22%2C%22cdn-images-1.medium.com%22%2C%22medium.com%22%2C%22i.stack.imgur.com%22%2C%22imgur.com%22%2C%22doc.ucweb.local%22%2C%22lh6.googleusercontent.com%22%2C%224.bp.blogspot.com%22%2C%22bp.blogspot.com%22%2C%22blogspot.com%22%2C%221.bp.blogspot.com%22%2C%222.bp.blogspot.com%22%2C%223.bp.blogspot.com%22%2C%22aliwork-files.oss-accelerate.aliyuncs.com%22%2C%22oss-accelerate.aliyuncs.com%22%2C%22work.alibaba.net%22%2C%22work.alibaba-inc.com%22%2C%22work-file.alibaba.net%22%2C%22work-file.alibaba-inc.com%22%2C%22pre-work-file.alibaba-inc.com%22%2C%22yuque.antfin.com%22%2C%22yuque.antfin-inc.com%22%2C%22intranetproxy.alipay.com%22%2C%22lark-assets-prod-aliyun.oss-accelerate.aliyuncs.com%22%2C%22lh1.googleusercontent.com%22%2C%22lh2.googleusercontent.com%22%2C%22lh3.googleusercontent.com%22%2C%22lh4.googleusercontent.com%22%2C%22lh5.googleusercontent.com%22%2C%22lh6.googleusercontent.com%22%2C%22lh7.googleusercontent.com%22%2C%22lh8.googleusercontent.com%22%2C%22lh9.googleusercontent.com%22%2C%22raw.githubusercontent.com%22%2C%22github.com%22%2C%22en.wikipedia.org%22%2C%22rawcdn.githack.com%22%2C%22pre-work-file.alibaba-inc.com%22%2C%22alipay-rmsdeploy-image.cn-hangzhou.alipay.aliyun-inc.com%22%2C%22antsys-align-files-management.cn-hangzhou.alipay.aliyun-inc.com%22%2C%22baiyan-pre.antfin.com%22%2C%22baiyan.antfin.com%22%2C%22baiyan.dev.alipay.net%22%2C%22marketing.aliyun-inc.com%22%2C%22lark-temp.oss-cn-hangzhou.aliyuncs.com%22%2C%22nova.yuque.com%22%2C%22yuque.com%22%2C%22cdn.nlark.com%22%5D%2C%22sharePlatforms%22%3A%5B%22wechat%22%2C%22dingtalk%22%5D%2C%22locale%22%3A%22zh-cn%22%2C%22hideSidebar%22%3Atrue%2C%22group%22%3A%7B%22id%22%3A39164132%2C%22type%22%3A%22Group%22%2C%22login%22%3A%22rhg37y%22%2C%22name%22%3A%22Nova%E7%A4%BE%E5%91%98-%E5%88%9D%E7%BA%A7%22%2C%22description%22%3A%22%22%2C%22avatar%22%3Anull%2C%22avatar_url%22%3A%22https%3A%2F%2Fgw.alipayobjects.com%2Fzos%2Frmsportal%2FSZXCSCJTuhRSmAggBlVp.png%22%2C%22owner_id%22%3A294617%2C%22books_count%22%3A9%2C%22public_books_count%22%3A9%2C%22topics_count%22%3A0%2C%22public_topics_count%22%3A0%2C%22members_count%22%3A37%2C%22abilities%22%3A%7B%22create_book%22%3Afalse%2C%22create_member%22%3Afalse%2C%22destroy%22%3Afalse%2C%22read%22%3Atrue%2C%22read_private%22%3Afalse%2C%22update%22%3Afalse%2C%22manage%22%3Afalse%2C%22restore%22%3Afalse%7D%2C%22settings%22%3A%7B%22homepage%22%3A%7B%22layout%22%3A%7B%22content%22%3A%5B%22book_stacks%22%5D%7D%2C%22version%22%3A3%7D%2C%22navigation%22%3A%5B%22books%22%2C%22activities%22%2C%22issues%22%2C%22thread%22%5D%2C%22group%22%3A%7B%7D%2C%22id%22%3A22114766%2C%22created_at%22%3A%222023-10-07T02%3A18%3A31.000Z%22%2C%22updated_at%22%3A%222023-10-07T02%3A18%3A34.000Z%22%2C%22space_id%22%3A0%2C%22group_id%22%3A39164132%2C%22topic_enable%22%3A0%2C%22resource_enable%22%3A0%2C%22thread_enable%22%3A1%2C%22issue_enable%22%3A0%2C%22activities_enable%22%3A1%2C%22role_for_add_member%22%3A1%2C%22external_enable%22%3A0%2C%22permission%22%3A%7B%22create_member%22%3Atrue%2C%22create_book%22%3Atrue%2C%22create_book_collaborator%22%3Afalse%2C%22modify_book_setting%22%3Afalse%2C%22share_book%22%3Atrue%2C%22export_book%22%3Atrue%2C%22share_doc%22%3Atrue%2C%22export_doc%22%3Atrue%2C%22force_delete_doc%22%3Afalse%7D%7D%2C%22public%22%3A2%2C%22extend_private%22%3A0%2C%22scene%22%3A%22group-type-default%22%2C%22created_at%22%3A%222023-10-07T02%3A18%3A31.000Z%22%2C%22updated_at%22%3A%222025-09-13T03%3A47%3A17.000Z%22%2C%22organization_id%22%3A4522%2C%22member_level%22%3A0%2C%22isPaid%22%3Atrue%2C%22expired_at%22%3Anull%2C%22max_member%22%3Anull%2C%22marked%22%3Atrue%2C%22mark%22%3A%7B%22id%22%3A133568043141%2C%22user_id%22%3A22463641%2C%22action_type%22%3A%22mark%22%2C%22action_name%22%3A%22mark_user%22%2C%22action_setting_type%22%3A%22default%22%2C%22target_type%22%3A%22User%22%2C%22target_id%22%3A39164132%2C%22action_option%22%3A%22group%22%2C%22title%22%3A%22Nova%E7%A4%BE%E5%91%98-%E5%88%9D%E7%BA%A7%22%2C%22target_book_id%22%3Anull%2C%22target_group_id%22%3Anull%2C%22created_at%22%3A%222025-08-20T12%3A41%3A35.000Z%22%2C%22updated_at%22%3A%222025-08-20T12%3A41%3A36.000Z%22%2C%22action_tags%22%3A%2214781100%22%2C%22target_group%22%3Anull%2C%22target_book%22%3Anull%2C%22_url%22%3A%22%2Fgo%2Fuser%2F39164132%22%2C%22_serializer%22%3A%22web.action%22%7D%2C%22grains_sum%22%3A0%2C%22dateAutoMigrate%22%3A%222021-08-18%2000%3A00%3A00%22%2C%22forceUpgradeModal%22%3A%22true%22%2C%22zone_id%22%3A0%2C%22status%22%3A1%2C%22organization%22%3Anull%2C%22_serializer%22%3A%22web.group_detail%22%7D%2C%22groupMemberInfo%22%3A%7B%22usage%22%3A%7B%22attachment_size%22%3A4958647512%2C%22image_size%22%3A1374939120%2C%22video_size%22%3A605035741%2C%22attachment_size_month%22%3A302690040%2C%22image_size_month%22%3A161983923%2C%22video_size_month%22%3A15711918%2C%22max_upload_size%22%3A10737418240%2C%22_serializer%22%3A%22web.user_usage_statistics%22%7D%2C%22expired_at%22%3Anull%2C%22countDownDays%22%3A0%2C%22isAllowRenew%22%3Afalse%2C%22receipt%22%3Anull%2C%22groupOwners%22%3A%5B%5D%2C%22hasOrder%22%3Afalse%7D%2C%22matchCondition%22%3A%7B%22page%22%3A%22dashboard%22%7D%2C%22customTracertConfig%22%3A%7B%22spmBPos%22%3A%22group%22%7D%2C%22search%22%3A%7B%22display%22%3Atrue%2C%22scope%22%3A%22rhg37y%22%7D%2C%22canBindDepartment%22%3Atrue%2C%22newThreadEnable%22%3Afalse%2C%22organizations%22%3A%5B%7B%22id%22%3A4522%2C%22login%22%3A%22nova%22%2C%22name%22%3A%22NOVA%22%2C%22description%22%3A%22%E5%8D%97%E4%BA%AC%E5%A4%A7%E5%AD%A6%E6%99%BA%E8%83%BD%E6%95%B0%E6%8D%AE%E5%86%B3%E7%AD%96%E5%B7%A5%E4%BD%9C%E5%AE%A4%22%2C%22logo%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F294617%2F1567646355691-avatar%2Fff2f6133-4491-4a50-8fad-cfb98b73219f.png%22%2C%22password_enable%22%3A1%2C%22host%22%3A%22https%3A%2F%2Fnova.yuque.com%22%2C%22member%22%3A%7B%22name%22%3A%22%E8%B0%B7%E5%92%8C%E5%B9%B3%22%2C%22organization_id%22%3A4522%2C%22role%22%3A1%2C%22status%22%3A1%2C%22user%22%3Anull%2C%22organization%22%3A%7B%22_serializer%22%3A%22web.organization%22%7D%2C%22_serializer%22%3A%22web.organization_user%22%7D%2C%22members_count%22%3A236%2C%22_serializer%22%3A%22web.organization_base%22%7D%2C%7B%22id%22%3A28480617%2C%22login%22%3A%22peace0824%22%2C%22name%22%3A%22%E5%B0%9D%E8%AF%95%22%2C%22description%22%3Anull%2C%22logo%22%3A%22https%3A%2F%2Fgw.alipayobjects.com%2Fzos%2Fbmw-prod%2F501b3e5b-8924-45cd-95ee-4c7470570204.svg%22%2C%22password_enable%22%3A1%2C%22host%22%3A%22https%3A%2F%2Fpeace0824.yuque.com%22%2C%22member%22%3A%7B%22name%22%3A%22%E5%92%8C%E5%B9%B3%22%2C%22organization_id%22%3A28480617%2C%22role%22%3A0%2C%22status%22%3A1%2C%22user%22%3Anull%2C%22organization%22%3A%7B%22_serializer%22%3A%22web.organization%22%7D%2C%22_serializer%22%3A%22web.organization_user%22%7D%2C%22members_count%22%3A1%2C%22_serializer%22%3A%22web.organization_base%22%7D%5D%2C%22paymentInfo%22%3A%7B%22paymentBizInstId%22%3A%22Z69%22%7D%2C%22userMemberInfo%22%3A%7B%22usage%22%3A%7B%22attachment_size%22%3A0%2C%22image_size%22%3A7751336%2C%22video_size%22%3A0%2C%22attachment_size_month%22%3A0%2C%22image_size_month%22%3A7751336%2C%22video_size_month%22%3A0%2C%22max_upload_size%22%3A10737418240%2C%22_serializer%22%3A%22web.user_usage_statistics%22%7D%2C%22expired_at%22%3A%222026-09-04T15%3A59%3A59.000Z%22%2C%22countDownDays%22%3A347%2C%22isAllowRenew%22%3Afalse%2C%22receipt%22%3Anull%2C%22groupOwners%22%3A%5B%5D%2C%22hasOrder%22%3Atrue%7D%2C%22interest%22%3A%7B%22interests%22%3A%7B%22security%22%3Atrue%2C%22outsourcer%22%3Atrue%2C%22organization_department%22%3Atrue%2C%22thirdpart_address%22%3Atrue%2C%22group_department%22%3Atrue%2C%22organization_statistics%22%3Atrue%2C%22organization_week_statistics%22%3Atrue%2C%22organization_security_share%22%3Atrue%2C%22organization_security_share_logs%22%3Atrue%2C%22organization_security_document_copy%22%3Atrue%2C%22organization_security_watermark%22%3Atrue%2C%22organization_security_ips%22%3Atrue%2C%22organization_security_black_search_keywords%22%3Atrue%2C%22organization_security_domain_vaildates%22%3Atrue%2C%22organization_security_desktop%22%3Atrue%2C%22organization_security_operation_logs%22%3Atrue%2C%22organization_security_visite_logs%22%3Atrue%2C%22organization_security_warning%22%3Atrue%2C%22organization_export_content_deny%22%3Atrue%2C%22group_handover%22%3Atrue%2C%22group_statistics%22%3Atrue%2C%22group_security_logs%22%3Atrue%2C%22open_api%22%3Atrue%2C%22organization_webhook%22%3Atrue%2C%22group_webhook%22%3Atrue%2C%22public_page%22%3Atrue%7D%2C%22owner%22%3A%7B%22id%22%3A4522%2C%22type%22%3A%22Organization%22%2C%22member_level%22%3A1%2C%22isTopLevel%22%3Atrue%2C%22isMemberTopLevel%22%3Atrue%2C%22isPaid%22%3Atrue%2C%22isExpired%22%3Afalse%7D%2C%22limit%22%3A%7B%22max_doc_number%22%3Anull%2C%22max_book_number%22%3A20000%2C%22max_resource_month_size%22%3A10737418240000%2C%22max_resource_total_size%22%3Anull%2C%22max_group_number%22%3A20000%2C%22max_group_member_number%22%3Anull%2C%22max_member%22%3A550%2C%22max_book_collaborator_number%22%3A500%2C%22max_doc_collaborator_number%22%3A500%2C%22max_single_file_size%22%3A2147483648%2C%22max_single_image_size%22%3A52428800%2C%22max_single_video_size%22%3A2147483648%7D%2C%22limits%22%3A%7B%220%22%3A%7B%22max_member%22%3A550%2C%22max_doc_number%22%3A100%2C%22max_book_number%22%3A20000%2C%22max_resource_month_size%22%3A536870912000%2C%22max_resource_total_size%22%3Anull%2C%22max_group_number%22%3A100%2C%22max_group_member_number%22%3Anull%2C%22max_book_collaborator_number%22%3A5%2C%22max_doc_collaborator_number%22%3A5%2C%22max_single_file_size%22%3A31457280%2C%22max_single_image_size%22%3A10485760%2C%22max_single_video_size%22%3A0%7D%2C%221%22%3A%7B%22max_doc_number%22%3Anull%2C%22max_book_number%22%3A20000%2C%22max_resource_month_size%22%3A10737418240000%2C%22max_resource_total_size%22%3Anull%2C%22max_group_number%22%3A20000%2C%22max_group_member_number%22%3Anull%2C%22max_member%22%3A550%2C%22max_book_collaborator_number%22%3A500%2C%22max_doc_collaborator_number%22%3A500%2C%22max_single_file_size%22%3A2147483648%2C%22max_single_image_size%22%3A52428800%2C%22max_single_video_size%22%3A2147483648%7D%2C%225%22%3A%7B%22max_doc_number%22%3Anull%2C%22max_book_number%22%3A20000%2C%22max_resource_month_size%22%3A5368709120000%2C%22max_resource_total_size%22%3Anull%2C%22max_group_number%22%3A20000%2C%22max_group_member_number%22%3Anull%2C%22max_member%22%3A550%2C%22max_book_collaborator_number%22%3A50%2C%22max_doc_collaborator_number%22%3A50%2C%22max_single_file_size%22%3A524288000%2C%22max_single_image_size%22%3A20971520%2C%22max_single_video_size%22%3A524288000%7D%7D%2C%22usage%22%3A%7B%22member_count%22%3A236%2C%22group_count%22%3A125%7D%7D%2C%22captchaAppKey%22%3A%22FFFF000000000179A3AD%22%2C%22organizationUsage%22%3A%7B%22id%22%3A893%2C%22organization_id%22%3A4522%2C%22attachment_size%22%3A17180306327%2C%22video_size%22%3A2983616263%2C%22image_size%22%3A4008711170%2C%22max_upload_size%22%3A214748364800%2C%22last_updated_month%22%3A%22202509%22%2C%22attachment_size_month%22%3A1014733386%2C%22video_size_month%22%3A129147983%2C%22image_size_month%22%3A357019835%2C%22doc_count_month%22%3A683%2C%22max_upload_size_month%22%3Anull%2C%22_serializer%22%3A%22web.organization_usage_statistics%22%7D%2C%22login%22%3A%7B%22loginType%22%3A%22normal%22%2C%22enablePlatforms%22%3A%5B%22dingtalk%22%2C%22alipay%22%2C%22teambition%22%2C%22apple%22%2C%22wechat%22%5D%2C%22isWechatMobileApp%22%3Afalse%7D%2C%22isDesktopApp%22%3Afalse%2C%22isAssistant%22%3Afalse%2C%22isAlipayApp%22%3Afalse%2C%22isDingTalkApp%22%3Afalse%2C%22isDingTalkMiniApp%22%3Afalse%2C%22isDingTalkDesktopApp%22%3Afalse%2C%22isYuqueMobileApp%22%3Afalse%2C%22tracertConfig%22%3A%7B%22spmAPos%22%3A%22a385%22%2C%22spmBPos%22%3A%22group%22%7D%7D\"));\n                                                   })();\n</script>\n```\n\n> <font style=\"color:rgb(33, 33, 33);\">nonce是一个用于声明一次性的随机数的属性。它被用于script和style元素，以确保只有特定的内容可以被执行或应用。通过使用nonce属性，开发者可以提高网页的安全性，防止恶意脚本的注入和防范跨站脚本攻击（XSS）。</font>\n>\n\n> <font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">decodeURIComponent() 函数可对 encodeURIComponent() 函数编码的 URI 进行解码。</font>\n>\n\n<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">可见这一行肯定藏东西了。解码之后可以看到确实有很多关于团队和我的账号的信息。</font>\n\n<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">但是没找到知识库列表，很奇怪。</font>\n\n<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">我决定先试试从具体的知识库里能获取什么。</font>\n\n<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">还是什么都没找到。我于是把链接换成一个文档，结果是一样的。</font>\n\n<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);\">后来用F12对比了一下，发现有点不一样，进一步搜索，才明白原因。</font>\n\n> <font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 250, 250);\">一般網頁原始碼的產生有兩種形式：</font>\n>\n> <font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 250, 250);\">1. Server-Side render （靜態網頁）：是在 Server 端就產生好 HTML 資料，通常會使用後端語言，例如 PHP、JAVA、Python 等等。</font>\n>\n> <font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 250, 250);\">2. Client-Side render（動態網頁）：Server 端只會回傳相對空白的 HTML 網頁 + JavaScript 語法，等到瀏覽器接收到回傳後執行 JavaScript 才會產生更完整的結構。</font>\n>\n\n<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 250, 250);\">为了找到处理动态网页的办法，进一步检索，在调整搜索结果的时间后，找到了一篇有关动态网页处理的比较新的文章。</font>\n\n<font style=\"color:rgb(51, 51, 51);background-color:rgb(250, 250, 250);\">其中提到了selenium。果断安装。</font>\n\n> 放一下原文链接：[Selenium:突破反爬虫机制轻松获取动态网页数据](https://zhuanlan.zhihu.com/p/5251473101)\n>\n\n目前实现了自动登录，效果如下。\n\n![](https://cdn.nlark.com/yuque/0/2025/gif/22463641/1758553884922-a7393eec-d32c-44f9-b616-60e0f3324514.gif)\n\n### 换个思路\n在G学长的推荐下使用了playwright，实现了用爬虫访问语雀的动态页面。\n\n```python\nwith sync_playwright() as p:\n    browser = p.chromium.launch(headless=False)\n    context = browser.new_context()\n\n    for i in cookie_list:\n        context.add_cookies([{\"name\": i, \"value\": cookie_dict[i], \"domain\": \".yuque.com\", \"path\": \"/\"}])\n\n    page = context.new_page()\n    page.goto(\"https://nova.yuque.com/ph25ri/ua1c3q/ynl2ma8yc350o7x9\")\n```\n\n## 定位访问信息的下载地址并下载\n首先我们需要明确下载访问信息的整个过程，然后用playwright进行模拟。\n\n![gif是压缩过的，可能显示异常](https://cdn.nlark.com/yuque/0/2025/gif/22463641/1758618581739-98731eab-991b-4599-b4a5-6926fc835e9e.gif)\n\n操作很简单，只有两步：1.点击访问数据 2.点击下载明细\n\n首先通过CSS属性定位访问数据，实现点击。\n\n```python\n# 使用 CSS属性定位器定位阅读信息并点击\nreadCount = page.locator('[class*=\"readCount\"]')\nreadCount.click()\n```\n\n然后点击下载明细，通过文本查找即可。\n\n```python\npage.get_by_text(\"下载明细\").click()\n```\n\n呃，有一件很尴尬的事，在我写上面的文本之前，程序是能正常运行的，但现在文档中出现了多个“下载明细”的字样，程序无法定位元素，导致报错。\n\n改用类选择器，修复了异常。\n\n```python\npage.locator('[class*=\"style-module_downloadTxt\"]').click()\n```\n\n现已实现单个文档的访问信息下载。\n\n![下载单个文档的访问数据](https://cdn.nlark.com/yuque/0/2025/gif/22463641/1758618841348-040b745e-148e-4a2c-a8a2-4db3e2e12f6e.gif)\n\n## 分析访问信息，得出谁访问了自己的文档。\n访问信息是一个csv文件，我们需要用python读取它并提取有用的信息。\n\n粗略学习了一下相关知识，现在已经可以通过输入网址输出访问者。\n\n![](https://cdn.nlark.com/yuque/0/2025/gif/22463641/1758619855794-c0eb6dd9-f92e-4cfe-9d32-08ae4749eae7.gif)\n\n## 实现批量获取、统计信息\n感觉需要数据库的知识，打算先去简单了解一下。\n\n",
        "simhash": 17451499239931746081
    },
    "237646563": {
        "id": 237646563,
        "type": "Doc",
        "slug": "zwxgygxx9noyw9y0",
        "title": "实践操作类-洪翌铭",
        "description": "项目总目标： 一个信息聚合平台，能够汇总各个平台的信息，利用AI将消息分类整理摘要筛选，对用户进行推送，整合成一个web页面或是浏览器插件或者是带UI的应用程序供大家使用 .信息来源语雀/QQ/微信/教务网站等信息聚合部分语雀：自己的或者是关注的文章的点赞信息，评论信息，浏览信息，更新信息自选...",
        "cover": "",
        "user_id": 59025088,
        "book_id": 69189148,
        "last_editor_id": 59025088,
        "public": 2,
        "status": 1,
        "likes_count": 9,
        "read_count": 0,
        "comments_count": 0,
        "word_count": 1164,
        "created_at": "2025-09-20T15:54:36.000Z",
        "updated_at": "2025-09-23T16:08:47.000Z",
        "content_updated_at": "2025-09-22T13:50:43.000Z",
        "published_at": "2025-09-22T13:50:43.000Z",
        "first_published_at": "2025-09-20T15:54:49.355Z",
        "user": {
            "id": 59025088,
            "type": "User",
            "login": "yuqueyonghuh793gs",
            "name": "洪翌铭",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59025088/1753427230505-avatar/8c7d38d5-5243-450b-b79d-383eec494ea1.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-25T07:06:37.000Z",
            "updated_at": "2025-09-04T06:24:50.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 59025088,
            "type": "User",
            "login": "yuqueyonghuh793gs",
            "name": "洪翌铭",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/59025088/1753427230505-avatar/8c7d38d5-5243-450b-b79d-383eec494ea1.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-07-25T07:06:37.000Z",
            "updated_at": "2025-09-04T06:24:50.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "# 项目总目标：\n       一个信息聚合平台，能够汇总各个平台的信息，利用AI将消息分类整理摘要筛选，对用户进行推送，整合成一个web页面或是浏览器插件或者是带UI的应用程序供大家使用 .\n\n## 信息来源\n语雀/QQ/微信/教务网站等\n\n## 信息聚合部分\n+ 语雀：自己的或者是关注的文章的点赞信息，评论信息，浏览信息，更新信息\n\n自选关注者的文章发布信息/更新信息\n\n+ QQ：自选群聊的信息收集，关注者的信息收集\n+ 微信：自选群聊的信息收集，关注者的信息收集，特定公众号的推送消息收集\n+ 教务网站：更新通知信息收集\n\n我们希望这些信息能够统一收集，这一部分，信息只需要维持原样就好，我们不去完成信息筛选和处理的工作，只负责获取相关信息\n\n背后可能涉及的技术需求：python程序编写，OCR，逆向，爬虫，监听\n\n## 数据处理部分\n我们需要将获取到的文字、图片、表情、视频等信息去做一些相关处理以提高信息密度，剔除部分无用信息，也便于后续AI筛选\n\n+ 去除乱码、重复文本、表情包（处理方式没想好），图片视频转化为文字信息\n\n可能涉及的技术：母鸡\n\n## AI分析部分\n我们认为信息可以归类为两类，一类是代办类信息，一般格式为在什么时间点需要去做一些什么事情，另一类是知识类的信息，例如语雀知识库里头大家的文档\n\n我们希望一个信息能够具备以下的一些内容  \n1.\t信息主体  \n2.\t信息标签，例如[活动通知][python学习]等  \n3.\t信息来源  \n4.\t信息时间  \n5.\t信息概要\n\n目标：\n\n+ 语雀：能够统计每个人的任务完成情况，统计每个人选择的分支，在同分支下生成所有文档的总结\n+ 微信，QQ群：能够以时间段为顺序，将临近时间主题相近的讨论收录为话题，按照话题整理出相应的聊天内容。能从聊天记录中识别出重要通知\n+ 教务网站：能够精准地提取通知中重要的信息，如果可以的话自动生成代办事项\n\n可能设计的技术：AI的api调用\n\n### 展望\n也许我们可以尝试建立一个比较接近通用Agent的玩意，我们先预存一些常用指令供用户选择，其余的一些其他需求我们可以让用户直接输入自然语言指令来从知识库中查找对应内容或是完成任务，如果自然语言识别有障碍，也可以采用某些有限制的语法来实现\n\n\n\n## 消息推送部分\n首先确定消息推送的形式和相关的技术，如是通过QQbot，还是应用内新消息提醒，还是干脆发邮箱\n\n也需要建立一个完善的消息推送的逻辑，是我选择某一些关注事项推送，还是把价值的判断交给AI，让AI分析出重要的消息再进行推送\n\n怎么将消息传输到最终的应用程序也是值得思考的问题\n\n可能涉及的技术：QQbot，Webhook、Rss、Mail等\n\n## 程序运行平台方面\n我们的平台最终应该是一个web/APP/浏览器插件/本地程序\n\n怎么能让用户最快捷方便地使用本应用\n\n信息获取后存放在服务器还是本地\n\n如果希望部署一个服务器应该怎么操作\n\n可能涉及的技术：母鸡\n\n## UI界面方面\n我们需要一个好看的UI，这十分重要！\n\n我们需要一个厉害的前端！\n\n可能涉及的技术：感觉也要看我们的应用最终是建立在什么平台上，怎么供用户使用\n\n## 项目协作流程方面\n参考张润程的[GitHub项目协作的不完全指南]\n\n[GitHub项目协作的不完全指南]([https://nova.yuque.com/ph25ri/ua1c3q/btag7pk04rf77y94](https://nova.yuque.com/ph25ri/ua1c3q/btag7pk04rf77y94))\n\n",
        "simhash": 11680541179381941024
    },
    "237645101": {
        "id": 237645101,
        "type": "Doc",
        "slug": "kggfy0fa8zfnlawe",
        "title": "Python学习类-徐愉",
        "description": "分支2.5：生成训练习题如果你按部就班的学习了一些知识点，想要试一试，练一练或者你感觉某个具体的知识点掌握的还较为欠缺，请使用AI生成测试习题和参考答案使用的AI工具：Deepseek调试过程：很久没有写Python，加上本身只懂基础的语法，把deepseek第一次生成的题目当做温故，并没有进...",
        "cover": "",
        "user_id": 60654485,
        "book_id": 69189148,
        "last_editor_id": 60654485,
        "public": 2,
        "status": 1,
        "likes_count": 4,
        "read_count": 0,
        "comments_count": 1,
        "word_count": 2226,
        "created_at": "2025-09-20T15:22:19.000Z",
        "updated_at": "2025-09-22T14:01:18.000Z",
        "content_updated_at": "2025-09-22T14:01:17.000Z",
        "published_at": "2025-09-22T14:01:17.000Z",
        "first_published_at": "2025-09-20T16:00:10.456Z",
        "user": {
            "id": 60654485,
            "type": "User",
            "login": "u58975022",
            "name": "徐愉",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60654485/1758540612487-avatar/dc6609fb-a9dc-4385-b925-e3fa24d5efa4.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-12T06:10:07.000Z",
            "updated_at": "2025-09-15T10:19:02.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "last_editor": {
            "id": 60654485,
            "type": "User",
            "login": "u58975022",
            "name": "徐愉",
            "avatar_url": "https://cdn.nlark.com/yuque/0/2025/jpeg/60654485/1758540612487-avatar/dc6609fb-a9dc-4385-b925-e3fa24d5efa4.jpeg",
            "followers_count": 0,
            "following_count": 0,
            "public": 1,
            "description": "",
            "created_at": "2025-09-12T06:10:07.000Z",
            "updated_at": "2025-09-15T10:19:02.000Z",
            "work_id": "",
            "organization_id": 0,
            "_serializer": "v2.user"
        },
        "hits": 0,
        "_serializer": "v2.doc",
        "body": "**分支2.5：生成训练习题**\n\n如果你按部就班的学习了一些知识点，想要试一试，练一练\n\n或者你感觉某个具体的知识点掌握的还较为欠\n\n缺，请使用AI生成测试习题和参考答案\n\n---\n\n+ 使用的AI工具：Deepseek\n+ 调试过程：很久没有写Python，加上本身只懂基础的语法，把deepseek第一次生成的题目当做温故，并没有进一步进行调试\n\n# 1.使用Deepseek生成习题\n### **<font style=\"color:rgb(15, 17, 21);\">习题：学生成绩分析器</font>**\n**<font style=\"color:rgb(15, 17, 21);\">任务描述：</font>**<font style=\"color:rgb(15, 17, 21);\">  \n</font><font style=\"color:rgb(15, 17, 21);\">请你编写一个Python程序，帮助老师分析一个班级的学生成绩。程序需要完成以下功能：</font>\n\n1. **<font style=\"color:rgb(15, 17, 21);\">输入成绩</font>**<font style=\"color:rgb(15, 17, 21);\">：允许用户输入任意数量的学生成绩（0-100之间的整数），输入</font><font style=\"color:rgb(15, 17, 21);\"> </font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">-1</font>`<font style=\"color:rgb(15, 17, 21);\"> </font><font style=\"color:rgb(15, 17, 21);\">表示输入结束。</font>\n2. **<font style=\"color:rgb(15, 17, 21);\">计算统计量</font>**<font style=\"color:rgb(15, 17, 21);\">：计算并输出所有成绩的</font><font style=\"color:rgb(15, 17, 21);\"> </font>**<font style=\"color:rgb(15, 17, 21);\">平均分</font>**<font style=\"color:rgb(15, 17, 21);\">、</font>**<font style=\"color:rgb(15, 17, 21);\">最高分</font>**<font style=\"color:rgb(15, 17, 21);\"> </font><font style=\"color:rgb(15, 17, 21);\">和</font><font style=\"color:rgb(15, 17, 21);\"> </font>**<font style=\"color:rgb(15, 17, 21);\">最低分</font>**<font style=\"color:rgb(15, 17, 21);\">。</font>\n3. **<font style=\"color:rgb(15, 17, 21);\">成绩等级分布</font>**<font style=\"color:rgb(15, 17, 21);\">：统计并输出成绩在不同等级区间的学生人数。等级划分如下：</font>\n+ <font style=\"color:rgb(15, 17, 21);\">A: 90-100</font>\n+ <font style=\"color:rgb(15, 17, 21);\">B: 80-89</font>\n+ <font style=\"color:rgb(15, 17, 21);\">C: 70-79</font>\n+ <font style=\"color:rgb(15, 17, 21);\">D: 60-69</font>\n+ <font style=\"color:rgb(15, 17, 21);\">F: <60</font>\n\n```plain\n请输入学生成绩（输入-1结束）:\n成绩: 85\n成绩: 92\n成绩: 78\n成绩: 56\n成绩: 100\n成绩: 67\n成绩: -1\n\n===== 成绩分析报告 =====\n有效成绩数量: 6\n平均分: 79.67\n最高分: 100\n最低分: 56\n\n----- 等级分布 -----\nA (90-100): 2 人\nB (80-89): 1 人\nC (70-79): 1 人\nD (60-69): 1 人\nF (<60): 1 人\n```\n\n```python\nprint(\"请输入学生成绩（输入-1结束）\")\nmax = 0\nmin = 100\neff_num = 0\nsum = 0\nA_num = 0\nB_num = 0\nC_num = 0\nD_num = 0\nF_num = 0\nscore = int(input(\"成绩：\"))\nwhile score != -1:\n    sum += score\n    eff_num += 1\n    if score > max:\n        max = score\n    if score < min:\n        min = score\n    if 90 <= score <= 100:\n        A_num += 1\n    if 80 <= score <= 89:\n        B_num += 1\n    if 70 <= score <= 79:\n        C_num += 1\n    if 60 <= score <= 69:\n        D_num += 1\n    if score < 60:\n        F_num += 1\n    score = int(input(\"成绩：\"))\n\naverage = sum / eff_num\nprint(\"===== 成绩分析报告 =====\")\nprint(f\"有效成绩数量:{eff_num}\\n平均分:{average}\\n最高分:{max}\\n最低分:{min}\\n\")\nprint(\"----- 等级分布 -----\")\nprint(f\"A(90-100):{A_num}人\\nB(80-89):{B_num}人\\nC(70-79):{C_num}人\\nD(60-69):{D_num}人\\nF(<60):{F_num}人\")\n```\n\n```python\ndef main():\n    scores = []\n    print(\"请输入学生成绩（输入-1结束）:\")\n\n    # 1. 输入循环\n    while True:\n        try:\n            score = int(input(\"成绩: \"))\n            if score == -1:\n                break  # 输入-1，退出循环\n            elif 0 <= score <= 100:\n                scores.append(score)  # 有效成绩，加入列表\n            else:\n                print(\"警告：成绩应在0-100之间，已忽略。\")\n        except ValueError:\n            print(\"警告：请输入一个整数，已忽略。\")\n\n    # 检查是否输入了有效成绩\n    if not scores:\n        print(\"未输入任何有效成绩。\")\n        return\n\n    # 2. 计算基本统计量\n    total = sum(scores)\n    average = total / len(scores)\n    max_score = max(scores)\n    min_score = min(scores)\n\n    # 3. 初始化等级计数器\n    grade_count = {'A': 0, 'B': 0, 'C': 0, 'D': 0, 'F': 0}\n\n    # 遍历所有成绩，进行等级判定和计数\n    for s in scores:\n        if s >= 90:\n            grade_count['A'] += 1\n        elif s >= 80:\n            grade_count['B'] += 1\n        elif s >= 70:\n            grade_count['C'] += 1\n        elif s >= 60:\n            grade_count['D'] += 1\n        else:\n            grade_count['F'] += 1\n\n    # 4. 格式化输出结果\n    print(\"\\n===== 成绩分析报告 =====\")\n    print(f\"有效成绩数量: {len(scores)}\")\n    print(f\"平均分: {average:.2f}\")  # 保留两位小数\n    print(f\"最高分: {max_score}\")\n    print(f\"最低分: {min_score}\")\n\n    print(\"\\n----- 等级分布 -----\")\n    print(f\"A (90-100): {grade_count['A']} 人\")\n    print(f\"B (80-89):  {grade_count['B']} 人\")\n    print(f\"C (70-79):  {grade_count['C']} 人\")\n    print(f\"D (60-69):  {grade_count['D']} 人\")\n    print(f\"F (<60):    {grade_count['F']} 人\")\n\n# 运行主函数\nif __name__ == \"__main__\":\n    main()\n```\n\n# 2.反思\n#### 对比DS和自己的代码，确实体现了非常多的问题\n+ DS以函数形式编写，方便了以后的调用，而我仅仅是为了完成所提出的要求进行编写，并没有考虑到实际的应用情况\n+ DS使用列表、字典来存储数据，当需要大量数据时，我一个个定义和调取变量就变得麻烦。这也体现了我对数据容器的不熟练和思维上的缺失\n+ DS实现了异常捕获和处理，我在写代码时并没有考虑到这个问题。对在实际使用时可能发生的错误没有经验\n+ DS有注释，我还没有养成写注释的习惯\n\n**综上可总结为两点**\n\n+ 对某些语法无法熟练应用\n+ 对实际的应用情况没有经验\n\n# 3.针对具体问题让Deepseek再次生成习题\n### **<font style=\"color:rgb(15, 17, 21);\">习题：员工信息管理系统 (基础版)</font>**\n<font style=\"color:rgb(15, 17, 21);\">你正在为一个公司开发一个简单的员工信息管理系统。你需要使用不同的数据容器来存储和操作数据。</font>\n\n**<font style=\"color:rgb(15, 17, 21);\">请完成以下任务：</font>**\n\n1. **<font style=\"color:rgb(15, 17, 21);\">创建初始数据结构：</font>**\n    - <font style=\"color:rgb(15, 17, 21);\">创建一个</font>**<font style=\"color:rgb(15, 17, 21);\">列表</font>**<font style=\"color:rgb(15, 17, 21);\"> </font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">employees</font>`<font style=\"color:rgb(15, 17, 21);\">，其中包含3个</font>**<font style=\"color:rgb(15, 17, 21);\">元组</font>**<font style=\"color:rgb(15, 17, 21);\">。每个元组代表一个员工，结构为 (</font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">员工ID</font>`<font style=\"color:rgb(15, 17, 21);\">,</font><font style=\"color:rgb(15, 17, 21);\"> </font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">姓名</font>`<font style=\"color:rgb(15, 17, 21);\">,</font><font style=\"color:rgb(15, 17, 21);\"> </font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">部门</font>`<font style=\"color:rgb(15, 17, 21);\">)。</font><font style=\"color:rgb(15, 17, 21);\">  \n</font><font style=\"color:rgb(15, 17, 21);\">初始数据：</font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">(101, 'Alice', '研发部')</font>`<font style=\"color:rgb(15, 17, 21);\">,</font><font style=\"color:rgb(15, 17, 21);\"> </font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">(102, 'Bob', '市场部')</font>`<font style=\"color:rgb(15, 17, 21);\">,</font><font style=\"color:rgb(15, 17, 21);\"> </font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">(103, 'Charlie', '研发部')</font>`\n2. **<font style=\"color:rgb(15, 17, 21);\">添加新员工：</font>**\n    - <font style=\"color:rgb(15, 17, 21);\">提示用户输入一个新员工的信息（ID、姓名、部门），然后将这些信息作为一个</font>**<font style=\"color:rgb(15, 17, 21);\">新元组</font>**<font style=\"color:rgb(15, 17, 21);\">添加到</font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">employees</font>`<font style=\"color:rgb(15, 17, 21);\">列表中。</font>\n3. **<font style=\"color:rgb(15, 17, 21);\">统计部门人数：</font>**\n    - <font style=\"color:rgb(15, 17, 21);\">创建一个</font>**<font style=\"color:rgb(15, 17, 21);\">字典</font>**<font style=\"color:rgb(15, 17, 21);\"> </font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">dept_count</font>`<font style=\"color:rgb(15, 17, 21);\">，用于统计每个部门的员工数量。</font><font style=\"color:rgb(15, 17, 21);\">  \n</font><font style=\"color:rgb(15, 17, 21);\">遍历</font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">employees</font>`<font style=\"color:rgb(15, 17, 21);\">列表，完成这个统计。例如，输出可能是：</font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">{'研发部': 2, '市场部': 1}</font>`\n4. **<font style=\"color:rgb(15, 17, 21);\">查询和更新部门：</font>**\n    - <font style=\"color:rgb(15, 17, 21);\">提示用户输入一个员工姓名。</font>\n    - <font style=\"color:rgb(15, 17, 21);\">如果该员工存在，则提示用户输入新的部门名称，并更新该员工在列表中的部门信息。</font><font style=\"color:rgb(15, 17, 21);\">  \n</font>**<font style=\"color:rgb(15, 17, 21);\">注意：元组是不可变的，你需要思考如何“更新”它。</font>**\n    - <font style=\"color:rgb(15, 17, 21);\">如果员工不存在，则打印提示信息。</font>\n5. **<font style=\"color:rgb(15, 17, 21);\">获取所有不重复的部门：</font>**\n    - <font style=\"color:rgb(15, 17, 21);\">使用</font>**<font style=\"color:rgb(15, 17, 21);\">集合</font>**<font style=\"color:rgb(15, 17, 21);\">来从</font>`<font style=\"color:rgb(15, 17, 21);background-color:rgb(235, 238, 242);\">employees</font>`<font style=\"color:rgb(15, 17, 21);\">中获取所有不重复的部门名称，并打印出来。</font>\n\n```python\nemployees = [(101, 'Alice', '研发部'), (102, 'Bob', '市场部'), (103, 'Charlie', '研发部')]\nnew_employees_ID = int(input(\"请输入新员工ID：\"))\nnew_employees_name = input(\"请输入新员工姓名：\")\nnew_employees_sector = input(\"请输入新员工部门\")\nemployees.append((new_employees_ID, new_employees_name, new_employees_sector))\ndept_count = {\"研发部\":0,\"市场部\":0}\nfor employee in employees:\n    if employee[2] == \"研发部\":\n        dept_count[\"研发部\"] += 1\n    else:\n        dept_count[\"市场部\"] += 1\nprint(dept_count)\nname = input(\"请输入员工姓名\")\nnum = 0\nfor employee in employees:\n    if employee[1] == name:\n        new_sector = input(\"请输入该员工所属新部门：\")\n        del(employees[num])\n        employees.insert(num,(100+num+1,name,new_sector))\n    else:\n        num += 1\nif num == 4:\n    print(\"无此员工\")\nprint(employees)\nsector_collection = set()\nfor i in employees:\n    sector_collection.add(i[2])\nprint(f\"部门有{sector_collection}\")\n```\n\n```python\n9# 任务 1: 创建初始数据结构\nemployees = [(101, 'Alice', '研发部'), (102, 'Bob', '市场部'), (103, 'Charlie', '研发部')]\nprint(\"初始员工列表:\", employees)\n\n# 任务 2: 添加新员工\nprint(\"\\n--- 添加新员工 ---\")\nnew_id = int(input(\"请输入新员工ID: \"))\nnew_name = input(\"请输入新员工姓名: \")\nnew_dept = input(\"请输入新员工部门: \")\n\nnew_employee = (new_id, new_name, new_dept) # 创建新元组\nemployees.append(new_employee) # 将新元组添加到列表\nprint(\"添加成功！当前员工列表:\", employees)\n\n# 任务 3: 统计部门人数\ndept_count = {} # 创建一个空字典\n# 遍历员工列表\nfor emp in employees:\n    dept = emp[2] # 获取元组的第三个元素，即部门\n    # 如果部门已在字典中，计数+1；否则，将部门加入字典并设置计数为1\n    if dept in dept_count:\n        dept_count[dept] += 1\n    else:\n        dept_count[dept] = 1\n\nprint(\"\\n各部门人数统计:\", dept_count)\n\n# 任务 4: 查询和更新部门\nprint(\"\\n--- 更新员工部门 ---\")\nsearch_name = input(\"请输入要修改部门的员工姓名: \")\n\nfound = False\n# 遍历列表，同时获取索引和元素\nfor index, emp in enumerate(employees):\n    if emp[1] == search_name: # 检查姓名是否匹配\n        found = True\n        new_dept_name = input(f\"找到了员工 {search_name}。请输入新的部门名称: \")\n        # 元组不可变，因此需要创建一个新的元组来替换旧的\n        # 根据旧元组emp构建新元组：(旧ID, 旧姓名, 新部门)\n        updated_employee = (emp[0], emp[1], new_dept_name)\n        employees[index] = updated_employee # 在列表的特定位置替换元素\n        print(\"部门更新成功！\")\n        break # 找到后退出循环\n\nif not found:\n    print(f\"未找到姓名为 {search_name} 的员工。\")\n\nprint(\"更新后的员工列表:\", employees)\n\n# 任务 5: 获取所有不重复的部门\n# 使用集合推导式从员工列表中提取部门，集合会自动去重\nunique_departments = {emp[2] for emp in employees}\nprint(\"\\n所有不重复的部门:\", unique_departments)\n```\n\n",
        "simhash": 3982677176142206969
    }
}